{"version":3,"sources":["../../src/tools/resolveEntryPoint.ts"],"names":["supportedPlatforms","resolveEntryPoint","projectRoot","platform","projectConfig","includes","Error","platforms","entry","path","relative"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,kBAAkB,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmB,KAAnB,CAA3B;;AAEO,SAASC,iBAAT,CACLC,WADK,EAELC,QAFK,EAGLC,aAHK,EAIG;AACR,MAAID,QAAQ,IAAI,CAACH,kBAAkB,CAACK,QAAnB,CAA4BF,QAA5B,CAAjB,EAAwD;AACtD,UAAM,IAAIG,KAAJ,CACH,6DAA4DH,QAAS,qBADlE,CAAN;AAGD,GALO,CAMR;AACA;;;AACA,QAAMI,SAAmB,GAAG,EAA5B;AAEA,QAAMC,KAAK,GAAG,4BAAcN,WAAd,EAA2B,CAAC,SAAD,CAA3B,EAAwCK,SAAxC,EAAmDH,aAAnD,CAAd;AACA,MAAI,CAACI,KAAL,EACE,MAAM,IAAIF,KAAJ,CACH,gMADG,CAAN;AAIF,SAAOG,gBAAKC,QAAL,CAAcR,WAAd,EAA2BM,KAA3B,CAAP;AACD","sourcesContent":["import { ProjectConfig } from '@expo/config';\nimport { getEntryPoint } from '@expo/config/paths';\nimport path from 'path';\n\nconst supportedPlatforms = ['ios', 'android', 'web'];\n\nexport function resolveEntryPoint(\n  projectRoot: string,\n  platform?: string,\n  projectConfig?: ProjectConfig\n): string {\n  if (platform && !supportedPlatforms.includes(platform)) {\n    throw new Error(\n      `Failed to resolve the project's entry file: The platform \"${platform}\" is not supported.`\n    );\n  }\n  // TODO: Bacon: support platform extension resolution like .ios, .native\n  // const platforms = [platform, 'native'].filter(Boolean) as string[];\n  const platforms: string[] = [];\n\n  const entry = getEntryPoint(projectRoot, ['./index'], platforms, projectConfig);\n  if (!entry)\n    throw new Error(\n      `The project entry file could not be resolved. Please either define it in the \\`package.json\\` (main), \\`app.json\\` (expo.entryPoint), create an \\`index.js\\`, or install the \\`expo\\` package.`\n    );\n\n  return path.relative(projectRoot, entry);\n}\n"],"file":"resolveEntryPoint.js"}