{"version":3,"sources":["../src/UserSettings.ts"],"names":["SETTINGS_FILE_NAME","userSettingsFile","path","join","dotExpoHomeDirectory","userSettingsJsonFile","JsonFile","jsonParseErrorDefault","cantReadFileDefault","mkdirped","dirPath","process","env","__UNSAFE_EXPO_HOME_DIRECTORY","home","os","homedir","Env","isStaging","isLocal","fs","mkdirpSync","getAnonymousIdentifierAsync","settings","id","getAsync","setAsync","accessToken","EXPO_TOKEN","UserSettings","Object","assign"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAuBA,MAAMA,kBAAkB,GAAG,YAA3B;;AAEA,SAASC,gBAAT,GAAoC;AAClC,SAAOC,gBAAKC,IAAL,CAAUC,oBAAoB,EAA9B,EAAkCJ,kBAAlC,CAAP;AACD;;AAED,SAASK,oBAAT,GAA4D;AAC1D,SAAO,KAAIC,mBAAJ,EAA+BL,gBAAgB,EAA/C,EAAmD;AACxDM,IAAAA,qBAAqB,EAAE,EADiC;AAExDC,IAAAA,mBAAmB,EAAE;AAFmC,GAAnD,CAAP;AAID;;AAED,IAAIC,QAAQ,GAAG,KAAf;;AAEA,SAASL,oBAAT,GAAgC;AAC9B,MAAIM,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,4BAA1B;;AACA,MAAI,CAACH,OAAL,EAAc;AACZ,UAAMI,IAAI,GAAGC,cAAGC,OAAH,EAAb;;AAEA,QAAIC,gBAAIC,SAAJ,EAAJ,EAAqB;AACnBR,MAAAA,OAAO,GAAGR,gBAAKC,IAAL,CAAUW,IAAV,EAAgB,eAAhB,CAAV;AACD,KAFD,MAEO,IAAIG,gBAAIE,OAAJ,EAAJ,EAAmB;AACxBT,MAAAA,OAAO,GAAGR,gBAAKC,IAAL,CAAUW,IAAV,EAAgB,aAAhB,CAAV;AACD,KAFM,MAEA;AACLJ,MAAAA,OAAO,GAAGR,gBAAKC,IAAL,CAAUW,IAAV,EAAgB,OAAhB,CAAV;AACD;AACF;;AACD,MAAI,CAACL,QAAL,EAAe;AACbW,uBAAGC,UAAH,CAAcX,OAAd;;AACAD,IAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,SAAOC,OAAP;AACD,C,CAED;;;AACA,eAAeY,2BAAf,GAA8D;AAC5D,QAAMC,QAAQ,GAAG,MAAMlB,oBAAoB,EAA3C;AACA,MAAImB,EAAE,GAAG,MAAMD,QAAQ,CAACE,QAAT,CAAkB,MAAlB,EAA0B,IAA1B,CAAf;;AAEA,MAAI,CAACD,EAAL,EAAS;AACPA,IAAAA,EAAE,GAAG,iBAAL;AACA,UAAMD,QAAQ,CAACG,QAAT,CAAkB,MAAlB,EAA0BF,EAA1B,CAAN;AACD;;AAED,SAAOA,EAAP;AACD;;AAED,SAASG,WAAT,GAAsC;AACpC,SAAOhB,OAAO,CAACC,GAAR,CAAYgB,UAAZ,IAA0B,IAAjC;AACD;;AAED,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc1B,oBAAoB,EAAlC,EAAsC;AACzDD,EAAAA,oBADyD;AAEzDH,EAAAA,gBAFyD;AAGzDI,EAAAA,oBAHyD;AAIzDsB,EAAAA,WAJyD;AAKzDL,EAAAA,2BALyD;AAMzDtB,EAAAA;AANyD,CAAtC,CAArB;eASe6B,Y","sourcesContent":["import JsonFile from '@expo/json-file';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ConnectionType, Env } from './internal';\n\nexport type UserSettingsData = {\n  developmentCodeSigningId?: string;\n  appleId?: string;\n  accessToken?: string;\n  auth?: UserData | null;\n  ignoreBundledBinaries?: string[];\n  openDevToolsAtStartup?: boolean;\n  PATH?: string;\n  sendTo?: string;\n  uuid?: string;\n};\n\nexport type UserData = {\n  developmentCodeSigningId?: string;\n  appleId?: string;\n  userId?: string;\n  username?: string;\n  currentConnection?: ConnectionType;\n  sessionSecret?: string;\n};\n\nconst SETTINGS_FILE_NAME = 'state.json';\n\nfunction userSettingsFile(): string {\n  return path.join(dotExpoHomeDirectory(), SETTINGS_FILE_NAME);\n}\n\nfunction userSettingsJsonFile(): JsonFile<UserSettingsData> {\n  return new JsonFile<UserSettingsData>(userSettingsFile(), {\n    jsonParseErrorDefault: {},\n    cantReadFileDefault: {},\n  });\n}\n\nlet mkdirped = false;\n\nfunction dotExpoHomeDirectory() {\n  let dirPath = process.env.__UNSAFE_EXPO_HOME_DIRECTORY;\n  if (!dirPath) {\n    const home = os.homedir();\n\n    if (Env.isStaging()) {\n      dirPath = path.join(home, '.expo-staging');\n    } else if (Env.isLocal()) {\n      dirPath = path.join(home, '.expo-local');\n    } else {\n      dirPath = path.join(home, '.expo');\n    }\n  }\n  if (!mkdirped) {\n    fs.mkdirpSync(dirPath);\n    mkdirped = true;\n  }\n  return dirPath;\n}\n\n// returns an anonymous, unique identifier for a user on the current computer\nasync function getAnonymousIdentifierAsync(): Promise<string> {\n  const settings = await userSettingsJsonFile();\n  let id = await settings.getAsync('uuid', null);\n\n  if (!id) {\n    id = uuidv4();\n    await settings.setAsync('uuid', id);\n  }\n\n  return id;\n}\n\nfunction accessToken(): string | null {\n  return process.env.EXPO_TOKEN || null;\n}\n\nconst UserSettings = Object.assign(userSettingsJsonFile(), {\n  dotExpoHomeDirectory,\n  userSettingsFile,\n  userSettingsJsonFile,\n  accessToken,\n  getAnonymousIdentifierAsync,\n  SETTINGS_FILE_NAME,\n});\n\nexport default UserSettings;\n"],"file":"UserSettings.js"}