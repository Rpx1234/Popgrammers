{"version":3,"sources":["../src/Extract.ts"],"names":["extractAsync","archive","dir","process","platform","stdio","cwd","__dirname","e","console","error","message","tar","extract","file"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,eAAeA,YAAf,CAA4BC,OAA5B,EAA6CC,GAA7C,EAAyE;AAC9E,MAAI;AACF,QAAIC,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AAChC,YAAM,2BAAW,KAAX,EAAkB,CAAC,KAAD,EAAQH,OAAR,EAAiB,IAAjB,EAAuBC,GAAvB,CAAlB,EAA+C;AACnDG,QAAAA,KAAK,EAAE,SAD4C;AAEnDC,QAAAA,GAAG,EAAEC;AAF8C,OAA/C,CAAN;AAIA;AACD;AACF,GARD,CAQE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD,GAX6E,CAY9E;AACA;;;AACA,QAAMC,eAAIC,OAAJ,CAAY;AAAEC,IAAAA,IAAI,EAAEb,OAAR;AAAiBK,IAAAA,GAAG,EAAEJ;AAAtB,GAAZ,CAAN;AACD","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport tar from 'tar';\n\nexport async function extractAsync(archive: string, dir: string): Promise<void> {\n  try {\n    if (process.platform !== 'win32') {\n      await spawnAsync('tar', ['-xf', archive, '-C', dir], {\n        stdio: 'inherit',\n        cwd: __dirname,\n      });\n      return;\n    }\n  } catch (e) {\n    console.error(e.message);\n  }\n  // tar node module has previously had problems with big files, and seems to\n  // be slower, so only use it as a backup.\n  await tar.extract({ file: archive, cwd: dir });\n}\n"],"file":"Extract.js"}