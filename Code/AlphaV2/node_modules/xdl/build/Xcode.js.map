{"version":3,"sources":["../src/Xcode.ts"],"names":["minimumVersion","appStoreId","_xcodeVersion","getXcodeVersion","last","stdio","toString","match","Logger","global","error","openAppStore","appId","link","getAppStoreLink","process","platform"],"mappings":";;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AACO,MAAMA,cAAc,GAAG,GAAvB;;AACA,MAAMC,UAAU,GAAG,WAAnB;;AAEP,IAAIC,aAAoC,GAAG,KAA3C;;AAEO,SAASC,eAAT,GAA0C;AAC/C;AACA;AACA,MAAID,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WAAOA,aAAP;AACD;;AACD,MAAI;AAAA;;AACF,UAAME,IAAI,4BAAG,+BAAS,qBAAT,EAAgC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAhC,EACVC,QADU,GAEVC,KAFU,CAEJ,mBAFI,CAAH,0DAAG,sBAEmB,CAFnB,CAAb,CADE,CAIF;;AACA,QAAIH,IAAJ,EAAU;AACRF,MAAAA,aAAa,GAAI,GAAEE,IAAK,IAAxB;AACA,aAAOF,aAAP;AACD,KARC,CASF;;;AACAM,uBAAOC,MAAP,CAAcC,KAAd,CACE,0FADF;AAGD,GAbD,CAaE,MAAM,CACN;AACD;;AACDR,EAAAA,aAAa,GAAG,IAAhB;AACA,SAAOA,aAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASS,YAAT,CAAsBC,KAAtB,EAAqC;AAC1C,QAAMC,IAAI,GAAGC,eAAe,CAACF,KAAD,CAA5B;AACA,iCAAU,QAAOC,IAAK,EAAtB,EAAyB;AAAER,IAAAA,KAAK,EAAE;AAAT,GAAzB;AACD;;AAED,SAASS,eAAT,CAAyBF,KAAzB,EAAgD;AAC9C,MAAIG,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;AACjC;AACA,WAAQ,wCAAuCJ,KAAM,EAArD;AACD;;AACD,SAAQ,mCAAkCA,KAAM,EAAhD;AACD","sourcesContent":["import { execSync } from 'child_process';\n\nimport { Logger } from './internal';\n\n// Based on the RN docs (Aug 2020).\nexport const minimumVersion = 9.4;\nexport const appStoreId = '497799835';\n\nlet _xcodeVersion: string | null | false = false;\n\nexport function getXcodeVersion(): string | null {\n  // This method anywhere from 1-2s so cache the results in case we run it multiple times\n  // (like in run:ios or reopening on iOS for development build).\n  if (_xcodeVersion !== false) {\n    return _xcodeVersion;\n  }\n  try {\n    const last = execSync('xcodebuild -version', { stdio: 'pipe' })\n      .toString()\n      .match(/^Xcode (\\d+\\.\\d+)/)?.[1];\n    // Convert to a semver string\n    if (last) {\n      _xcodeVersion = `${last}.0`;\n      return _xcodeVersion;\n    }\n    // not sure what's going on\n    Logger.global.error(\n      'Unable to check Xcode version. Command ran successfully but no version number was found.'\n    );\n  } catch {\n    // not installed\n  }\n  _xcodeVersion = null;\n  return _xcodeVersion;\n}\n\n/**\n * Open a link to the App Store. Just link in mobile apps, **never** redirect without prompting first.\n *\n * @param appId\n */\nexport function openAppStore(appId: string) {\n  const link = getAppStoreLink(appId);\n  execSync(`open ${link}`, { stdio: 'ignore' });\n}\n\nfunction getAppStoreLink(appId: string): string {\n  if (process.platform === 'darwin') {\n    // TODO: Is there ever a case where the macappstore isn't available on mac?\n    return `macappstore://itunes.apple.com/app/id${appId}`;\n  }\n  return `https://apps.apple.com/us/app/id${appId}`;\n}\n"],"file":"Xcode.js"}