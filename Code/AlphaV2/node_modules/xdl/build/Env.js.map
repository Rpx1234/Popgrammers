{"version":3,"sources":["../src/Env.ts"],"names":["isDebug","getenv","boolish","isStaging","isLocal","isInterstitiaLPageEnabled","maySkipManifestValidation","string","shouldUseDevServer","exp","Versions","lteSdkVersion","shouldEnableAnalytics"],"mappings":";;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,OAAT,GAA4B;AACjC,SAAOC,kBAAOC,OAAP,CAAe,YAAf,EAA6B,KAA7B,CAAP;AACD;;AAEM,SAASC,SAAT,GAA8B;AACnC,SAAOF,kBAAOC,OAAP,CAAe,cAAf,EAA+B,KAA/B,CAAP;AACD;;AAEM,SAASE,OAAT,GAA4B;AACjC,SAAOH,kBAAOC,OAAP,CAAe,YAAf,EAA6B,KAA7B,CAAP;AACD,C,CAED;;;AACO,SAASG,yBAAT,GAA8C;AACnD,SAAO,IAAP;AACD;;AAEM,SAASC,yBAAT,GAA8C;AACnD,SAAO,CAAC,CAACL,kBAAOM,MAAP,CAAc,qCAAd,CAAT;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASC,kBAAT,CAA4BC,GAA5B,EAAiE;AACtE,SAAO,CAACC,qBAASC,aAAT,CAAuBF,GAAvB,EAA4B,QAA5B,CAAD,IAA0CR,kBAAOC,OAAP,CAAe,qBAAf,EAAsC,KAAtC,CAAjD;AACD,C,CAED;;;AACO,SAASU,qBAAT,GAAiC;AACtC,SAAO,CAACX,kBAAOC,OAAP,CAAe,KAAf,EAAsB,KAAtB,CAAD,IAAiC,CAACD,kBAAOC,OAAP,CAAe,IAAf,EAAqB,KAArB,CAAzC;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport getenv from 'getenv';\n\nimport { Versions } from './internal';\n\nexport function isDebug(): boolean {\n  return getenv.boolish('EXPO_DEBUG', false);\n}\n\nexport function isStaging(): boolean {\n  return getenv.boolish('EXPO_STAGING', false);\n}\n\nexport function isLocal(): boolean {\n  return getenv.boolish('EXPO_LOCAL', false);\n}\n\n// TODO: remove this function once all related PRs have landed and there's no chance for conflict\nexport function isInterstitiaLPageEnabled(): boolean {\n  return true;\n}\n\nexport function maySkipManifestValidation(): boolean {\n  return !!getenv.string('EXPO_SKIP_MANIFEST_VALIDATION_TOKEN');\n}\n\n/**\n * Returns true if we should use Metro using its JS APIs via @expo/dev-server (the modern and fast\n * way), false if we should fall back to spawning it as a subprocess (supported for backwards\n * compatibility with SDK39 and older).\n */\nexport function shouldUseDevServer(exp: Pick<ExpoConfig, 'sdkVersion'>) {\n  return !Versions.lteSdkVersion(exp, '39.0.0') || getenv.boolish('EXPO_USE_DEV_SERVER', false);\n}\n\n// do not allow E2E to fire events\nexport function shouldEnableAnalytics() {\n  return !getenv.boolish('E2E', false) && !getenv.boolish('CI', false);\n}\n"],"file":"Env.js"}