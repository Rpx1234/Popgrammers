{"version":3,"sources":["../../src/detach/ExponentTools.ts"],"names":["saveUrlToPathAsync","url","path","timeout","response","axios","get","responseType","Promise","resolve","reject","stream","fs","createWriteStream","on","data","pipe","getManifestAsync","headers","options","buildPhaseLogger","logger","LoggerDetach","withFields","buildPhase","_retryPromise","replace","err","error","Error","info","JSON","stringify","fn","retries","spawnAsyncThrowError","command","args","stdio","cwd","process","pipeToLogger","promise","child","streams","stdout","stderr","loggerFields","spawnAsync","e","message","isDirectory","dir","statSync","getResolvedLocalesAsync","projectRoot","exp","locales","undefined","lang","localePath","Object","entries","s","readFile","parse","XDLError","regexFileAsync","regex","filename","file","fileString","toString","writeFile","deleteLinesInFileAsync","startRegex","endRegex","lines","split","filteredLines","inDeleteRange","i","length","match","push","join"],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport spawnAsyncQuiet, { SpawnOptions, SpawnResult } from '@expo/spawn-async';\nimport axios from 'axios';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { Readable } from 'stream';\n\nimport { LoggerDetach, pipeOutputToLogger, XDLError } from '../internal';\n\nasync function saveUrlToPathAsync(url: string, path: string, timeout = 20000) {\n  const response = await axios.get(url, { responseType: 'stream', timeout });\n\n  return new Promise(function (resolve, reject) {\n    const stream = fs.createWriteStream(path);\n    stream.on('close', resolve);\n    stream.on('error', reject);\n    response.data.on('error', reject).pipe(stream);\n  });\n}\n\nasync function getManifestAsync(url: string, headers: any, options: any = {}) {\n  const buildPhaseLogger =\n    options.logger || LoggerDetach.withFields({ buildPhase: 'reading manifest' });\n\n  let response;\n  try {\n    response = await _retryPromise(() => axios.get(url.replace('exp://', 'http://'), { headers }));\n  } catch (err) {\n    buildPhaseLogger.error(err);\n    throw new Error('Failed to fetch manifest from www');\n  }\n\n  buildPhaseLogger.info('Using manifest:', JSON.stringify(response.data, null, 2));\n  return response.data;\n}\n\nasync function _retryPromise<T>(fn: (...args: any[]) => T, retries = 5): Promise<T> {\n  try {\n    return await fn();\n  } catch (err) {\n    if (retries-- > 0) {\n      return await _retryPromise(fn, retries);\n    } else {\n      throw err;\n    }\n  }\n}\n\nexport type AsyncSpawnOptions = SpawnOptions & {\n  loggerFields?: any;\n  pipeToLogger?: boolean | { stdout?: boolean; stderr?: boolean };\n  stdoutOnly?: boolean;\n  loggerLineTransformer?: (line: any) => any;\n};\n\nasync function spawnAsyncThrowError(\n  command: string,\n  args: string[],\n  options: AsyncSpawnOptions = {\n    stdio: 'inherit',\n    cwd: process.cwd(),\n  }\n): Promise<SpawnResult> {\n  const { pipeToLogger } = options;\n  if (pipeToLogger) {\n    options.stdio = 'pipe';\n    options.cwd = options.cwd || process.cwd();\n  }\n  const promise = spawnAsyncQuiet(command, args, options);\n  if (pipeToLogger && promise.child) {\n    const streams: { stdout?: Readable | null; stderr?: Readable | null } = {};\n    if (pipeToLogger === true || pipeToLogger.stdout) {\n      streams.stdout = promise.child.stdout;\n    }\n    if (pipeToLogger === true || pipeToLogger.stderr) {\n      streams.stderr = promise.child.stderr;\n    }\n    pipeOutputToLogger(streams, options.loggerFields, options);\n  }\n  return promise;\n}\n\nasync function spawnAsync(\n  command: string,\n  args: string[],\n  options: SpawnOptions\n): Promise<SpawnResult | void> {\n  try {\n    return await spawnAsyncThrowError(command, args, options);\n  } catch (e) {\n    LoggerDetach.error(e.message);\n  }\n}\n\nfunction isDirectory(dir: string) {\n  try {\n    if (fs.statSync(dir).isDirectory()) {\n      return true;\n    }\n\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\ntype LocaleMap = { [lang: string]: any };\n\nasync function getResolvedLocalesAsync(projectRoot: string, exp: ExpoConfig): Promise<LocaleMap> {\n  const locales: LocaleMap = {};\n  if (exp.locales !== undefined) {\n    for (const [lang, localePath] of Object.entries(exp.locales)) {\n      const s = await fs.readFile(path.resolve(projectRoot, localePath as string), 'utf8');\n      try {\n        locales[lang] = JSON.parse(s);\n      } catch (e) {\n        throw new XDLError('INVALID_JSON', JSON.stringify(e));\n      }\n    }\n  }\n  return locales;\n}\n\nasync function regexFileAsync(\n  regex: RegExp | string,\n  replace: string,\n  filename: string\n): Promise<void> {\n  const file = await fs.readFile(filename);\n  const fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(\n  startRegex: RegExp | string,\n  endRegex: RegExp | string,\n  filename: string\n): Promise<void> {\n  const file = await fs.readFile(filename);\n  const fileString = file.toString();\n  const lines = fileString.split(/\\r?\\n/);\n  const filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nexport {\n  isDirectory,\n  saveUrlToPathAsync,\n  getManifestAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  getResolvedLocalesAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n};\n"],"file":"ExponentTools.js"}