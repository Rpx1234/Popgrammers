/// <reference types="expo__bunyan" />
import type Log from '@expo/bunyan';
import { createDevServerMiddleware as createReactNativeDevServerMiddleware } from '@react-native-community/cli-server-api';
import type { Server as ConnectServer } from 'connect';
export declare type AttachToServerFunction = ReturnType<typeof createReactNativeDevServerMiddleware>['attachToServer'];
/**
 * Extends the default `createDevServerMiddleware` and adds some Expo CLI-specific dev middleware
 * with exception for the manifest middleware which is currently in `xdl`.
 *
 * Adds:
 * - `/logs`: pipe runtime `console` logs to the `props.logger` object.
 * - `/inspector`: launch hermes inspector proxy in chrome.
 * - CORS support for remote devtools
 * - body parser middleware
 *
 * @param props.watchFolders array of directory paths to use with watchman
 * @param props.port port that the dev server will run on
 * @param props.logger bunyan instance that all runtime `console` logs will be piped through.
 *
 * @returns
 */
export declare function createDevServerMiddleware({ watchFolders, port, logger, }: {
    watchFolders: readonly string[];
    port: number;
    logger: Log;
}): {
    middleware: ConnectServer;
    attachToServer: AttachToServerFunction;
    logger: Log;
};
