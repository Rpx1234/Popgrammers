{"version":3,"sources":["../../src/utils/getRemoteVersionsForSdk.ts"],"names":["getRemoteVersionsForSdk","sdkVersion","sdkVersions","Versions","versionsAsync","skipCache","relatedPackages","facebookReactVersion","facebookReactNativeVersion","reactVersion","react","undefined"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIO,MAAMA,uBAAuB,GAAG,MAAOC,UAAP,IAAwD;AAC7F,QAAM;AAAEC,IAAAA;AAAF,MAAkB,MAAMC,gBAASC,aAAT,CAAuB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAvB,CAA9B;;AACA,MAAIJ,UAAU,IAAIA,UAAU,IAAIC,WAAhC,EAA6C;AAC3C,UAAM;AAAEI,MAAAA,eAAF;AAAmBC,MAAAA,oBAAnB;AAAyCC,MAAAA;AAAzC,QAAwEN,WAAW,CACvFD,UADuF,CAAzF;AAGA,UAAMQ,YAAY,GAAGF,oBAAoB,GACrC;AACEG,MAAAA,KAAK,EAAEH,oBADT;AAEE,mBAAaA;AAFf,KADqC,GAKrCI,SALJ;AAMA,WAAO,EACL,GAAGL,eADE;AAEL,SAAGG,YAFE;AAGL,sBAAgBD;AAHX,KAAP;AAKD;;AACD,SAAO,EAAP;AACD,CAnBM","sourcesContent":["import { Versions } from 'xdl';\n\nexport type DependencyList = Record<string, string>;\n\nexport const getRemoteVersionsForSdk = async (sdkVersion?: string): Promise<DependencyList> => {\n  const { sdkVersions } = await Versions.versionsAsync({ skipCache: true });\n  if (sdkVersion && sdkVersion in sdkVersions) {\n    const { relatedPackages, facebookReactVersion, facebookReactNativeVersion } = sdkVersions[\n      sdkVersion\n    ];\n    const reactVersion = facebookReactVersion\n      ? {\n          react: facebookReactVersion,\n          'react-dom': facebookReactVersion,\n        }\n      : undefined;\n    return {\n      ...relatedPackages,\n      ...reactVersion,\n      'react-native': facebookReactNativeVersion,\n    };\n  }\n  return {};\n};\n"],"file":"getRemoteVersionsForSdk.js"}