{"version":3,"sources":["../src/exp.ts"],"names":["packageJSON","require","ApiV2","setClientName","version","Command","prototype","urlOpts","addOptions","allowOffline","option","helpGroup","name","commands","length","__helpGroup","parent","longDescription","__longDescription","pad","str","width","len","Math","max","Array","join","humanReadableArgName","arg","nameOutput","variadic","required","breakSentence","input","prepareCommands","filter","cmd","getenv","boolish","includes","map","i","args","_args","description","_description","nameWithAlias","_name","usage","commandsStr","argsStr","arguments","_usage","helpInformation","desc","replaceAll","argsDescription","_argsDescription","padWidth","push","forEach","cmdName","_alias","chalk","bold","dim","commandHelp","options","optionHelp","replace","string","search","split","helpGroupOrder","sortHelpGroups","helpGroups","groupOrder","Set","Object","keys","subGroupOrder","core","sortSubGroupWithOrder","groupName","group","order","sortedCommands","key","shift","index","findIndex","item","startsWith","splice","concat","sortedGroups","reduce","prev","curr","command","sorted","values","noArgsCmd","noArgsCmdArgs","wrappedDescription","paddedName","program","on","Log","log","asyncAction","asyncFn","action","nonInteractive","checkCliVersionAsync","e","offline","ConnectionStatus","setIsOffline","Promise","all","Analytics","flush","UnifiedAnalytics","err","commandName","process","exit","asyncActionProjectDir","yellow","projectRoot","opts","cwd","path","resolve","config","newLine","addNewLineIfNone","green","cyan","pathToConfig","fs","existsSync","relativeInput","relative","formattedPath","reset","nestedWarn","helpCommand","logLines","msg","logFn","line","INTERNAL_CALLSITES_REGEX","logStackTrace","chunk","nestedLogFn","traceInfo","JSON","parse","message","stack","isLibraryFrame","stackFrames","lastAppCodeFrameIndex","lastFrameIndexToLog","min","unloggedFrames","isCollapsed","fileNameOrUrl","test","isDebug","style","printNewLineBeforeNextLog","logWithLevel","level","bunyan","INFO","includesStack","nested","WARN","warn","error","nestedError","bar","PackagerLogsStream","onStartBuildBundle","bundleDetails","platform","getPlatformTagForBuildDetails","ProgressBar","total","clear","complete","incomplete","setBundleProgressBar","onProgressBuildBundle","progress","ticks","tick","onFinishBuildBundle","start","end","terminate","totalBuildTimeMs","getTime","durationSuffix","gray","red","StatusEventEmitter","emit","updateLogs","updater","newLogChunks","newLogChunk","issueId","issueCleared","ProjectUtils","attachLoggerStream","stream","write","tag","deviceId","deviceName","type","checkConfig","ProjectSettings","getCurrentStatusAsync","spinner","setSpinner","Doctor","status","validateWithoutNetworkAsync","skipSDKVersionRequirement","FATAL","Error","stop","bootstrapAnalyticsAsync","initializeClient","userData","UserManager","getCachedUserDataAsync","userId","identifyUser","currentConnection","username","trackUsage","argv","ExpoCommand","undefined","subCommand","find","logEvent","source","source_version","runAsync","programName","_registerLogs","Env","shouldEnableAnalytics","setInteractiveAuthenticationCallback","loginOrRegisterAsync","env","SERVER_URL","serverUrl","parsedUrl","url","port","parseInt","hostname","Config","api","host","registerCommands","availableCommands","suggestion","stdin","isTTY","help","updateIsAvailable","current","latest","deprecated","update","checkForUpdateAsync","borderColor","padding","code","LoadingEvent","START_PROGRESS_BAR","TICK_PROGRESS_BAR","getProgress","STOP_PROGRESS_BAR","START_LOADING","STOP_LOADING","getSpinner","DEBUG","debug","ERROR","Logger","notifications","addStream","global","writePathAsync","Binaries","writePathToUserSettingsAsync","run","catch"],"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","sourcesContent":["import bunyan from '@expo/bunyan';\nimport { setCustomConfigPath } from '@expo/config';\nimport boxen from 'boxen';\nimport chalk from 'chalk';\nimport program, { Command } from 'commander';\nimport fs from 'fs';\nimport getenv from 'getenv';\nimport leven from 'leven';\nimport findLastIndex from 'lodash/findLastIndex';\nimport path from 'path';\nimport ProgressBar from 'progress';\nimport stripAnsi from 'strip-ansi';\nimport url from 'url';\nimport wrapAnsi from 'wrap-ansi';\nimport {\n  Analytics,\n  ApiV2,\n  Binaries,\n  Config,\n  Env,\n  LoadingEvent,\n  Logger,\n  LogRecord,\n  LogUpdater,\n  PackagerLogsStream,\n  ProjectSettings,\n  ProjectUtils,\n  UnifiedAnalytics,\n  UserManager,\n} from 'xdl';\n\nimport StatusEventEmitter from './analytics/StatusEventEmitter';\nimport { registerCommands } from './commands';\nimport { loginOrRegisterAsync } from './commands/auth/accounts';\nimport { learnMore } from './commands/utils/TerminalLink';\nimport { profileMethod } from './commands/utils/profileMethod';\nimport urlOpts from './commands/utils/urlOpts';\nimport Log from './log';\nimport { handleErrorsAsync } from './utils/handleErrors';\nimport { matchFileNameOrURLFromStackTrace } from './utils/matchFileNameOrURLFromStackTrace';\nimport { logNewSection, ora } from './utils/ora';\nimport update from './utils/update';\n\n// We use require() to exclude package.json from TypeScript's analysis since it lives outside the\n// src directory and would change the directory structure of the emitted files under the build\n// directory\nconst packageJSON = require('../package.json');\n\nApiV2.setClientName(packageJSON.version);\n\n// The following prototyped functions are not used here, but within in each file found in `./commands`\n// Extending commander to easily add more options to certain command line arguments\nCommand.prototype.urlOpts = function () {\n  urlOpts.addOptions(this);\n  return this;\n};\n\nCommand.prototype.allowOffline = function () {\n  this.option('--offline', 'Allows this command to run while offline');\n  return this;\n};\n\n// Add support for logical command groupings\nCommand.prototype.helpGroup = function (name: string) {\n  if (this.commands[this.commands.length - 1]) {\n    this.commands[this.commands.length - 1].__helpGroup = name;\n  } else {\n    this.parent.helpGroup(name);\n  }\n  return this;\n};\n\n// A longer description that will be displayed then the command is used with --help\nCommand.prototype.longDescription = function (name: string) {\n  if (this.commands[this.commands.length - 1]) {\n    this.commands[this.commands.length - 1].__longDescription = name;\n  } else {\n    this.parent.longDescription(name);\n  }\n  return this;\n};\n\nfunction pad(str: string, width: number): string {\n  // Pulled from commander for overriding\n  const len = Math.max(0, width - stripAnsi(str).length);\n  return str + Array(len + 1).join(' ');\n}\n\nfunction humanReadableArgName(arg: any): string {\n  // Pulled from commander for overriding\n  const nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n  return arg.required ? `<${nameOutput}>` : `[${nameOutput}]`;\n}\n\nfunction breakSentence(input: string): string {\n  // Break a sentence by the word after a max character count, adjusting for ansi characters\n  return wrapAnsi(input, 72);\n}\n\nCommand.prototype.prepareCommands = function () {\n  return this.commands\n    .filter(function (cmd: Command) {\n      // Display all commands with EXPO_DEBUG, otherwise use the noHelp option.\n      if (getenv.boolish('EXPO_DEBUG', false)) {\n        return true;\n      }\n      return !['internal'].includes(cmd.__helpGroup);\n    })\n    .map(function (cmd: Command, i: number) {\n      const args = cmd._args.map(humanReadableArgName).join(' ');\n\n      const description = cmd._description;\n      // Remove alias. We still show this with --help on the command.\n      // const alias = cmd._alias;\n      // const nameWithAlias = cmd._name + (alias ? '|' + alias : '');\n      const nameWithAlias = cmd._name;\n      return [\n        nameWithAlias +\n          // Remove the redundant [options] string that's shown after every command.\n          // (cmd.options.length ? ' [options]' : '') +\n          (args ? ' ' + args : ''),\n        breakSentence(description),\n        cmd.__helpGroup ?? 'misc',\n      ];\n    });\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\n// @ts-ignore\nCommand.prototype.usage = function (str: string) {\n  const args = this._args.map(function (arg: any[]) {\n    return humanReadableArgName(arg);\n  });\n\n  const commandsStr = this.commands.length ? '[command]' : '';\n  const argsStr = this._args.length ? args.join(' ') : '';\n\n  let usage = commandsStr + argsStr;\n  if (usage.length) usage += ' ';\n  usage += '[options]';\n\n  if (arguments.length === 0) {\n    return this._usage || usage;\n  }\n  this._usage = str;\n\n  return this;\n};\n\nCommand.prototype.helpInformation = function () {\n  let desc: string[] = [];\n  // Use the long description if available, otherwise use the regular description.\n  const description = this.__longDescription ?? this._description;\n  if (description) {\n    desc = [replaceAll(breakSentence(description), '\\n', pad('\\n', 3)), ''];\n\n    const argsDescription = this._argsDescription;\n    if (argsDescription && this._args.length) {\n      const width = this.padWidth();\n      desc.push('Arguments:');\n      desc.push('');\n      this._args.forEach(({ name }: { name: string }) => {\n        desc.push('  ' + pad(name, width) + '  ' + argsDescription[name]);\n      });\n      desc.push('');\n    }\n  }\n\n  let cmdName = this._name;\n  if (this._alias) {\n    // Here is the only place we show the command alias\n    cmdName = `${cmdName}|${this._alias}`;\n  }\n\n  // Dim the options to keep things consistent.\n  const usage = `${chalk.bold`Usage:`} ${cmdName} ${chalk.dim(this.usage())}\\n`;\n\n  const commandHelp = '' + this.commandHelp();\n\n  const options = [chalk.bold`Options:`, '\\n' + this.optionHelp().replace(/^/gm, '    '), ''];\n\n  // return ['', usage, ...desc, ...options, commandHelp].join('\\n') + '\\n';\n  return ['', usage, ...desc, ...options, commandHelp].join(pad('\\n', 3)) + '\\n';\n};\n\nfunction replaceAll(string: string, search: string, replace: string): string {\n  return string.split(search).join(replace);\n}\n\nexport const helpGroupOrder = [\n  'core',\n  'auth',\n  'client',\n  'info',\n  'eject',\n  'publish',\n  'build',\n  'credentials',\n  'notifications',\n  'url',\n  'webhooks',\n  'upload',\n  'internal',\n  'deprecated',\n];\n\nfunction sortHelpGroups(helpGroups: Record<string, string[][]>): Record<string, string[][]> {\n  const groupOrder = [\n    ...new Set([\n      ...helpGroupOrder,\n      // add any others and remove duplicates\n      ...Object.keys(helpGroups),\n    ]),\n  ];\n\n  const subGroupOrder: Record<string, string[]> = {\n    core: ['init', 'start', 'start:web', 'publish', 'export'],\n  };\n\n  const sortSubGroupWithOrder = (groupName: string, group: string[][]): string[][] => {\n    const order: string[] = subGroupOrder[groupName];\n    if (!order?.length) {\n      return group;\n    }\n\n    const sortedCommands: string[][] = [];\n\n    while (order.length) {\n      const key = order.shift()!;\n      const index = group.findIndex(item => item[0].startsWith(key));\n      if (index >= 0) {\n        const [item] = group.splice(index, 1);\n        sortedCommands.push(item);\n      }\n    }\n\n    return sortedCommands.concat(group);\n  };\n\n  // Reverse the groups\n  const sortedGroups: Record<string, string[][]> = {};\n  while (groupOrder.length) {\n    const group = groupOrder.shift()!;\n    if (group in helpGroups) {\n      sortedGroups[group] = helpGroups[group];\n    }\n  }\n\n  return Object.keys(sortedGroups).reduce(\n    (prev, curr) => ({\n      ...prev,\n      // Sort subgroups that have a defined order\n      [curr]: sortSubGroupWithOrder(curr, helpGroups[curr]),\n    }),\n    {}\n  );\n}\n\n// Extended the help renderer to add a custom format and groupings.\nCommand.prototype.commandHelp = function () {\n  if (!this.commands.length) {\n    return '';\n  }\n  const width: number = this.padWidth();\n  const commands: string[][] = this.prepareCommands();\n\n  const helpGroups: Record<string, string[][]> = {};\n\n  // Sort commands into helpGroups\n  for (const command of commands) {\n    const groupName = command[2];\n    if (!helpGroups[groupName]) {\n      helpGroups[groupName] = [];\n    }\n    helpGroups[groupName].push(command);\n  }\n\n  const sorted = sortHelpGroups(helpGroups);\n\n  // Render everything.\n  return [\n    '' + chalk.bold('Commands:'),\n    '',\n    // Render all of the groups.\n    Object.values(sorted)\n      .map(group =>\n        group\n          // Render the command and description\n          .map(([cmd, description]: string[]) => {\n            // Dim the arguments that come after the command, this makes scanning a bit easier.\n            let [noArgsCmd, ...noArgsCmdArgs] = cmd.split(' ');\n            if (noArgsCmdArgs.length) {\n              noArgsCmd += ` ${chalk.dim(noArgsCmdArgs.join(' '))}`;\n            }\n\n            // Word wrap the description.\n            let wrappedDescription = description;\n            if (description) {\n              // Ensure the wrapped description appears on the same padded line.\n              wrappedDescription = '  ' + replaceAll(description, '\\n', pad('\\n', width + 3));\n            }\n\n            const paddedName = wrappedDescription ? pad(noArgsCmd, width) : noArgsCmd;\n            return paddedName + wrappedDescription;\n          })\n          .join('\\n')\n          .replace(/^/gm, '    ')\n      )\n      // Double new line to add spacing between groups\n      .join('\\n\\n'),\n    '',\n  ].join('\\n');\n};\n\nprogram.on('--help', () => {\n  Log.log(`  Run a command with --help for more info 💡`);\n  Log.log(`    $ expo start --help`);\n  Log.log();\n});\n\nexport type Action = (...args: any[]) => void;\n\n// asyncAction is a wrapper for all commands/actions to be executed after commander is done\n// parsing the command input\nCommand.prototype.asyncAction = function (asyncFn: Action) {\n  return this.action(async (...args: any[]) => {\n    if (!getenv.boolish('EAS_BUILD', false) && !program.nonInteractive) {\n      try {\n        await profileMethod(checkCliVersionAsync)();\n      } catch (e) {}\n    }\n\n    try {\n      const options = args[args.length - 1];\n      if (options.offline) {\n        const { ConnectionStatus } = await import('xdl');\n        ConnectionStatus.setIsOffline(true);\n      }\n\n      await asyncFn(...args);\n      // After a command, flush the analytics queue so the program will not have any active timers\n      // This allows node js to exit immediately\n      await Promise.all([Analytics.flush(), UnifiedAnalytics.flush()]);\n    } catch (err) {\n      // If the `--name` property is being used then we can be sure that the error is coming from `expo init`.\n      const commandName = typeof this.name === 'string' ? 'init (probably)' : this.name();\n      await handleErrorsAsync(err, { command: commandName });\n      process.exit(1);\n    }\n  });\n};\n\n// asyncActionProjectDir captures the projectDirectory from the command line,\n// setting it to cwd if it is not provided.\n// Commands such as `start` and `publish` use this.\n// It does several things:\n// - Everything in asyncAction\n// - Checks if the user is logged in or out\n// - Checks for updates\n// - Attaches the bundling logger\n// - Checks if the project directory is valid or not\n// - Runs AsyncAction with the projectDir as an argument\nCommand.prototype.asyncActionProjectDir = function (\n  asyncFn: Action,\n  options: { checkConfig?: boolean; skipSDKVersionRequirement?: boolean } = {}\n) {\n  this.option(\n    '--config [file]',\n    `${chalk.yellow('Deprecated:')} Use app.config.js to switch config files instead.`\n  );\n  return this.asyncAction(async (projectRoot: string, ...args: any[]) => {\n    const opts = args[0];\n\n    if (!projectRoot) {\n      projectRoot = process.cwd();\n    } else {\n      projectRoot = path.resolve(process.cwd(), projectRoot);\n    }\n\n    if (opts.config) {\n      Log.log(\n        chalk.yellow(\n          `\\u203A ${chalk.bold(\n            '--config'\n          )} flag is deprecated. Use app.config.js instead. ${learnMore(\n            'https://expo.fyi/config-flag-migration'\n          )}`\n        )\n      );\n      Log.newLine();\n\n      // @ts-ignore: This guards against someone passing --config without a path.\n      if (opts.config === true) {\n        Log.addNewLineIfNone();\n        Log.log('Please specify your custom config path:');\n        Log.log(chalk.green(`  expo ${this.name()} --config ${chalk.cyan(`<app-config>`)}`));\n        Log.newLine();\n        process.exit(1);\n      }\n\n      const pathToConfig = path.resolve(process.cwd(), opts.config);\n      // Warn the user when the custom config path they provided does not exist.\n      if (!fs.existsSync(pathToConfig)) {\n        const relativeInput = path.relative(process.cwd(), opts.config);\n        const formattedPath = chalk\n          .reset(pathToConfig)\n          .replace(relativeInput, chalk.bold(relativeInput));\n        Log.addNewLineIfNone();\n        Log.nestedWarn(`Custom config file does not exist:\\n${formattedPath}`);\n        Log.newLine();\n        const helpCommand = chalk.green(`expo ${this.name()} --help`);\n        Log.log(`Run ${helpCommand} for more info`);\n        Log.newLine();\n        process.exit(1);\n        // throw new Error(`File at provided config path does not exist: ${pathToConfig}`);\n      }\n      setCustomConfigPath(projectRoot, pathToConfig);\n    }\n\n    const logLines = (msg: any, logFn: (...args: any[]) => void) => {\n      if (typeof msg === 'string') {\n        for (const line of msg.split('\\n')) {\n          logFn(line);\n        }\n      } else {\n        logFn(msg);\n      }\n    };\n\n    const { INTERNAL_CALLSITES_REGEX } = await import('@expo/metro-config');\n\n    const logStackTrace = async (\n      chunk: LogRecord,\n      logFn: (...args: any[]) => void,\n      nestedLogFn: (...args: any[]) => void\n    ) => {\n      let traceInfo;\n      try {\n        traceInfo = JSON.parse(chunk.msg);\n      } catch (e) {\n        return logFn(chunk.msg);\n      }\n\n      const { message, stack } = traceInfo;\n      Log.addNewLineIfNone();\n      logFn(chalk.bold(message));\n\n      const isLibraryFrame = (line: string) => {\n        return line.startsWith('node_modules');\n      };\n\n      const stackFrames: string[] = stack.split('\\n').filter((line: string) => line);\n      const lastAppCodeFrameIndex = findLastIndex(stackFrames, (line: string) => {\n        return !isLibraryFrame(line);\n      });\n      let lastFrameIndexToLog = Math.min(\n        stackFrames.length - 1,\n        lastAppCodeFrameIndex + 2 // show max two more frames after last app code frame\n      );\n      let unloggedFrames = stackFrames.length - lastFrameIndexToLog;\n\n      // If we're only going to exclude one frame, just log them all\n      if (unloggedFrames === 1) {\n        lastFrameIndexToLog = stackFrames.length - 1;\n        unloggedFrames = 0;\n      }\n\n      for (let i = 0; i <= lastFrameIndexToLog; i++) {\n        const line = stackFrames[i];\n\n        if (!line) {\n          continue;\n        }\n\n        let isCollapsed = false;\n        const fileNameOrUrl = matchFileNameOrURLFromStackTrace(line);\n        if (fileNameOrUrl) {\n          // Use the same regex we use in Metro config to filter out traces:\n          isCollapsed = INTERNAL_CALLSITES_REGEX.test(fileNameOrUrl);\n\n          // Unless the user is in debug mode, skip printing the collapsed files.\n          if (!Log.isDebug && isCollapsed) {\n            continue;\n          }\n        }\n\n        // If a file is collapsed, print it with dim styling.\n        const style = isCollapsed ? chalk.dim : (message: string) => message;\n        // Use the `at` prefix to match Node.js\n        nestedLogFn(style('at ' + line));\n      }\n\n      if (unloggedFrames > 0) {\n        nestedLogFn(`- ... ${unloggedFrames} more stack frames from framework internals`);\n      }\n\n      Log.printNewLineBeforeNextLog();\n    };\n\n    const logWithLevel = (chunk: LogRecord) => {\n      if (!chunk.msg) {\n        return;\n      }\n      if (chunk.level <= bunyan.INFO) {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, Log.log, Log.nested);\n        } else {\n          logLines(chunk.msg, Log.log);\n        }\n      } else if (chunk.level === bunyan.WARN) {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, Log.warn, Log.nestedWarn);\n        } else {\n          logLines(chunk.msg, Log.warn);\n        }\n      } else {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, Log.error, Log.nestedError);\n        } else {\n          logLines(chunk.msg, Log.error);\n        }\n      }\n    };\n\n    let bar: ProgressBar | null;\n    // eslint-disable-next-line no-new\n    new PackagerLogsStream({\n      projectRoot,\n      onStartBuildBundle({ bundleDetails }) {\n        // TODO: Unify with commands/utils/progress.ts\n        const platform = PackagerLogsStream.getPlatformTagForBuildDetails(bundleDetails);\n        bar = new ProgressBar(`${platform}Bundling JavaScript [:bar] :percent`, {\n          width: 64,\n          total: 100,\n          clear: true,\n          complete: '=',\n          incomplete: ' ',\n        });\n\n        Log.setBundleProgressBar(bar);\n      },\n      onProgressBuildBundle({ progress }) {\n        if (!bar || bar.complete) return;\n        const ticks = progress - bar.curr;\n        ticks > 0 && bar.tick(ticks);\n      },\n      onFinishBuildBundle({ error, start, end, bundleDetails }) {\n        if (bar && !bar.complete) {\n          bar.tick(100 - bar.curr);\n        }\n\n        if (bar) {\n          Log.setBundleProgressBar(null);\n          bar.terminate();\n          bar = null;\n\n          const platform = PackagerLogsStream.getPlatformTagForBuildDetails(bundleDetails);\n          const totalBuildTimeMs = end.getTime() - start.getTime();\n          const durationSuffix = chalk.gray(` ${totalBuildTimeMs}ms`);\n          if (error) {\n            Log.log(chalk.red(`${platform}Bundling failed` + durationSuffix));\n          } else {\n            Log.log(chalk.green(`${platform}Bundling complete` + durationSuffix));\n            StatusEventEmitter.emit('bundleBuildFinish', { totalBuildTimeMs });\n          }\n        }\n      },\n      updateLogs: (updater: LogUpdater) => {\n        const newLogChunks = updater([]);\n        newLogChunks.forEach((newLogChunk: LogRecord) => {\n          if (newLogChunk.issueId && newLogChunk.issueCleared) {\n            return;\n          }\n          logWithLevel(newLogChunk);\n        });\n      },\n    });\n\n    // needed for validation logging to function\n    ProjectUtils.attachLoggerStream(projectRoot, {\n      stream: {\n        write: (chunk: LogRecord) => {\n          if (chunk.tag === 'device') {\n            logWithLevel(chunk);\n            StatusEventEmitter.emit('deviceLogReceive', {\n              deviceId: chunk.deviceId,\n              deviceName: chunk.deviceName,\n            });\n          }\n        },\n      },\n      type: 'raw',\n    });\n\n    // The existing CLI modules only pass one argument to this function, so skipProjectValidation\n    // will be undefined in most cases. we can explicitly pass a truthy value here to avoid\n    // validation (eg for init)\n    //\n    // If the packager/manifest server is running and healthy, there is no need\n    // to rerun Doctor because the directory was already checked previously\n    // This is relevant for command such as `send`\n    if (\n      options.checkConfig &&\n      (await ProjectSettings.getCurrentStatusAsync(projectRoot)) !== 'running'\n    ) {\n      const spinner = ora('Making sure project is set up correctly...').start();\n      Log.setSpinner(spinner);\n      // validate that this is a good projectDir before we try anything else\n\n      const { Doctor } = await import('xdl');\n      const status = await Doctor.validateWithoutNetworkAsync(projectRoot, {\n        skipSDKVersionRequirement: options.skipSDKVersionRequirement,\n      });\n      if (status === Doctor.FATAL) {\n        throw new Error(`There is an error with your project. See above logs for information.`);\n      }\n      spinner.stop();\n      Log.setSpinner(null);\n    }\n\n    // the existing CLI modules only pass one argument to this function, so skipProjectValidation\n    // will be undefined in most cases. we can explicitly pass a truthy value here to avoid validation (eg for init)\n\n    return asyncFn(projectRoot, ...args);\n  });\n};\n\nexport async function bootstrapAnalyticsAsync(): Promise<void> {\n  Analytics.initializeClient(\n    '1wHTzmVgmZvNjCalKL45chlc2VN',\n    'https://cdp.expo.dev',\n    packageJSON.version\n  );\n\n  UnifiedAnalytics.initializeClient(\n    '1wabJGd5IiuF9Q8SGlcI90v8WTs',\n    'https://cdp.expo.dev',\n    packageJSON.version\n  );\n\n  const userData = await profileMethod(\n    UserManager.getCachedUserDataAsync,\n    'getCachedUserDataAsync'\n  )();\n\n  if (!userData?.userId) return;\n\n  UnifiedAnalytics.identifyUser(userData.userId, {\n    userId: userData.userId,\n    currentConnection: userData?.currentConnection,\n    username: userData?.username,\n  });\n}\n\nexport function trackUsage(commands: Command[] = []) {\n  const input = process.argv[2];\n  const ExpoCommand = (cmd: Command): boolean =>\n    (cmd._name === input || cmd._alias === input) && input !== undefined;\n  const subCommand = commands.find(ExpoCommand)?._name;\n\n  if (!subCommand) return; // only track valid expo commands\n\n  UnifiedAnalytics.logEvent('action', {\n    action: `expo ${subCommand}`,\n    source: 'expo cli',\n    source_version: UnifiedAnalytics.version,\n  });\n}\n\nasync function runAsync(programName: string) {\n  try {\n    _registerLogs();\n\n    if (Env.shouldEnableAnalytics()) {\n      await bootstrapAnalyticsAsync();\n    }\n\n    UserManager.setInteractiveAuthenticationCallback(loginOrRegisterAsync);\n\n    if (process.env.SERVER_URL) {\n      let serverUrl = process.env.SERVER_URL;\n      if (!serverUrl.startsWith('http')) {\n        serverUrl = `http://${serverUrl}`;\n      }\n      const parsedUrl = url.parse(serverUrl);\n      const port = parseInt(parsedUrl.port || '', 10);\n      if (parsedUrl.hostname && port) {\n        Config.api.host = parsedUrl.hostname;\n        Config.api.port = port;\n      } else {\n        throw new Error('Environment variable SERVER_URL is not a valid url');\n      }\n    }\n\n    // Setup our commander instance\n    program.name(programName);\n    program\n      .version(packageJSON.version)\n      .option('--non-interactive', 'Fail, if an interactive prompt would be required to continue.');\n\n    // Load each module found in ./commands by 'registering' it with our commander instance\n    profileMethod(registerCommands)(program);\n\n    trackUsage(program.commands); // must be after register commands\n\n    program.on('command:detach', () => {\n      Log.warn('To eject your project to ExpoKit (previously \"detach\"), use `expo eject`.');\n      process.exit(0);\n    });\n\n    program.on('command:diagnostics', () => {\n      Log.warn('The `expo diagnostics` command is deprecated, use `npx expo-env-info` instead.');\n      process.exit(0);\n    });\n\n    program.on('command:*', subCommand => {\n      let msg = `\"${subCommand}\" is not an expo command. See \"expo --help\" for the full list of commands.`;\n      const availableCommands = program.commands.map((cmd: Command) => cmd._name);\n      // finding the best match whose edit distance is less than 40% of their length.\n      const suggestion = availableCommands.find(\n        (commandName: string) => leven(commandName, subCommand[0]) < commandName.length * 0.4\n      );\n      if (suggestion) {\n        msg = `\"${subCommand}\" is not an expo command -- did you mean ${suggestion}?\\n See \"expo --help\" for the full list of commands.`;\n      }\n      Log.warn(msg);\n    });\n\n    if (typeof program.nonInteractive === 'undefined') {\n      // Commander doesn't initialize boolean args with default values.\n      program.nonInteractive = !process.stdin.isTTY;\n    }\n\n    program.parse(process.argv);\n\n    // Show help when no sub-command specified\n    if (program.args.length === 0) {\n      program.help();\n    }\n  } catch (e) {\n    Log.error(e);\n    throw e;\n  }\n}\n\nasync function checkCliVersionAsync() {\n  // Skip checking for latest version on EAS Build\n  if (getenv.boolish('EAS_BUILD', false)) {\n    return;\n  }\n\n  const { updateIsAvailable, current, latest, deprecated } = await update.checkForUpdateAsync();\n  if (updateIsAvailable) {\n    Log.nestedWarn(\n      boxen(\n        chalk.green(`There is a new version of ${packageJSON.name} available (${latest}).\nYou are currently using ${packageJSON.name} ${current}\nInstall expo-cli globally using the package manager of your choice;\nfor example: \\`npm install -g ${packageJSON.name}\\` to get the latest version`),\n        { borderColor: 'green', padding: 1 }\n      )\n    );\n  }\n\n  if (deprecated) {\n    Log.nestedWarn(\n      boxen(\n        chalk.red(\n          `This version of expo-cli is not supported anymore.\nIt's highly recommended to update to the newest version.\n\nThe API endpoints used in this version of expo-cli might not exist,\nany interaction with Expo servers may result in unexpected behaviour.`\n        ),\n        { borderColor: 'red', padding: 1 }\n      )\n    );\n  }\n}\n\nfunction _registerLogs() {\n  const stream: bunyan.Stream = {\n    level: Log.isDebug ? 'debug' : 'info',\n    stream: {\n      write: (chunk: any) => {\n        if (chunk.code) {\n          switch (chunk.code) {\n            case LoadingEvent.START_PROGRESS_BAR: {\n              const bar = new ProgressBar(chunk.msg, {\n                width: 64,\n                total: 100,\n                clear: true,\n                complete: '=',\n                incomplete: ' ',\n              });\n              Log.setBundleProgressBar(bar);\n              return;\n            }\n            case LoadingEvent.TICK_PROGRESS_BAR: {\n              const bar = Log.getProgress();\n              if (bar) {\n                bar.tick(1, chunk.msg);\n              }\n              return;\n            }\n            case LoadingEvent.STOP_PROGRESS_BAR: {\n              const bar = Log.getProgress();\n              if (bar) {\n                Log.setBundleProgressBar(null);\n                bar.terminate();\n              }\n              return;\n            }\n            case LoadingEvent.START_LOADING:\n              logNewSection(chunk.msg || '');\n              return;\n            case LoadingEvent.STOP_LOADING: {\n              const spinner = Log.getSpinner();\n              if (spinner) {\n                spinner.stop();\n              }\n              return;\n            }\n          }\n        }\n\n        if (chunk.level === bunyan.INFO) {\n          Log.log(chunk.msg);\n        } else if (chunk.level === bunyan.WARN) {\n          Log.warn(chunk.msg);\n        } else if (chunk.level === bunyan.DEBUG) {\n          Log.debug(chunk.msg);\n        } else if (chunk.level >= bunyan.ERROR) {\n          Log.error(chunk.msg);\n        }\n      },\n    },\n    type: 'raw',\n  };\n\n  Logger.notifications.addStream(stream);\n  Logger.global.addStream(stream);\n}\n\nasync function writePathAsync() {\n  const subCommand = process.argv[2];\n  if (subCommand === 'prepare-detached-build') {\n    // This is being run from Android Studio or Xcode. Don't want to write PATH in this case.\n    return;\n  }\n\n  await Binaries.writePathToUserSettingsAsync();\n}\n\n// This is the entry point of the CLI\nexport function run(programName: string) {\n  (async function () {\n    await Promise.all([writePathAsync(), runAsync(programName)]);\n  })().catch(e => {\n    Log.error('Uncaught Error', e);\n    process.exit(1);\n  });\n}\n"],"file":"exp.js"}