{"version":3,"sources":["../../../src/commands/start/TerminalUI.ts"],"names":["CTRL_C","CTRL_D","CTRL_L","BLT","bold","b","italic","i","underline","u","chalk","printHelp","logCommandsTable","key","msg","div","dim","shouldOpenDevToolsOnStartupAsync","UserSettings","getAsync","printUsageAsync","projectRoot","options","dev","ProjectSettings","readAsync","openDevToolsAtStartup","devMode","currentToggle","isMac","process","platform","platforms","isAndroidDisabled","includes","isIosDisabled","isWebDisable","disabled","isRemoteReloadingEnabled","isWebSocketsEnabled","status","printBasicUsageAsync","ui","Log","nested","filter","Boolean","map","view","length","join","printServerInfo","wrapLength","stdout","columns","item","text","trimStart","webOnly","url","UrlUtils","constructDeepLinkAsync","getURLForQR","devClient","Env","isInterstitiaLPageEnabled","constructLoadingUrlAsync","urlOpts","printQRCode","error","code","serverUrl","constructManifestUrlAsync","urlType","webUrl","Webpack","getUrlAsync","addNewLineIfNone","gray","openDeveloperTools","log","warn","openJsInsectorAsync","packagerPort","readPackagerInfoAsync","metroServerOrigin","apps","app","startAsync","stdin","startWaitingForCommand","setRawMode","resume","setEncoding","on","handleKeypress","stopWaitingForCommand","removeListener","Prompts","addInteractionListener","pause","UserManager","setInteractiveAuthenticationCallback","handleKeypressAsync","err","exit","shouldPrompt","nonInteractive","clear","isTargetingNative","results","Android","openWebProjectAsync","success","nestedError","isDisabled","nestedWarn","openProjectAsync","message","Simulator","emit","pauseInteractions","push","e","isStarted","Project","openAsync","devToolsPort","enabled","setAsync","broadcastMessage","value","choices","title","name","resumeInteractions","projectSettings","minify","reset","editor","env","EXPO_EDITOR"],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { openJsInspector, queryAllInspectorAppsAsync } from '@expo/dev-server';\nimport openBrowserAsync from 'better-opn';\nimport chalk from 'chalk';\nimport wrapAnsi from 'wrap-ansi';\nimport {\n  Android,\n  Env,\n  isDevClientPackageInstalled,\n  Project,\n  ProjectSettings,\n  Prompts,\n  Simulator,\n  UrlUtils,\n  UserManager,\n  UserSettings,\n  Webpack,\n} from 'xdl';\n\nimport Log from '../../log';\nimport { handleErrorsAsync } from '../../utils/handleErrors';\nimport { selectAsync } from '../../utils/prompts';\nimport { loginOrRegisterIfLoggedOutAsync } from '../auth/accounts';\nimport { learnMore } from '../utils/TerminalLink';\nimport { openInEditorAsync } from '../utils/openInEditorAsync';\nimport urlOpts from '../utils/urlOpts';\nimport { ensureWebSupportSetupAsync } from '../utils/web/ensureWebSetup';\n\nconst CTRL_C = '\\u0003';\nconst CTRL_D = '\\u0004';\nconst CTRL_L = '\\u000C';\n\nconst BLT = `\\u203A`;\nconst { bold: b, italic: i, underline: u } = chalk;\n\ntype StartOptions = {\n  isWebSocketsEnabled?: boolean;\n  isRemoteReloadingEnabled?: boolean;\n  devClient?: boolean;\n  reset?: boolean;\n  nonInteractive?: boolean;\n  nonPersistent?: boolean;\n  maxWorkers?: number;\n  webOnly?: boolean;\n  platforms?: ExpoConfig['platforms'];\n};\n\nconst printHelp = (): void => {\n  logCommandsTable([{ key: '?', msg: 'show all commands' }]);\n};\n\nconst div = chalk.dim(`│`);\n\nexport async function shouldOpenDevToolsOnStartupAsync() {\n  return UserSettings.getAsync(\n    'openDevToolsAtStartup',\n    // Defaults to false for new users.\n    // We can swap this back to true when dev tools UI has a code owner again.\n    false\n  );\n}\n\nconst printUsageAsync = async (\n  projectRoot: string,\n  options: Pick<\n    StartOptions,\n    'webOnly' | 'devClient' | 'isWebSocketsEnabled' | 'isRemoteReloadingEnabled' | 'platforms'\n  >\n) => {\n  const { dev } = await ProjectSettings.readAsync(projectRoot);\n  const openDevToolsAtStartup = await shouldOpenDevToolsOnStartupAsync();\n  const devMode = dev ? 'development' : 'production';\n  const currentToggle = openDevToolsAtStartup ? 'enabled' : 'disabled';\n\n  const isMac = process.platform === 'darwin';\n\n  const { platforms = ['ios', 'android', 'web'] } = options;\n\n  const isAndroidDisabled = !platforms.includes('android');\n  const isIosDisabled = !platforms.includes('ios');\n  const isWebDisable = !platforms.includes('web');\n\n  logCommandsTable([\n    {},\n    { key: 'a', msg: `open Android`, disabled: isAndroidDisabled },\n    { key: 'shift+a', msg: `select a device or emulator`, disabled: isAndroidDisabled },\n    isMac && { key: 'i', msg: `open iOS simulator`, disabled: isIosDisabled },\n    isMac && { key: 'shift+i', msg: `select a simulator`, disabled: isIosDisabled },\n    { key: 'w', msg: `open web`, disabled: isWebDisable },\n    {},\n    !!options.isRemoteReloadingEnabled && { key: 'r', msg: `reload app` },\n    !!options.isWebSocketsEnabled && { key: 'm', msg: `toggle menu` },\n    !!options.isWebSocketsEnabled && { key: 'shift+m', msg: `more tools` },\n    !!options.isWebSocketsEnabled && { key: 'j', msg: `open JavaScript inspector for Hermes` },\n    { key: 'o', msg: `open project code in your editor` },\n    { key: 'c', msg: `show project QR` },\n    { key: 'p', msg: `toggle build mode`, status: devMode },\n    // TODO: Drop with SDK 40\n    !options.isRemoteReloadingEnabled && { key: 'r', msg: `restart bundler` },\n    !options.isRemoteReloadingEnabled && { key: 'shift+r', msg: `restart and clear cache` },\n    {},\n    { key: 'd', msg: `show developer tools` },\n    {\n      key: 'shift+d',\n      msg: `toggle auto opening developer tools on startup`,\n      status: currentToggle,\n    },\n    {},\n  ]);\n};\n\nconst printBasicUsageAsync = async (\n  options: Pick<\n    StartOptions,\n    'webOnly' | 'isWebSocketsEnabled' | 'isRemoteReloadingEnabled' | 'platforms'\n  >\n) => {\n  const isMac = process.platform === 'darwin';\n  const openDevToolsAtStartup = await shouldOpenDevToolsOnStartupAsync();\n  const currentToggle = openDevToolsAtStartup ? 'enabled' : 'disabled';\n\n  const { platforms = ['ios', 'android', 'web'] } = options;\n\n  const isAndroidDisabled = !platforms.includes('android');\n  const isIosDisabled = !platforms.includes('ios');\n  const isWebDisable = !platforms.includes('web');\n\n  logCommandsTable([\n    {},\n    { key: 'a', msg: `open Android`, disabled: isAndroidDisabled },\n    isMac && { key: 'i', msg: `open iOS simulator`, disabled: isIosDisabled },\n    { key: 'w', msg: `open web`, disabled: isWebDisable },\n    {},\n    !!options.isRemoteReloadingEnabled && { key: 'r', msg: `reload app` },\n    !!options.isWebSocketsEnabled && { key: 'm', msg: `toggle menu` },\n    { key: 'd', msg: `show developer tools` },\n    {\n      key: 'shift+d',\n      msg: `toggle auto opening developer tools on startup`,\n      status: currentToggle,\n    },\n    {},\n  ]);\n};\n\nfunction logCommandsTable(\n  ui: (false | { key?: string; msg?: string; status?: string; disabled?: boolean })[]\n) {\n  Log.nested(\n    ui\n      .filter(Boolean)\n      // @ts-ignore: filter doesn't work\n      .map(({ key, msg, status, disabled }) => {\n        if (!key) return '';\n        let view = `${BLT} `;\n        if (key.length === 1) view += 'Press ';\n        view += `${b(key)} ${div} `;\n        view += msg;\n        if (status) {\n          view += ` ${chalk.dim(`(${i(status)})`)}`;\n        }\n        if (disabled) {\n          view = chalk.dim(view);\n        }\n        return view;\n      })\n      .join('\\n')\n  );\n}\n\nconst printServerInfo = async (\n  projectRoot: string,\n  options: Pick<\n    StartOptions,\n    'webOnly' | 'isWebSocketsEnabled' | 'isRemoteReloadingEnabled' | 'platforms'\n  >\n) => {\n  const wrapLength = process.stdout.columns || 80;\n  const item = (text: string): string => `${BLT} ` + wrapAnsi(text, wrapLength).trimStart();\n\n  if (!options.webOnly) {\n    try {\n      const url = await UrlUtils.constructDeepLinkAsync(projectRoot);\n\n      const getURLForQR = async () => {\n        const { devClient } = await ProjectSettings.readAsync(projectRoot);\n        if (\n          Env.isInterstitiaLPageEnabled() &&\n          !devClient &&\n          (await isDevClientPackageInstalled(projectRoot))\n        ) {\n          return await UrlUtils.constructLoadingUrlAsync(projectRoot, null);\n        } else {\n          return url;\n        }\n      };\n\n      urlOpts.printQRCode(await getURLForQR());\n      Log.nested(item(`Metro waiting on ${u(url)}`));\n      // Log.newLine();\n      // TODO: if development build, change this message!\n      Log.nested(item(`Scan the QR code above with Expo Go (Android) or the Camera app (iOS)`));\n    } catch (error) {\n      // @ts-ignore: If there is no development build scheme, then skip the QR code.\n      if (error.code !== 'NO_DEV_CLIENT_SCHEME') {\n        throw error;\n      } else {\n        const serverUrl = await UrlUtils.constructManifestUrlAsync(projectRoot, {\n          urlType: 'http',\n        });\n        Log.nested(item(`Metro waiting on ${u(serverUrl)}`));\n        Log.nested(item(`Linking is disabled because the client scheme cannot be resolved.`));\n      }\n    }\n  }\n\n  const webUrl = await Webpack.getUrlAsync(projectRoot);\n  if (webUrl) {\n    Log.addNewLineIfNone();\n    Log.nested(item(`Webpack waiting on ${u(webUrl)}`));\n    Log.nested(chalk.gray(item(`Expo Webpack (web) is in beta, and subject to breaking changes!`)));\n  }\n\n  await printBasicUsageAsync(options);\n  printHelp();\n  Log.addNewLineIfNone();\n};\n\nexport async function openDeveloperTools(url: string) {\n  Log.log(`Opening developer tools in the browser...`);\n  if (!(await openBrowserAsync(url))) {\n    Log.warn(`Unable to open developer tools in the browser`);\n  }\n}\n\nasync function openJsInsectorAsync(projectRoot: string) {\n  Log.log(`Opening JavaScript inspector in the browser...`);\n  const { packagerPort } = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n  const metroServerOrigin = `http://localhost:${packagerPort}`;\n  const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n  if (apps.length === 0) {\n    Log.warn(\n      `No compatible apps connected. This feature is only available for apps using the Hermes runtime. ${learnMore(\n        'https://docs.expo.dev/guides/using-hermes/'\n      )}`\n    );\n    return;\n  }\n  for (const app of apps) {\n    openJsInspector(app);\n  }\n}\n\nexport async function startAsync(projectRoot: string, options: StartOptions) {\n  const { stdin } = process;\n  const startWaitingForCommand = () => {\n    if (!stdin.setRawMode) {\n      Log.warn(\n        'Non-interactive terminal, keyboard commands are disabled. Please upgrade to Node 12+'\n      );\n      return;\n    }\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', handleKeypress);\n  };\n\n  const stopWaitingForCommand = () => {\n    stdin.removeListener('data', handleKeypress);\n    if (!stdin.setRawMode) {\n      Log.warn(\n        'Non-interactive terminal, keyboard commands are disabled. Please upgrade to Node 12+'\n      );\n      return;\n    }\n    stdin.setRawMode(false);\n    stdin.resume();\n  };\n\n  startWaitingForCommand();\n\n  Prompts.addInteractionListener(({ pause }) => {\n    if (pause) {\n      stopWaitingForCommand();\n    } else {\n      startWaitingForCommand();\n    }\n  });\n\n  UserManager.setInteractiveAuthenticationCallback(async () => {\n    stopWaitingForCommand();\n    try {\n      return await loginOrRegisterIfLoggedOutAsync();\n    } finally {\n      startWaitingForCommand();\n    }\n  });\n\n  await printServerInfo(projectRoot, options);\n\n  async function handleKeypress(key: string) {\n    try {\n      await handleKeypressAsync(key);\n    } catch (err) {\n      await handleErrorsAsync(err, {});\n      process.exit(1);\n    }\n  }\n\n  async function handleKeypressAsync(key: string) {\n    const shouldPrompt = !options.nonInteractive && ['I', 'A'].includes(key);\n    if (shouldPrompt) {\n      Log.clear();\n    }\n    const { platforms = ['ios', 'android', 'web'] } = options;\n\n    switch (key) {\n      case 'A':\n      case 'a':\n        if (options.webOnly && !Webpack.isTargetingNative()) {\n          Log.log(`${BLT} Opening the web project in Chrome on Android...`);\n          const results = await Android.openWebProjectAsync({\n            projectRoot,\n            shouldPrompt,\n          });\n          if (!results.success) {\n            Log.nestedError(results.error);\n          }\n        } else {\n          const isDisabled = !platforms.includes('android');\n          if (isDisabled) {\n            Log.nestedWarn(\n              `Android is disabled, enable it by adding ${chalk.bold`android`} to the platforms array in your app.json or app.config.js`\n            );\n            break;\n          }\n\n          Log.log(`${BLT} Opening on Android...`);\n          const results = await Android.openProjectAsync({\n            projectRoot,\n            shouldPrompt,\n            devClient: options.devClient ?? false,\n          });\n          if (!results.success && results.error !== 'escaped') {\n            Log.nestedError(\n              typeof results.error === 'string' ? results.error : results.error.message\n            );\n          }\n        }\n        printHelp();\n        break;\n      case 'I':\n      case 'i':\n        if (options.webOnly && !Webpack.isTargetingNative()) {\n          Log.log(`${BLT} Opening the web project in Safari on iOS...`);\n          const results = await Simulator.openWebProjectAsync({\n            projectRoot,\n            shouldPrompt,\n          });\n          if (!results.success) {\n            Log.nestedError(results.error);\n          }\n        } else {\n          const isDisabled = !platforms.includes('ios');\n          if (isDisabled) {\n            Log.nestedWarn(\n              `iOS is disabled, enable it by adding ${chalk.bold`ios`} to the platforms array in your app.json or app.config.js`\n            );\n            break;\n          }\n          Log.log(`${BLT} Opening on iOS...`);\n          const results = await Simulator.openProjectAsync({\n            projectRoot,\n            shouldPrompt,\n            devClient: options.devClient ?? false,\n          });\n          if (!results.success && results.error !== 'escaped') {\n            Log.nestedError(results.error);\n          }\n        }\n        printHelp();\n        break;\n    }\n\n    switch (key) {\n      case CTRL_C:\n      case CTRL_D: {\n        // @ts-ignore: Argument of type '\"SIGINT\"' is not assignable to parameter of type '\"disconnect\"'.\n        process.emit('SIGINT');\n        // Prevent terminal UI from accepting commands while the process is closing.\n        // Without this, fast typers will close the server then start typing their\n        // next command and have a bunch of unrelated things pop up.\n        Prompts.pauseInteractions();\n        break;\n      }\n      case CTRL_L: {\n        Log.clear();\n        break;\n      }\n      case '?': {\n        await printUsageAsync(projectRoot, options);\n        break;\n      }\n      case 'w': {\n        try {\n          if (await ensureWebSupportSetupAsync(projectRoot)) {\n            if (!platforms.includes('web')) {\n              platforms.push('web');\n              options.platforms?.push('web');\n            }\n          }\n        } catch (e: any) {\n          Log.nestedWarn(e.message);\n          break;\n        }\n\n        const isDisabled = !platforms.includes('web');\n        if (isDisabled) {\n          // Use warnings from the web support setup.\n          break;\n        }\n\n        // Ensure the Webpack dev server is running first\n        const isStarted = await Webpack.getUrlAsync(projectRoot);\n\n        if (!isStarted) {\n          await Project.startAsync(projectRoot, { webOnly: true });\n          // When this is the first time webpack is started, reprint the connection info.\n          await printServerInfo(projectRoot, options);\n        }\n\n        Log.log(`${BLT} Open in the web browser...`);\n        await Webpack.openAsync(projectRoot);\n        printHelp();\n        break;\n      }\n      case 'c': {\n        Log.clear();\n        await printServerInfo(projectRoot, options);\n        break;\n      }\n      case 'd': {\n        const { devToolsPort } = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n        openDeveloperTools(`http://localhost:${devToolsPort}`);\n        printHelp();\n        break;\n      }\n      case 'D': {\n        const enabled = !(await shouldOpenDevToolsOnStartupAsync());\n        await UserSettings.setAsync('openDevToolsAtStartup', enabled);\n        const currentToggle = enabled ? 'enabled' : 'disabled';\n        Log.log(`Auto opening developer tools on startup: ${chalk.bold(currentToggle)}`);\n        logCommandsTable([{ key: 'd', msg: `show developer tools now` }]);\n        break;\n      }\n      case 'j': {\n        await openJsInsectorAsync(projectRoot);\n        break;\n      }\n      case 'm': {\n        if (options.isWebSocketsEnabled) {\n          Log.log(`${BLT} Toggling dev menu`);\n          Project.broadcastMessage('devMenu');\n          Webpack.broadcastMessage('devMenu');\n        }\n        break;\n      }\n      case 'M': {\n        if (options.isWebSocketsEnabled) {\n          Prompts.pauseInteractions();\n          try {\n            const value = await selectAsync({\n              // Options match: Chrome > View > Developer\n              message: `Dev tools ${chalk.dim`(native only)`}`,\n              choices: [\n                { title: 'Inspect elements', value: 'toggleElementInspector' },\n                { title: 'Toggle performance monitor', value: 'togglePerformanceMonitor' },\n                { title: 'Toggle developer menu', value: 'toggleDevMenu' },\n                { title: 'Reload app', value: 'reload' },\n                // TODO: Maybe a \"View Source\" option to open code.\n                // Toggling Remote JS Debugging is pretty rough, so leaving it disabled.\n                // { title: 'Toggle Remote Debugging', value: 'toggleRemoteDebugging' },\n              ],\n            });\n            Project.broadcastMessage('sendDevCommand', { name: value });\n            Webpack.broadcastMessage('sendDevCommand', { name: value });\n          } catch {\n            // do nothing\n          } finally {\n            Prompts.resumeInteractions();\n            printHelp();\n          }\n        }\n        break;\n      }\n      case 'p': {\n        Log.clear();\n        const projectSettings = await ProjectSettings.readAsync(projectRoot);\n        const dev = !projectSettings.dev;\n        await ProjectSettings.setAsync(projectRoot, { dev, minify: !dev });\n        Log.log(\n          `Metro bundler is now running in ${chalk.bold(\n            dev ? 'development' : 'production'\n          )}${chalk.reset(` mode.`)}\nPlease reload the project in Expo Go for the change to take effect.`\n        );\n        printHelp();\n        break;\n      }\n      case 'r':\n        if (options.isRemoteReloadingEnabled) {\n          Log.log(`${BLT} Reloading apps`);\n          // Send reload requests over the dev servers\n          Project.broadcastMessage('reload');\n\n          Webpack.broadcastMessage('reload');\n        } else if (!options.webOnly) {\n          // [SDK 40]: Restart bundler\n          Log.clear();\n          Project.startAsync(projectRoot, { ...options, reset: false });\n          Log.log('Restarting Metro bundler...');\n        }\n        break;\n      case 'R':\n        if (!options.isRemoteReloadingEnabled) {\n          // [SDK 40]: Restart bundler with cache\n          Log.clear();\n          Project.startAsync(projectRoot, { ...options, reset: true });\n          Log.log('Restarting Metro bundler and clearing cache...');\n        }\n        break;\n      case 'o':\n        Log.log(`${BLT} Opening the editor...`);\n        await openInEditorAsync(projectRoot, { editor: process.env.EXPO_EDITOR });\n    }\n  }\n}\n"],"file":"TerminalUI.js"}