{"version":3,"sources":["../../../src/commands/start/installExitHooks.ts"],"names":["installExitHooks","projectRoot","killSignals","signal","process","on","currentSpinner","Log","getSpinner","fail","setSpinner","currentProgress","getProgress","terminate","setBundleProgressBar","spinner","text","color","start","Project","stopAsync","then","stopAndPersist","symbol","exit","catch","error","installCustomExitHook","listener"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,gBAAT,CAA0BC,WAA1B,EAAqD;AAC1D,QAAMC,WAAkC,GAAG,CAAC,QAAD,EAAW,SAAX,CAA3C;;AACA,OAAK,MAAMC,MAAX,IAAqBD,WAArB,EAAkC;AAChCE,IAAAA,OAAO,CAACC,EAAR,CAAWF,MAAX,EAAmB,MAAM;AACvB,YAAMG,cAAc,GAAGC,eAAIC,UAAJ,EAAvB;;AACA,UAAIF,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACG,IAAf;;AACAF,uBAAIG,UAAJ,CAAe,IAAf;AACD;;AACD,YAAMC,eAAe,GAAGJ,eAAIK,WAAJ,EAAxB;;AACA,UAAID,eAAJ,EAAqB;AACnBA,QAAAA,eAAe,CAACE,SAAhB;;AACAN,uBAAIO,oBAAJ,CAAyB,IAAzB;AACD;;AACD,YAAMC,OAAO,GAAG,gBAAI;AAAEC,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAJ,EAAiDC,KAAjD,EAAhB;;AACAX,qBAAIG,UAAJ,CAAeK,OAAf;;AACAI,qBAAQC,SAAR,CAAkBnB,WAAlB,EACGoB,IADH,CACQ,MAAM;AACVN,QAAAA,OAAO,CAACO,cAAR,CAAuB;AAAEN,UAAAA,IAAI,EAAE,gBAAR;AAA0BO,UAAAA,MAAM,EAAG;AAAnC,SAAvB;AACAnB,QAAAA,OAAO,CAACoB,IAAR;AACD,OAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdX,QAAAA,OAAO,CAACN,IAAR,CAAa,uBAAb;;AACAF,uBAAImB,KAAJ,CAAUA,KAAV;AACD,OARH;AASD,KAtBD;AAuBD;AACF;;AAEM,SAASC,qBAAT,CAA+BC,QAA/B,EAAiE;AACtE,QAAM1B,WAAkC,GAAG,CAAC,QAAD,EAAW,SAAX,CAA3C;;AACA,OAAK,MAAMC,MAAX,IAAqBD,WAArB,EAAkC;AAChCE,IAAAA,OAAO,CAACC,EAAR,CAAWF,MAAX,EAAmByB,QAAnB;AACD;AACF","sourcesContent":["import { Project } from 'xdl';\n\nimport Log from '../../log';\nimport { ora } from '../../utils/ora';\n\nexport function installExitHooks(projectRoot: string): void {\n  const killSignals: ['SIGINT', 'SIGTERM'] = ['SIGINT', 'SIGTERM'];\n  for (const signal of killSignals) {\n    process.on(signal, () => {\n      const currentSpinner = Log.getSpinner();\n      if (currentSpinner) {\n        currentSpinner.fail();\n        Log.setSpinner(null);\n      }\n      const currentProgress = Log.getProgress();\n      if (currentProgress) {\n        currentProgress.terminate();\n        Log.setBundleProgressBar(null);\n      }\n      const spinner = ora({ text: 'Stopping server', color: 'white' }).start();\n      Log.setSpinner(spinner);\n      Project.stopAsync(projectRoot)\n        .then(() => {\n          spinner.stopAndPersist({ text: 'Stopped server', symbol: `\\u203A` });\n          process.exit();\n        })\n        .catch(error => {\n          spinner.fail('Failed to stop server');\n          Log.error(error);\n        });\n    });\n  }\n}\n\nexport function installCustomExitHook(listener: NodeJS.SignalsListener) {\n  const killSignals: ['SIGINT', 'SIGTERM'] = ['SIGINT', 'SIGTERM'];\n  for (const signal of killSignals) {\n    process.on(signal, listener);\n  }\n}\n"],"file":"installExitHooks.js"}