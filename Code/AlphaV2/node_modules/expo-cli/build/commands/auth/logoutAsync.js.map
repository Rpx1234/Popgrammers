{"version":3,"sources":["../../../src/commands/auth/logoutAsync.ts"],"names":["actionAsync","user","UserManager","getCurrentUserAsync","silent","accessToken","CommandError","logoutAsync","Log","log","e","message"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,eAAeA,WAAf,GAA6B;AAClC,QAAMC,IAAI,GAAG,MAAMC,mBAAYC,mBAAZ,CAAgC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAhC,CAAnB;;AACA,MAAIH,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEI,WAAV,EAAuB;AACrB,UAAM,KAAIC,uBAAJ,EACJ,oBADI,EAEJ,yDAFI,CAAN;AAID;;AAED,MAAI;AACF,UAAMJ,mBAAYK,WAAZ,EAAN;;AACAC,mBAAIC,GAAJ,CAAQ,YAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,UAAM,KAAIJ,uBAAJ,EAAkB,oBAAmBI,CAAC,CAACC,OAAQ,EAA/C,CAAN;AACD;AACF","sourcesContent":["import { UserManager } from 'xdl';\n\nimport CommandError from '../../CommandError';\nimport Log from '../../log';\n\nexport async function actionAsync() {\n  const user = await UserManager.getCurrentUserAsync({ silent: true });\n  if (user?.accessToken) {\n    throw new CommandError(\n      'ACCESS_TOKEN_ERROR',\n      'Please remove the EXPO_TOKEN environment var to logout.'\n    );\n  }\n\n  try {\n    await UserManager.logoutAsync();\n    Log.log('Logged out');\n  } catch (e) {\n    throw new CommandError(`Couldn't logout: ${e.message}`);\n  }\n}\n"],"file":"logoutAsync.js"}