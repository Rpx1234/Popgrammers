{"version":3,"sources":["../../../src/commands/eject/writeMetroConfig.ts"],"names":["writeMetroConfig","projectRoot","pkg","tempDir","updatingMetroConfigStep","sourceConfigPath","path","join","targetConfigPath","targetConfigPathExists","fs","existsSync","contents","readFileSync","targetContents","CommandError","stop","clear","metro","copySync","succeed","e","stopAndPersist","symbol","text","chalk","yellow","Log","nested","message","bold","dim","newLine"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,gBAAT,CAA0B;AAC/BC,EAAAA,WAD+B;AAE/BC,EAAAA,GAF+B;AAG/BC,EAAAA;AAH+B,CAA1B,EAQJ;AACD;AACF;AACA;AACA;AAEE,QAAMC,uBAAuB,GAAG,0BAAc,6BAAd,CAAhC;;AAEA,MAAI;AACF,UAAMC,gBAAgB,GAAGC,gBAAKC,IAAL,CAAUJ,OAAV,EAAmB,iBAAnB,CAAzB;;AACA,UAAMK,gBAAgB,GAAGF,gBAAKC,IAAL,CAAUN,WAAV,EAAuB,iBAAvB,CAAzB;;AACA,UAAMQ,sBAAsB,GAAGC,mBAAGC,UAAH,CAAcH,gBAAd,CAA/B;;AACA,QAAIC,sBAAJ,EAA4B;AAC1B;AACA,YAAMG,QAAQ,GAAG,yCAAeF,mBAAGG,YAAH,CAAgBL,gBAAhB,EAAkC,MAAlC,CAAf,CAAjB;AACA,YAAMM,cAAc,GAAG,yCAAeJ,mBAAGG,YAAH,CAAgBR,gBAAhB,EAAkC,MAAlC,CAAf,CAAvB;;AACA,UAAIO,QAAQ,KAAKE,cAAjB,EAAiC;AAC/B,cAAM,KAAIC,uBAAJ,EAAiB,+CAAjB,CAAN;AACD,OAFD,MAEO;AACL;AACAX,QAAAA,uBAAuB,CAACY,IAAxB;AACAZ,QAAAA,uBAAuB,CAACa,KAAxB;AACA;AACD;AACF,KAZD,MAYO,IACLP,mBAAGC,UAAH,CAAcL,gBAAKC,IAAL,CAAUN,WAAV,EAAuB,mBAAvB,CAAd,KACAC,GAAG,CAACgB,KADJ,IAEAR,mBAAGC,UAAH,CAAcL,gBAAKC,IAAL,CAAUN,WAAV,EAAuB,kBAAvB,CAAd,CAHK,EAIL;AACA,YAAM,KAAIc,uBAAJ,EAAiB,+CAAjB,CAAN;AACD;;AAEDL,uBAAGS,QAAH,CAAYd,gBAAZ,EAA8BG,gBAA9B;;AACAJ,IAAAA,uBAAuB,CAACgB,OAAxB,CAAgC,oBAAhC;AACD,GA1BD,CA0BE,OAAOC,CAAP,EAAU;AACVjB,IAAAA,uBAAuB,CAACkB,cAAxB,CAAuC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,IAAI,EAAEC,iBAAMC,MAAN,CAAa,+BAAb;AAF+B,KAAvC;;AAIAC,mBAAIC,MAAJ,CAAY,UAASP,CAAC,CAACQ,OAAQ,EAA/B;;AACAF,mBAAIC,MAAJ,CACG,8CAA6CH,iBAAMK,IAAN,CAC5C,oBAD4C,CAE5C,6BAA4BL,iBAAMM,GAAN,CAC5B,+BAAU,gDAAV,CAD4B,CAE5B,EALJ;;AAOAJ,mBAAIK,OAAJ;AACD;AACF","sourcesContent":["import { PackageJSONConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport CommandError from '../../CommandError';\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { learnMore } from '../utils/TerminalLink';\nimport { createFileHash } from './updatePackageJson';\n\nexport function writeMetroConfig({\n  projectRoot,\n  pkg,\n  tempDir,\n}: {\n  projectRoot: string;\n  pkg: PackageJSONConfig;\n  tempDir: string;\n}) {\n  /**\n   * Add metro config, or warn if metro config already exists. The developer will need to add the\n   * hashAssetFiles plugin manually.\n   */\n\n  const updatingMetroConfigStep = logNewSection('Adding Metro bundler config');\n\n  try {\n    const sourceConfigPath = path.join(tempDir, 'metro.config.js');\n    const targetConfigPath = path.join(projectRoot, 'metro.config.js');\n    const targetConfigPathExists = fs.existsSync(targetConfigPath);\n    if (targetConfigPathExists) {\n      // Prevent re-runs from throwing an error if the metro config hasn't been modified.\n      const contents = createFileHash(fs.readFileSync(targetConfigPath, 'utf8'));\n      const targetContents = createFileHash(fs.readFileSync(sourceConfigPath, 'utf8'));\n      if (contents !== targetContents) {\n        throw new CommandError('Existing Metro config found; not overwriting.');\n      } else {\n        // Nothing to change, hide the step and exit.\n        updatingMetroConfigStep.stop();\n        updatingMetroConfigStep.clear();\n        return;\n      }\n    } else if (\n      fs.existsSync(path.join(projectRoot, 'metro.config.json')) ||\n      pkg.metro ||\n      fs.existsSync(path.join(projectRoot, 'rn-cli.config.js'))\n    ) {\n      throw new CommandError('Existing Metro config found; not overwriting.');\n    }\n\n    fs.copySync(sourceConfigPath, targetConfigPath);\n    updatingMetroConfigStep.succeed('Added Metro config');\n  } catch (e) {\n    updatingMetroConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.yellow('Skipped Metro config updates:'),\n    });\n    Log.nested(`\\u203A ${e.message}`);\n    Log.nested(\n      `\\u203A You will need to extend the default ${chalk.bold(\n        '@expo/metro-config'\n      )} in your Metro config.\\n  ${chalk.dim(\n        learnMore('https://docs.expo.dev/guides/customizing-metro')\n      )}`\n    );\n    Log.newLine();\n  }\n}\n"],"file":"writeMetroConfig.js"}