{"version":3,"sources":["../../../src/commands/eject/setupWarnings.ts"],"names":["warnIfDependenciesRequireAdditionalSetup","pkg","sdkVersion","appliedPlugins","warnings","getSetupWarnings","autoPlugins","logSetupWarnings","pkgsWithExtraSetup","filter","plugin","includes","reduce","prev","curr","semver","lte","chalk","bold","dim","dependencies","key","warningLength","Object","keys","length","Log","newLine","warnAdditionalSetupStep","plural","stopAndPersist","symbol","text","yellow","pkgName","message","entries","nested"],"mappings":"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","sourcesContent":["import { PackageJSONConfig } from '@expo/config';\nimport { getLegacyExpoPlugins } from '@expo/prebuild-config';\nimport chalk from 'chalk';\nimport semver from 'semver';\n\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { learnMore } from '../utils/TerminalLink';\n\n/**\n * Some packages are not configured automatically on eject and may require\n * users to add some code, eg: to their AppDelegate.\n */\nexport function warnIfDependenciesRequireAdditionalSetup(\n  pkg: PackageJSONConfig,\n  sdkVersion?: string,\n  appliedPlugins?: string[]\n): Record<string, string> {\n  const warnings = getSetupWarnings({\n    pkg,\n    sdkVersion,\n    appliedPlugins: appliedPlugins ?? [],\n    autoPlugins: getLegacyExpoPlugins(),\n  });\n\n  logSetupWarnings(warnings);\n\n  return warnings;\n}\n\n// Exposed for testing\nexport function getSetupWarnings({\n  pkg,\n  sdkVersion,\n  appliedPlugins,\n  autoPlugins,\n}: {\n  pkg: PackageJSONConfig;\n  sdkVersion?: string;\n  appliedPlugins: string[];\n  autoPlugins: string[];\n}): Record<string, string> {\n  const pkgsWithExtraSetup = autoPlugins\n    .filter(plugin => !appliedPlugins?.includes(plugin))\n    .reduce<Record<string, string>>(\n      (prev, curr) => ({\n        ...prev,\n        [curr]: `https://github.com/expo/expo/tree/master/packages/${curr}`,\n      }),\n      {}\n    );\n\n  // Starting with SDK 40 the manifest is embedded in ejected apps automatically\n  if (sdkVersion && semver.lte(sdkVersion, '39.0.0')) {\n    pkgsWithExtraSetup['expo-constants'] = `${chalk.bold(\n      'Constants.manifest'\n    )} is not available in the bare workflow. You should replace it with ${chalk.bold(\n      'Updates.manifest'\n    )}. ${chalk.dim(\n      learnMore('https://docs.expo.dev/versions/latest/sdk/updates/#updatesmanifest')\n    )}`;\n  }\n\n  const warnings: Record<string, string> = {};\n  if (pkg.dependencies) {\n    for (const key in pkg.dependencies) {\n      if (key in pkgsWithExtraSetup) {\n        warnings[key] = pkgsWithExtraSetup[key];\n      }\n    }\n  }\n  return warnings;\n}\n\nfunction logSetupWarnings(warnings: Record<string, string>) {\n  const warningLength = Object.keys(warnings).length;\n  if (!warningLength) {\n    return;\n  }\n\n  Log.newLine();\n  const warnAdditionalSetupStep = logNewSection(\n    'Checking if any additional setup steps are required for installed SDK packages.'\n  );\n\n  const plural = warningLength > 1;\n\n  warnAdditionalSetupStep.stopAndPersist({\n    symbol: '⚠️ ',\n    text: chalk.yellow.bold(\n      `The app has ${warningLength} package${plural ? 's' : ''} that require${\n        plural ? '' : 's'\n      } extra setup before building:`\n    ),\n  });\n\n  for (const [pkgName, message] of Object.entries(warnings)) {\n    Log.nested(`\\u203A ${chalk.bold(pkgName)}: ${message}`);\n  }\n}\n"],"file":"setupWarnings.js"}