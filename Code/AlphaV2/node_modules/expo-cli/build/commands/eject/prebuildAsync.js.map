{"version":3,"sources":["../../../src/commands/eject/prebuildAsync.ts"],"names":["actionAsync","projectRoot","platform","clean","skipDependencyUpdate","options","npm","packageManager","platforms","split"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,eAAeA,WAAf,CACLC,WADK,EAEL;AACEC,EAAAA,QADF;AAEEC,EAAAA,KAFF;AAGEC,EAAAA,oBAHF;AAIE,KAAGC;AAJL,CAFK,EAaL;AACA,MAAIA,OAAO,CAACC,GAAZ,EAAiB;AACfD,IAAAA,OAAO,CAACE,cAAR,GAAyB,KAAzB;AACD;;AAED,QAAMC,SAAS,GAAG,8CAAsBN,QAAtB,CAAlB;;AAEA,MAAIC,KAAJ,EAAW;AACT,QAAI,MAAM,2CAAV,EAAuC,OAD9B,CAET;;AACA,UAAM,4CAAkBF,WAAlB,EAA+BO,SAA/B,CAAN;AACD,GAJD,MAIO;AACL,UAAM,oEAA0CP,WAA1C,EAAuDO,SAAvD,CAAN;AACD;;AAED,QAAM,uCAAcP,WAAd,EAA2B,EAC/B,GAAGI,OAD4B;AAE/BD,IAAAA,oBAAoB,EAAEA,oBAAoB,GAAGA,oBAAoB,CAACK,KAArB,CAA2B,GAA3B,CAAH,GAAqC,EAFhD;AAG/BD,IAAAA;AAH+B,GAA3B,CAAN;AAKD","sourcesContent":["import maybeBailOnGitStatusAsync from '../utils/maybeBailOnGitStatusAsync';\nimport { clearNativeFolder, promptToClearMalformedNativeProjectsAsync } from './clearNativeFolder';\nimport { platformsFromPlatform } from './platformOptions';\nimport { EjectAsyncOptions, prebuildAsync } from './prebuildAppAsync';\n\nexport async function actionAsync(\n  projectRoot: string,\n  {\n    platform,\n    clean,\n    skipDependencyUpdate,\n    ...options\n  }: EjectAsyncOptions & {\n    npm?: boolean;\n    platform?: string;\n    clean?: boolean;\n    skipDependencyUpdate?: string;\n  }\n) {\n  if (options.npm) {\n    options.packageManager = 'npm';\n  }\n\n  const platforms = platformsFromPlatform(platform);\n\n  if (clean) {\n    if (await maybeBailOnGitStatusAsync()) return;\n    // Clear the native folders before syncing\n    await clearNativeFolder(projectRoot, platforms);\n  } else {\n    await promptToClearMalformedNativeProjectsAsync(projectRoot, platforms);\n  }\n\n  await prebuildAsync(projectRoot, {\n    ...options,\n    skipDependencyUpdate: skipDependencyUpdate ? skipDependencyUpdate.split(',') : [],\n    platforms,\n  } as EjectAsyncOptions);\n}\n"],"file":"prebuildAsync.js"}