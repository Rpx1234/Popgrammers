{"version":3,"sources":["../../src/commands/init.ts"],"names":["program","command","alias","helpGroup","description","option"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAEe,kBAAUA,OAAV,EAA4B;AACzC,4CACEA,OAAO,CACJC,OADH,CACW,aADX,EAEGC,KAFH,CAES,GAFT,EAGGC,SAHH,CAGa,MAHb,EAIGC,WAJH,CAIe,2BAJf,EAKGC,MALH,CAMI,uBANJ,EAOI,kLAPJ,EASGA,MATH,CASU,OATV,EASmB,uEATnB,EAUGA,MAVH,CAUU,cAVV,EAU0B,4CAV1B,EAWGA,MAXH,CAWU,eAXV,EAW2B,qBAAM,2DAXjC,EAYGA,MAZH,CAYU,OAZV,EAYmB,4DAZnB,EAaGA,MAbH,CAaU,QAbV,EAaoB,oEAbpB,CADF,EAeE,mEAAa,aAAb,GAfF;AAiBD","sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport { applyAsyncAction } from './utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncAction<string>(\n    program\n      .command('init [name]')\n      .alias('i')\n      .helpGroup('core')\n      .description('Create a new Expo project')\n      .option(\n        '-t, --template [name]',\n        'Specify which template to use. Valid options are \"blank\", \"tabs\", \"bare-minimum\" or a package on npm (e.g. \"expo-template-bare-minimum\") that includes an Expo project template.'\n      )\n      .option('--npm', 'Use npm to install dependencies. (default when Yarn is not installed)')\n      .option('--no-install', 'Skip installing npm packages or CocoaPods.')\n      .option('--name <name>', chalk`{yellow Deprecated}: Use {bold expo init [name]} instead.`)\n      .option('--yes', 'Use default options. Same as \"expo init . --template blank')\n      .option('--yarn', 'Use Yarn to install dependencies. (default when Yarn is installed)'),\n    () => import('./initAsync')\n  );\n}\n"],"file":"init.js"}