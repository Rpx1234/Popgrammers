{"version":3,"sources":["../../../src/commands/utils/url.ts"],"names":["getExpoDomainUrl","process","env","EXPO_STAGING","EXPO_LOCAL","constructBuildLogsUrl","buildId","username","projectSlug","constructTurtleStatusUrl","constructArtifactUrl","artifactId","isUrlAvailableAsync","url","Promise","resolve","dns","lookup","err"],"mappings":";;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,gBAAT,GAAoC;AACzC,MAAIC,OAAO,CAACC,GAAR,CAAYC,YAAhB,EAA8B;AAC5B,WAAQ,0BAAR;AACD,GAFD,MAEO,IAAIF,OAAO,CAACC,GAAR,CAAYE,UAAhB,EAA4B;AACjC,WAAQ,kBAAR;AACD,GAFM,MAEA;AACL,WAAQ,kBAAR;AACD;AACF;;AAEM,SAASC,qBAAT,CAA+B;AACpCC,EAAAA,OADoC;AAEpCC,EAAAA,QAFoC;AAGpCC,EAAAA;AAHoC,CAA/B,EASI;AACT,MAAID,QAAQ,IAAIC,WAAhB,EAA6B;AAC3B,WAAQ,GAAER,gBAAgB,EAAG,aAAYO,QAAS,aAAYC,WAAY,WAAUF,OAAQ,EAA5F;AACD,GAFD,MAEO,IAAIC,QAAJ,EAAc;AACnB,WAAQ,GAAEP,gBAAgB,EAAG,aAAYO,QAAS,WAAUD,OAAQ,EAApE;AACD,GAFM,MAEA;AACL,WAAQ,GAAEN,gBAAgB,EAAG,WAAUM,OAAQ,EAA/C;AACD;AACF;;AAEM,SAASG,wBAAT,GAA4C;AACjD,SAAQ,GAAET,gBAAgB,EAAG,gBAA7B;AACD;;AAEM,SAASU,oBAAT,CAA8BC,UAA9B,EAA0D;AAC/D,SAAQ,GAAEX,gBAAgB,EAAG,cAAaW,UAAW,EAArD;AACD;;AAEM,SAASC,mBAAT,CAA6BC,GAA7B,EAA4D;AACjE,SAAO,IAAIC,OAAJ,CAAqBC,OAAO,IAAI;AACrCC,mBAAIC,MAAJ,CAAWJ,GAAX,EAAgBK,GAAG,IAAI;AACrBH,MAAAA,OAAO,CAAC,CAACG,GAAF,CAAP;AACD,KAFD;AAGD,GAJM,CAAP;AAKD","sourcesContent":["import dns from 'dns';\n\nexport function getExpoDomainUrl(): string {\n  if (process.env.EXPO_STAGING) {\n    return `https://staging.expo.dev`;\n  } else if (process.env.EXPO_LOCAL) {\n    return `http://expo.test`;\n  } else {\n    return `https://expo.dev`;\n  }\n}\n\nexport function constructBuildLogsUrl({\n  buildId,\n  username,\n  projectSlug,\n}: {\n  buildId: string;\n  username?: string;\n  projectSlug?: string;\n  v2?: boolean;\n}): string {\n  if (username && projectSlug) {\n    return `${getExpoDomainUrl()}/accounts/${username}/projects/${projectSlug}/builds/${buildId}`;\n  } else if (username) {\n    return `${getExpoDomainUrl()}/accounts/${username}/builds/${buildId}`;\n  } else {\n    return `${getExpoDomainUrl()}/builds/${buildId}`;\n  }\n}\n\nexport function constructTurtleStatusUrl(): string {\n  return `${getExpoDomainUrl()}/turtle-status`;\n}\n\nexport function constructArtifactUrl(artifactId: string): string {\n  return `${getExpoDomainUrl()}/artifacts/${artifactId}`;\n}\n\nexport function isUrlAvailableAsync(url: string): Promise<boolean> {\n  return new Promise<boolean>(resolve => {\n    dns.lookup(url, err => {\n      resolve(!err);\n    });\n  });\n}\n"],"file":"url.js"}