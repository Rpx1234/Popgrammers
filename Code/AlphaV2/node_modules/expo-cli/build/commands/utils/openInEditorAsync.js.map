{"version":3,"sources":["../../../src/commands/utils/openInEditorAsync.ts"],"names":["guessEditor","editors","defaultEditor","getEditor","openInEditorAsync","path","options","editor","Log","debug","name","binary","id","error"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,WAAT,GAAuB;AAC5B,MAAI;AACF,WAAOC,qBAAQC,aAAR,EAAP;AACD,GAFD,CAEE,MAAM;AACN,WAAOD,qBAAQE,SAAR,CAAkB,QAAlB,CAAP;AACD;AACF;;AAEM,eAAeC,iBAAf,CACLC,IADK,EAELC,OAA4B,GAAG,EAF1B,EAGa;AAClB,QAAMC,MAAM,GAAGD,OAAO,CAACC,MAAR,GAAiBN,qBAAQE,SAAR,CAAkBG,OAAO,CAACC,MAA1B,CAAjB,GAAqDP,WAAW,EAA/E;;AAEAQ,iBAAIC,KAAJ,CAAW,WAAUJ,IAAK,OAAME,MAAM,CAACG,IAAK,UAASH,MAAM,CAACI,MAAO,SAAQJ,MAAM,CAACK,EAAG,GAArF;;AACA,MAAIL,MAAJ,EAAY;AACV,QAAI;AACF,YAAM,2BAAWA,MAAM,CAACI,MAAlB,EAA0B,CAACN,IAAD,CAA1B,CAAN;AACA,aAAO,IAAP;AACD,KAHD,CAGE,MAAM,CAAE;AACX;;AAED,MAAIC,OAAO,CAACC,MAAZ,EAAoB;AAClBC,mBAAIK,KAAJ,CACG,oEAAmEP,OAAO,CAACC,MAAO,sCADrF;;AAGA,WAAOH,iBAAiB,CAACC,IAAD,EAAO,EAAP,CAAxB;AACD;;AAEDG,iBAAIK,KAAJ,CACE,4IADF;;AAGA,SAAO,KAAP;AACD","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport editors from 'env-editor';\n\nimport Log from '../../log';\n\nexport function guessEditor() {\n  try {\n    return editors.defaultEditor();\n  } catch {\n    return editors.getEditor('vscode');\n  }\n}\n\nexport async function openInEditorAsync(\n  path: string,\n  options: { editor?: string } = {}\n): Promise<boolean> {\n  const editor = options.editor ? editors.getEditor(options.editor) : guessEditor();\n\n  Log.debug(`Opening ${path} in ${editor.name} (bin: ${editor.binary}, id: ${editor.id})`);\n  if (editor) {\n    try {\n      await spawnAsync(editor.binary, [path]);\n      return true;\n    } catch {}\n  }\n\n  if (options.editor) {\n    Log.error(\n      `Could not resolve editor from environment variable $EXPO_EDITOR=\"${options.editor}\". Trying again with system default.`\n    );\n    return openInEditorAsync(path, {});\n  }\n\n  Log.error(\n    'Could not open editor, you can set it by defining the $EDITOR environment variable with the binary of your editor. (e.g. \"code\" or \"atom\")'\n  );\n  return false;\n}\n"],"file":"openInEditorAsync.js"}