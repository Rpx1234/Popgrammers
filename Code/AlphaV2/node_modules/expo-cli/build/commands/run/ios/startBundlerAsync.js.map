{"version":3,"sources":["../../../../src/commands/run/ios/startBundlerAsync.ts"],"names":["setGlobalDevClientSettingsAsync","projectRoot","devClient","scheme","catch","ProjectSettings","setAsync","startBundlerAsync","metroPort","platforms","Project","startAsync","TerminalUI","isWebSocketsEnabled","isRemoteReloadingEnabled"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEO,eAAeA,+BAAf,CAA+CC,WAA/C,EAAoE;AACzE,QAAMC,SAAS,GAAG,IAAlB;AACA,QAAMC,MAAM,GAAG,MAAM,gDAAgCF,WAAhC,EAA6CG,KAA7C,CAAmD,MAAM,IAAzD,CAArB;AACA,QAAMC,uBAAgBC,QAAhB,CAAyBL,WAAzB,EAAsC;AAC1CC,IAAAA,SAD0C;AAE1CC,IAAAA;AAF0C,GAAtC,CAAN;AAID;;AAEM,eAAeI,iBAAf,CACLN,WADK,EAEL;AAAEO,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAFK,EAGL;AACA;AACA,4CAAiBR,WAAjB,EAFA,CAGA;;AACA,QAAMC,SAAS,GAAG,IAAlB;AACA,QAAMQ,eAAQC,UAAR,CAAmBV,WAAnB,EAAgC;AAAEC,IAAAA,SAAF;AAAaM,IAAAA;AAAb,GAAhC,CAAN;AACA,QAAMI,UAAU,GAACD,UAAX,CAAsBV,WAAtB,EAAmC;AACvCC,IAAAA,SADuC;AAEvC;AACAW,IAAAA,mBAAmB,EAAE,IAHkB;AAIvCC,IAAAA,wBAAwB,EAAE,IAJa;AAKvCL,IAAAA;AALuC,GAAnC,CAAN;AAOD","sourcesContent":["import { Project, ProjectSettings } from 'xdl';\n\nimport * as TerminalUI from '../../start/TerminalUI';\nimport { installExitHooks } from '../../start/installExitHooks';\nimport { getOptionalDevClientSchemeAsync } from '../utils/schemes';\n\nexport async function setGlobalDevClientSettingsAsync(projectRoot: string) {\n  const devClient = true;\n  const scheme = await getOptionalDevClientSchemeAsync(projectRoot).catch(() => null);\n  await ProjectSettings.setAsync(projectRoot, {\n    devClient,\n    scheme,\n  });\n}\n\nexport async function startBundlerAsync(\n  projectRoot: string,\n  { metroPort, platforms }: Pick<Project.StartOptions, 'metroPort' | 'platforms'>\n) {\n  // Add clean up hooks\n  installExitHooks(projectRoot);\n  // This basically means don't use the Client app.\n  const devClient = true;\n  await Project.startAsync(projectRoot, { devClient, metroPort });\n  await TerminalUI.startAsync(projectRoot, {\n    devClient,\n    // Enable controls\n    isWebSocketsEnabled: true,\n    isRemoteReloadingEnabled: true,\n    platforms,\n  });\n}\n"],"file":"startBundlerAsync.js"}