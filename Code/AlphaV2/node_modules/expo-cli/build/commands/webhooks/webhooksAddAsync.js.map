{"version":3,"sources":["../../../src/commands/webhooks/webhooksAddAsync.ts"],"names":["actionAsync","projectRoot","url","event","options","test","secret","experienceName","project","client","spinner","start","postAsync","id","succeed"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAQO,eAAeA,WAAf,CAA2BC,WAA3B,EAAgD;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAc,KAAGC;AAAjB,CAAhD,EAAqF;AAC1F,yBAAO,OAAOF,GAAP,KAAe,QAAf,IAA2B,UAAUG,IAAV,CAAeH,GAAf,CAAlC,EAAuD,+BAAvD;AACA,yBAAO,OAAOC,KAAP,KAAiB,QAAxB,EAAkC,6BAAlC;AACA,QAAMG,MAAM,GAAG,6BAAeF,OAAf,KAA2B,8BAA1C;AAEA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAsC,MAAM,yBAAWR,WAAX,CAAlD;AAEA,QAAMS,OAAO,GAAG,gBAAK,qBAAoBH,cAAe,EAAxC,EAA2CI,KAA3C,EAAhB;AACA,QAAMF,MAAM,CAACG,SAAP,CAAkB,YAAWJ,OAAO,CAACK,EAAG,WAAxC,EAAoD;AAAEX,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcG,IAAAA;AAAd,GAApD,CAAN;AACAI,EAAAA,OAAO,CAACI,OAAR;AACD","sourcesContent":["import assert from 'assert';\n\nimport { ora } from '../../utils/ora';\nimport { generateSecret, setupAsync, validateSecret, WebhookEvent } from './utils';\n\ntype Options = {\n  url?: string;\n  event?: WebhookEvent;\n  secret?: string;\n};\n\nexport async function actionAsync(projectRoot: string, { url, event, ...options }: Options) {\n  assert(typeof url === 'string' && /^https?/.test(url), '--url: a HTTP URL is required');\n  assert(typeof event === 'string', '--event: string is required');\n  const secret = validateSecret(options) || generateSecret();\n\n  const { experienceName, project, client } = await setupAsync(projectRoot);\n\n  const spinner = ora(`Adding webhook to ${experienceName}`).start();\n  await client.postAsync(`projects/${project.id}/webhooks`, { url, event, secret });\n  spinner.succeed();\n}\n"],"file":"webhooksAddAsync.js"}