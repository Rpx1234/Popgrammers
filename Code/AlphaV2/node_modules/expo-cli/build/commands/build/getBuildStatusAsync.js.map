{"version":3,"sources":["../../../src/commands/build/getBuildStatusAsync.ts"],"names":["getBuildStatusAsync","projectRoot","options","user","UserManager","ensureLoggedInAsync","exp","api","ApiV2","clientForUser","postAsync","manifest"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkDO,eAAeA,mBAAf,CACLC,WADK,EAELC,OAA4B,GAAG,EAF1B,EAGuB;AAC5B,QAAMC,IAAI,GAAG,MAAMC,mBAAYC,mBAAZ,EAAnB;AAEA,0CAAgBH,OAAhB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAU,MAAM,oCAAYL,WAAZ,EAAyBC,OAAzB,CAAtB;;AAEA,QAAMK,GAAG,GAAGC,aAAMC,aAAN,CAAoBN,IAApB,CAAZ;;AACA,SAAO,MAAMI,GAAG,CAACG,SAAJ,CAAc,cAAd,EAA8B;AAAEC,IAAAA,QAAQ,EAAEL,GAAZ;AAAiBJ,IAAAA;AAAjB,GAA9B,CAAb;AACD","sourcesContent":["import { ApiV2, UserManager } from 'xdl';\n\nimport { getExpAsync, GetExpConfigOptions, validateOptions } from './startBuildAsync';\n\ntype JobState = 'pending' | 'started' | 'in-progress' | 'finished' | 'errored' | 'sent-to-queue';\n\nexport type TurtleMode = 'normal' | 'high' | 'high_only';\n\n// https://github.com/expo/universe/blob/283efaba3acfdefdc7db12f649516b6d6a94bec4/server/www/src/data/entities/builds/BuildJobEntity.ts#L25-L56\nexport interface BuildJobFields {\n  id: string;\n  experienceName: string;\n  status: JobState;\n  platform: 'ios' | 'android';\n  userId: string | null;\n  experienceId: string;\n  artifactId: string | null;\n  nonce: string | null;\n  artifacts: {\n    url?: string;\n    manifestPlistUrl?: string;\n  } | null;\n  config: {\n    buildType?: string;\n    releaseChannel?: string;\n    bundleIdentifier?: string;\n  };\n  logs: object | null;\n  extraData: {\n    request_id?: string;\n    turtleMode?: TurtleMode;\n  } | null;\n  created: Date;\n  updated: Date;\n  expirationDate: Date;\n  sdkVersion: string | null;\n  turtleVersion: string | null;\n  buildDuration: number | null;\n  priority: string;\n  accountId: string | null;\n}\n\nexport type BuildStatusResult = {\n  jobs?: BuildJobFields[];\n  err?: null;\n  userHasBuiltAppBefore: boolean;\n  userHasBuiltExperienceBefore: boolean;\n  canPurchasePriorityBuilds?: boolean;\n  numberOfRemainingPriorityBuilds?: number;\n  hasUnlimitedPriorityBuilds?: boolean;\n};\n\nexport async function getBuildStatusAsync(\n  projectRoot: string,\n  options: GetExpConfigOptions = {}\n): Promise<BuildStatusResult> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  validateOptions(options);\n  const { exp } = await getExpAsync(projectRoot, options);\n\n  const api = ApiV2.clientForUser(user);\n  return await api.postAsync('build/status', { manifest: exp, options });\n}\n"],"file":"getBuildStatusAsync.js"}