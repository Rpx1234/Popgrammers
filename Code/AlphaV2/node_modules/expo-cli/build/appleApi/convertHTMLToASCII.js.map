{"version":3,"sources":["../../src/appleApi/convertHTMLToASCII.ts"],"names":["turndownServices","getService","rootUrl","turndownService","TurndownService","addRule","filter","replacement","content","chalk","strikethrough","bold","italic","node","options","linkStyle","nodeName","getAttribute","href","startsWith","terminalLink","isSupported","cyan","underline","convertHTMLToASCII","service","turndown","process","stdout","columns"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAFA;AAIA,MAAMA,gBAAqC,GAAG,EAA9C;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAAqC;AACnC,MAAIF,gBAAgB,CAACE,OAAD,CAApB,EAA+B;AAC7B,WAAOF,gBAAgB,CAACE,OAAD,CAAvB;AACD;;AACD,QAAMC,eAAe,GAAG,KAAIC,mBAAJ,GAAxB;AACAD,EAAAA,eAAe,CAACE,OAAhB,CAAwB,eAAxB,EAAyC;AACvCC,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,GAAR,EAAa,QAAb,CAD+B;;AAEvCC,IAAAA,WAAW,CAACC,OAAD,EAA0B;AACnC,aAAOC,iBAAMC,aAAN,CAAoBF,OAApB,CAAP;AACD;;AAJsC,GAAzC;AAMAL,EAAAA,eAAe,CAACE,OAAhB,CAAwB,QAAxB,EAAkC;AAChCC,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,GAAX,CADwB;;AAEhCC,IAAAA,WAAW,CAACC,OAAD,EAA0B;AACnC,aAAOC,iBAAME,IAAN,CAAWH,OAAX,CAAP;AACD;;AAJ+B,GAAlC;AAMAL,EAAAA,eAAe,CAACE,OAAhB,CAAwB,UAAxB,EAAoC;AAClCC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,GAAP,CAD0B;;AAElCC,IAAAA,WAAW,CAACC,OAAD,EAA0B;AACnC,aAAOC,iBAAMG,MAAN,CAAaJ,OAAb,CAAP;AACD;;AAJiC,GAApC;AAMAL,EAAAA,eAAe,CAACE,OAAhB,CAAwB,SAAxB,EAAmC;AACjCC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADyB;;AAEjCC,IAAAA,WAAW,CAACC,OAAD,EAA0B;AACnC,aAAO,OAAOC,iBAAME,IAAN,CAAWH,OAAX,CAAP,GAA6B,IAApC;AACD;;AAJgC,GAAnC;AAMAL,EAAAA,eAAe,CAACE,OAAhB,CAAwB,YAAxB,EAAsC;AACpCC,IAAAA,MAAM,CAACO,IAAD,EAAYC,OAAZ,EAA0B;AAC9B,aAAOA,OAAO,CAACC,SAAR,KAAsB,SAAtB,IAAmCF,IAAI,CAACG,QAAL,KAAkB,GAArD,IAA4DH,IAAI,CAACI,YAAL,CAAkB,MAAlB,CAAnE;AACD,KAHmC;;AAIpCV,IAAAA,WAAW,CAACC,OAAD,EAAkBK,IAAlB,EAA6B;AACtC,UAAIK,IAAI,GAAGL,IAAI,CAACI,YAAL,CAAkB,MAAlB,CAAX;AACA,UAAIC,IAAI,CAACC,UAAL,CAAgB,GAAhB,CAAJ,EAA0BD,IAAI,GAAI,GAAEhB,OAAQ,GAAEgB,IAAK,EAAzB;;AAC1B,UAAIE,wBAAaC,WAAjB,EAA8B;AAC5B,eAAOZ,iBAAMa,IAAN,CAAW,6BAAad,OAAb,EAAsBU,IAAtB,CAAX,CAAP;AACD;;AACD,aAAQ,GAAET,iBAAMa,IAAN,CAAWd,OAAX,CAAoB,KAAIC,iBAAMc,SAAN,CAAgBL,IAAhB,CAAsB,GAAxD;AACD;;AAXmC,GAAtC;AAcAlB,EAAAA,gBAAgB,CAACE,OAAD,CAAhB,GAA4BC,eAA5B;AACA,SAAOA,eAAP;AACD;;AAEM,SAASqB,kBAAT,CAA4B;AACjChB,EAAAA,OADiC;AAEjCN,EAAAA;AAFiC,CAA5B,EAMI;AACT,QAAMuB,OAAO,GAAGxB,UAAU,CAACC,OAAD,CAA1B;AACA,SAAO,yBAASuB,OAAO,CAACC,QAAR,CAAiBlB,OAAjB,CAAT,EAAoCmB,OAAO,CAACC,MAAR,CAAeC,OAAf,IAA0B,EAA9D,CAAP;AACD","sourcesContent":["import chalk from 'chalk';\nimport terminalLink from 'terminal-link';\n// @ts-ignore\nimport TurndownService from 'turndown';\nimport wrapAnsi from 'wrap-ansi';\n\nconst turndownServices: Record<string, any> = {};\n\nfunction getService(rootUrl: string) {\n  if (turndownServices[rootUrl]) {\n    return turndownServices[rootUrl];\n  }\n  const turndownService = new TurndownService();\n  turndownService.addRule('strikethrough', {\n    filter: ['del', 's', 'strike'],\n    replacement(content: string): string {\n      return chalk.strikethrough(content);\n    },\n  });\n  turndownService.addRule('strong', {\n    filter: ['strong', 'b'],\n    replacement(content: string): string {\n      return chalk.bold(content);\n    },\n  });\n  turndownService.addRule('emphasis', {\n    filter: ['em', 'i'],\n    replacement(content: string): string {\n      return chalk.italic(content);\n    },\n  });\n  turndownService.addRule('heading', {\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n    replacement(content: string): string {\n      return '\\n' + chalk.bold(content) + '\\n';\n    },\n  });\n  turndownService.addRule('inlineLink', {\n    filter(node: any, options: any) {\n      return options.linkStyle === 'inlined' && node.nodeName === 'A' && node.getAttribute('href');\n    },\n    replacement(content: string, node: any) {\n      let href = node.getAttribute('href');\n      if (href.startsWith('/')) href = `${rootUrl}${href}`;\n      if (terminalLink.isSupported) {\n        return chalk.cyan(terminalLink(content, href));\n      }\n      return `${chalk.cyan(content)} (${chalk.underline(href)})`;\n    },\n  });\n\n  turndownServices[rootUrl] = turndownService;\n  return turndownService;\n}\n\nexport function convertHTMLToASCII({\n  content,\n  rootUrl,\n}: {\n  content: string;\n  rootUrl: string;\n}): string {\n  const service = getService(rootUrl);\n  return wrapAnsi(service.turndown(content), process.stdout.columns || 80);\n}\n"],"file":"convertHTMLToASCII.js"}