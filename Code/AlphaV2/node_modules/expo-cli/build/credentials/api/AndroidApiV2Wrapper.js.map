{"version":3,"sources":["../../../src/credentials/api/AndroidApiV2Wrapper.ts"],"names":["ApiClient","constructor","api","getAllCredentialsApi","getAsync","credentials","getAllCredentialsForAppApi","experienceName","updateKeystoreApi","keystore","putAsync","updateFcmKeyApi","fcmApiKey","removeKeystoreApi","deleteAsync","removeFcmKeyApi"],"mappings":";;;;;;;AAMA;AACA;AACe,MAAMA,SAAN,CAAgB;AAC7BC,EAAAA,WAAW,CAASC,GAAT,EAAqB;AAAA,SAAZA,GAAY,GAAZA,GAAY;AAAE;;AAED,QAApBC,oBAAoB,GAAuC;AAAA;;AACtE,WAAO,0BAAC,MAAM,KAAKD,GAAL,CAASE,QAAT,CAAkB,qBAAlB,CAAP,gFAAkDC,WAAlD,KAAiE,EAAxE;AACD;;AACsC,QAA1BC,0BAA0B,CAACC,cAAD,EAAsD;AAC3F,WAAO,MAAM,KAAKL,GAAL,CAASE,QAAT,CAAmB,uBAAsBG,cAAe,EAAxD,CAAb;AACD;;AAC6B,QAAjBC,iBAAiB,CAACD,cAAD,EAAyBE,QAAzB,EAA4D;AACxF,WAAO,MAAM,KAAKP,GAAL,CAASQ,QAAT,CAAmB,gCAA+BH,cAAe,EAAjE,EAAoE;AAAEE,MAAAA;AAAF,KAApE,CAAb;AACD;;AAC2B,QAAfE,eAAe,CAACJ,cAAD,EAAyBK,SAAzB,EAA2D;AACrF,WAAO,MAAM,KAAKV,GAAL,CAASQ,QAAT,CAAmB,4BAA2BH,cAAe,EAA7D,EAAgE;AAAEK,MAAAA;AAAF,KAAhE,CAAb;AACD;;AAC6B,QAAjBC,iBAAiB,CAACN,cAAD,EAAwC;AACpE,UAAM,KAAKL,GAAL,CAASY,WAAT,CAAsB,gCAA+BP,cAAe,EAApE,CAAN;AACD;;AAC2B,QAAfQ,eAAe,CAACR,cAAD,EAAwC;AAClE,UAAM,KAAKL,GAAL,CAASY,WAAT,CAAsB,4BAA2BP,cAAe,EAAhE,CAAN;AACD;;AApB4B","sourcesContent":["import { ApiV2 } from 'xdl';\n\nimport { AndroidCredentials, Keystore } from '../credentials';\n\ntype AllCredentialsApiResponse = AndroidCredentials[];\n\n// This class should not be used directly, use only as part of cached api client from ./AndroidApi.ts\n// or mock it in tests (it's easier to mock this class than ApiV2 directly)\nexport default class ApiClient {\n  constructor(private api: ApiV2) {}\n\n  public async getAllCredentialsApi(): Promise<AllCredentialsApiResponse> {\n    return (await this.api.getAsync('credentials/android'))?.credentials || [];\n  }\n  public async getAllCredentialsForAppApi(experienceName: string): Promise<AndroidCredentials> {\n    return await this.api.getAsync(`credentials/android/${experienceName}`);\n  }\n  public async updateKeystoreApi(experienceName: string, keystore: Keystore): Promise<void> {\n    return await this.api.putAsync(`credentials/android/keystore/${experienceName}`, { keystore });\n  }\n  public async updateFcmKeyApi(experienceName: string, fcmApiKey: string): Promise<void> {\n    return await this.api.putAsync(`credentials/android/push/${experienceName}`, { fcmApiKey });\n  }\n  public async removeKeystoreApi(experienceName: string): Promise<void> {\n    await this.api.deleteAsync(`credentials/android/keystore/${experienceName}`);\n  }\n  public async removeFcmKeyApi(experienceName: string): Promise<void> {\n    await this.api.deleteAsync(`credentials/android/push/${experienceName}`);\n  }\n}\n"],"file":"AndroidApiV2Wrapper.js"}