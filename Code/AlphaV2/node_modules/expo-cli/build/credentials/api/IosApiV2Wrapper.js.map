{"version":3,"sources":["../../../src/credentials/api/IosApiV2Wrapper.ts"],"names":["ApiClient","constructor","api","getAllCredentialsApi","accountName","getAsync","owner","getAllCredentialsForAppApi","projectName","bundleIdentifier","getUserCredentialsByIdApi","id","createDistCertApi","credentials","postAsync","updateDistCertApi","putAsync","deleteDistCertApi","deleteAsync","useDistCertApi","userCredentialsId","experienceName","createPushKeyApi","updatePushKeyApi","deletePushKeyApi","usePushKeyApi","deletePushCertApi","updateProvisioningProfileApi","deleteProvisioningProfileApi"],"mappings":"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","sourcesContent":["import { ApiV2 } from 'xdl';\n\nimport * as appleApi from '../../appleApi';\nimport { IosAppCredentials, IosDistCredentials, IosPushCredentials } from '../credentials';\n\nexport interface AppLookupParams {\n  accountName: string;\n  projectName: string;\n  bundleIdentifier: string;\n}\n\ninterface IosAllCredentialsForApp extends IosAppCredentials {\n  pushCredentials: Omit<IosPushCredentials, 'id' | 'type'>;\n  distCredentials: Omit<IosDistCredentials, 'id' | 'type'>;\n}\n\ninterface AllCredentialsApiResponse {\n  appCredentials: IosAppCredentials[];\n  userCredentials: (IosDistCredentials | IosPushCredentials)[];\n}\n\n// This class should not be used directly, use only as part of cached api client from ./IosApi.ts\n// or mock it in tests (it's easier to mock this class than ApiV2 directly)\nexport default class ApiClient {\n  constructor(private api: ApiV2) {}\n\n  public async getAllCredentialsApi(accountName: string): Promise<AllCredentialsApiResponse> {\n    return await this.api.getAsync('credentials/ios', { owner: accountName });\n  }\n  public async getAllCredentialsForAppApi({\n    accountName,\n    projectName,\n    bundleIdentifier,\n  }: AppLookupParams): Promise<IosAllCredentialsForApp> {\n    return await this.api.getAsync(\n      `credentials/ios/@${accountName}/${projectName}/${bundleIdentifier}`\n    );\n  }\n\n  public async getUserCredentialsByIdApi(\n    id: number,\n    accountName: string\n  ): Promise<IosDistCredentials | IosPushCredentials> {\n    return await this.api.getAsync(`credentials/ios/userCredentials/${id}`, { owner: accountName });\n  }\n\n  public async createDistCertApi(\n    accountName: string,\n    credentials: appleApi.DistCert\n  ): Promise<number> {\n    const { id } = await this.api.postAsync('credentials/ios/dist', {\n      owner: accountName,\n      credentials,\n    });\n    return id;\n  }\n\n  public async updateDistCertApi(\n    id: number,\n    accountName: string,\n    credentials: appleApi.DistCert\n  ): Promise<void> {\n    await this.api.putAsync(`credentials/ios/dist/${id}`, { credentials, owner: accountName });\n  }\n\n  public async deleteDistCertApi(id: number, accountName: string): Promise<void> {\n    await this.api.deleteAsync(`credentials/ios/dist/${id}`, { owner: accountName });\n  }\n\n  public async useDistCertApi(\n    { accountName, projectName, bundleIdentifier }: AppLookupParams,\n    userCredentialsId: number\n  ): Promise<void> {\n    await this.api.postAsync('credentials/ios/use/dist', {\n      experienceName: `@${accountName}/${projectName}`,\n      owner: accountName,\n      bundleIdentifier,\n      userCredentialsId,\n    });\n  }\n\n  public async createPushKeyApi(\n    accountName: string,\n    credentials: appleApi.PushKey\n  ): Promise<number> {\n    const { id } = await this.api.postAsync('credentials/ios/push', {\n      owner: accountName,\n      credentials,\n    });\n    return id;\n  }\n\n  public async updatePushKeyApi(\n    id: number,\n    accountName: string,\n    credentials: appleApi.PushKey\n  ): Promise<IosPushCredentials> {\n    return await this.api.putAsync(`credentials/ios/push/${id}`, { owner: accountName });\n  }\n\n  public async deletePushKeyApi(id: number, accountName: string): Promise<void> {\n    await this.api.deleteAsync(`credentials/ios/push/${id}`, { owner: accountName });\n  }\n\n  public async usePushKeyApi(\n    { accountName, projectName, bundleIdentifier }: AppLookupParams,\n    userCredentialsId: number\n  ): Promise<void> {\n    await this.api.postAsync('credentials/ios/use/push', {\n      experienceName: `@${accountName}/${projectName}`,\n      owner: accountName,\n      bundleIdentifier,\n      userCredentialsId,\n    });\n  }\n\n  public async deletePushCertApi({\n    accountName,\n    projectName,\n    bundleIdentifier,\n  }: AppLookupParams): Promise<void> {\n    await this.api.postAsync(`credentials/ios/pushCert/delete`, {\n      experienceName: `@${accountName}/${projectName}`,\n      owner: accountName,\n      bundleIdentifier,\n    });\n  }\n\n  public async updateProvisioningProfileApi(\n    { accountName, projectName, bundleIdentifier }: AppLookupParams,\n    credentials: appleApi.ProvisioningProfile\n  ): Promise<void> {\n    await this.api.postAsync(`credentials/ios/provisioningProfile/update`, {\n      experienceName: `@${accountName}/${projectName}`,\n      owner: accountName,\n      bundleIdentifier,\n      credentials,\n    });\n  }\n\n  public async deleteProvisioningProfileApi({\n    accountName,\n    projectName,\n    bundleIdentifier,\n  }: AppLookupParams): Promise<void> {\n    await this.api.postAsync(`credentials/ios/provisioningProfile/delete`, {\n      experienceName: `@${accountName}/${projectName}`,\n      owner: accountName,\n      bundleIdentifier,\n    });\n  }\n}\n"],"file":"IosApiV2Wrapper.js"}