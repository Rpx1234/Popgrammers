{"version":3,"sources":["../../../src/credentials/views/AndroidCredentials.ts"],"names":["ExperienceView","constructor","experienceName","open","ctx","credentials","android","fetchCredentials","keystore","pushCredentials","Log","log","newLine","action","type","name","message","choices","value","title","handleAction","context","selected","UpdateKeystore","skipKeystoreValidation","RemoveKeystore","UpdateFcmKey","DownloadKeystore"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,cAAN,CAAsC;AACpCC,EAAAA,WAAW,CAASC,cAAT,EAAiC;AAAA,SAAxBA,cAAwB,GAAxBA,cAAwB;AAAE;;AAEpC,QAAJC,IAAI,CAACC,GAAD,EAAsC;AAC9C,UAAMC,WAAW,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAYC,gBAAZ,CAA6B,KAAKL,cAAlC,CAA1B;;AAEA,QAAI,wBAAQG,WAAW,CAACG,QAApB,KAAiC,wBAAQH,WAAW,CAACI,eAApB,CAArC,EAA2E;AACzEC,qBAAIC,GAAJ,CAAS,gCAA+B,KAAKT,cAAe,gBAA5D;AACD,KAFD,MAEO,IAAI,KAAKA,cAAT,EAAyB;AAC9BQ,qBAAIE,OAAJ;;AACA,YAAM,0CAA6BP,WAA7B,CAAN;;AACAK,qBAAIE,OAAJ;AACD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAM,wBAAO;AAC9BC,MAAAA,IAAI,EAAE,QADwB;AAE9BC,MAAAA,IAAI,EAAE,QAFwB;AAG9BC,MAAAA,OAAO,EAAE,yBAHqB;AAI9BC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAFO,EAGP;AAAED,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAHO,EAIP;AAAED,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAJO,CAKP;AACA;AACA;AACA;AACA;AACA;AAVO;AAJqB,KAAP,CAAzB;AAkBA,WAAO,KAAKC,YAAL,CAAkBhB,GAAlB,EAAuBS,MAAvB,CAAP;AACD;;AAEDO,EAAAA,YAAY,CAACC,OAAD,EAAmBC,QAAnB,EAAmD;AAC7D,YAAQA,QAAR;AACE,WAAK,iBAAL;AACE,eAAO,KAAIC,iCAAJ,EAAmB,KAAKrB,cAAxB,EAAwC;AAAEsB,UAAAA,sBAAsB,EAAE;AAA1B,SAAxC,CAAP;;AACF,WAAK,iBAAL;AACE,eAAO,KAAIC,iCAAJ,EAAmB,KAAKvB,cAAxB,CAAP;;AACF,WAAK,gBAAL;AACE,eAAO,KAAIwB,sCAAJ,EAAiB,KAAKxB,cAAtB,CAAP;;AACF,WAAK,gBAAL;AACE,eAAO,KAAIyB,mCAAJ,EAAqB,KAAKzB,cAA1B,CAAP;;AACF,WAAK,mBAAL;AACE,eAAO,IAAP;AAVJ;;AAYA,WAAO,IAAP;AACD;;AAjDmC","sourcesContent":["import isEmpty from 'lodash/isEmpty';\n\nimport Log from '../../log';\nimport prompt from '../../utils/prompts';\nimport { displayAndroidAppCredentials } from '../actions/list';\nimport { Context, IView } from '../context';\nimport { DownloadKeystore, RemoveKeystore, UpdateKeystore } from './AndroidKeystore';\nimport { UpdateFcmKey } from './AndroidPushCredentials';\n\nclass ExperienceView implements IView {\n  constructor(private experienceName: string) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const credentials = await ctx.android.fetchCredentials(this.experienceName);\n\n    if (isEmpty(credentials.keystore) && isEmpty(credentials.pushCredentials)) {\n      Log.log(`No credentials available for ${this.experienceName} experience.\\n`);\n    } else if (this.experienceName) {\n      Log.newLine();\n      await displayAndroidAppCredentials(credentials);\n      Log.newLine();\n    }\n\n    const { action } = await prompt({\n      type: 'select',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        { value: 'update-keystore', title: 'Update upload Keystore' },\n        { value: 'remove-keystore', title: 'Remove keystore' },\n        { value: 'update-fcm-key', title: 'Update FCM Api Key' },\n        { value: 'fetch-keystore', title: 'Download Keystore from the Expo servers' },\n        // { value: 'fetch-public-cert', title: 'Extract public cert from Keystore' },\n        // {\n        //   value: 'fetch-private-signing-key',\n        //   title:\n        //     'Extract private signing key (required when migration to App Signing by Google Play)',\n        // },\n      ],\n    });\n\n    return this.handleAction(ctx, action);\n  }\n\n  handleAction(context: Context, selected: string): IView | null {\n    switch (selected) {\n      case 'update-keystore':\n        return new UpdateKeystore(this.experienceName, { skipKeystoreValidation: false });\n      case 'remove-keystore':\n        return new RemoveKeystore(this.experienceName);\n      case 'update-fcm-key':\n        return new UpdateFcmKey(this.experienceName);\n      case 'fetch-keystore':\n        return new DownloadKeystore(this.experienceName);\n      case 'fetch-public-cert':\n        return null;\n    }\n    return null;\n  }\n}\n\nexport { ExperienceView };\n"],"file":"AndroidCredentials.js"}