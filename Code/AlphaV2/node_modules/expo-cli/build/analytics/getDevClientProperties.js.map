{"version":3,"sources":["../../src/analytics/getDevClientProperties.ts"],"names":["getAccountName","exp","getDevClientVersion","projectRoot","devClientPackage","resolveFrom","silent","JsonFile","read","version","undefined","getProjectType","getDevClientProperties","account_name","owner","dev_client_version","project_type","uptime_ms","process","uptime"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,cAAc,GAAG,wBAASC,GAAD,IAAoC;AACjE,SAAO,kCAAmBA,GAAnB,CAAP;AACD,CAFsB,CAAvB;AAIA,MAAMC,mBAAmB,GAAG,wBAASC,WAAD,IAAgD;AAClF,MAAI;AACF,UAAMC,gBAAgB,GAAGC,uBAAYC,MAAZ,CAAmBH,WAAnB,EAAgC,8BAAhC,CAAzB;;AACA,QAAIC,gBAAJ,EAAsB;AACpB,aAAOG,oBAASC,IAAT,CAAcJ,gBAAd,EAAgCK,OAAvC;AACD;AACF,GALD,CAKE,MAAM,CAAE;;AACV,SAAOC,SAAP;AACD,CAR2B,CAA5B;AAUA,MAAMC,cAAc,GAAG,wBAASR,WAAD,IAAgD;AAC7E,SAAO,gCAAiBA,WAAjB,MAAkC,SAAlC,GAA8C,SAA9C,GAA0D,SAAjE;AACD,CAFsB,CAAvB;;AAIe,SAASS,sBAAT,CAAgCT,WAAhC,EAAqDF,GAArD,EAAsE;AACnF,SAAO;AACLY,IAAAA,YAAY,EAAEb,cAAc,CAAC;AAAEc,MAAAA,KAAK,EAAEb,GAAG,CAACa;AAAb,KAAD,CADvB;AAELC,IAAAA,kBAAkB,EAAEb,mBAAmB,CAACC,WAAD,CAFlC;AAGLa,IAAAA,YAAY,EAAEL,cAAc,CAACR,WAAD,CAHvB;AAILc,IAAAA,SAAS,EAAEC,OAAO,CAACC,MAAR,KAAmB;AAJzB,GAAP;AAMD","sourcesContent":["import { ExpoConfig, getAccountUsername, getDefaultTarget } from '@expo/config';\nimport JsonFile, { JSONValue } from '@expo/json-file';\nimport memoize from 'lodash/memoize';\nimport resolveFrom from 'resolve-from';\n\nconst getAccountName = memoize((exp: Pick<ExpoConfig, 'owner'>) => {\n  return getAccountUsername(exp);\n});\n\nconst getDevClientVersion = memoize((projectRoot: string): JSONValue | undefined => {\n  try {\n    const devClientPackage = resolveFrom.silent(projectRoot, 'expo-dev-client/package.json');\n    if (devClientPackage) {\n      return JsonFile.read(devClientPackage).version;\n    }\n  } catch {}\n  return undefined;\n});\n\nconst getProjectType = memoize((projectRoot: string): 'managed' | 'generic' => {\n  return getDefaultTarget(projectRoot) === 'managed' ? 'managed' : 'generic';\n});\n\nexport default function getDevClientProperties(projectRoot: string, exp: ExpoConfig) {\n  return {\n    account_name: getAccountName({ owner: exp.owner }),\n    dev_client_version: getDevClientVersion(projectRoot),\n    project_type: getProjectType(projectRoot),\n    uptime_ms: process.uptime() * 1000,\n  };\n}\n"],"file":"getDevClientProperties.js"}