{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport debounce from \"../../utils/debounce\";\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport HeaderSegment from \"./HeaderSegment\";\nexport default React.memo(function Header(_ref) {\n  var back = _ref.back,\n      layout = _ref.layout,\n      progress = _ref.progress,\n      options = _ref.options,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      styleInterpolator = _ref.styleInterpolator;\n  var insets = useSafeAreaInsets();\n  var previousTitle;\n\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  var goBack = React.useCallback(debounce(function () {\n    if (navigation.isFocused() && navigation.canGoBack()) {\n      navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n        source: route.key\n      }));\n    }\n  }, 50), [navigation, route.key]);\n  var isModal = React.useContext(ModalPresentationContext);\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var statusBarHeight = options.headerStatusBarHeight !== undefined ? options.headerStatusBarHeight : isModal || isParentHeaderShown ? 0 : insets.top;\n  return React.createElement(HeaderSegment, _extends({}, options, {\n    title: getHeaderTitle(options, route.name),\n    progress: progress,\n    layout: layout,\n    modal: isModal,\n    headerBackTitle: options.headerBackTitle !== undefined ? options.headerBackTitle : previousTitle,\n    headerStatusBarHeight: statusBarHeight,\n    onGoBack: back ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,cAAT,EAAyBC,kBAAzB,QAAmD,4BAAnD;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAGA,OAAOC,QAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,aAAP;AAEA,eAAeJ,KAAK,CAACK,IAANL,CAAW,SAASM,MAAT,OAQL;AAAA,MAPnBC,IAOmB,QAPnBA,IAOmB;AAAA,MANnBC,MAMmB,QANnBA,MAMmB;AAAA,MALnBC,QAKmB,QALnBA,QAKmB;AAAA,MAJnBC,OAImB,QAJnBA,OAImB;AAAA,MAHnBC,KAGmB,QAHnBA,KAGmB;AAAA,MAFnBC,UAEmB,QAFnBA,UAEmB;AAAA,MADnBC,iBACmB,QADnBA,iBACmB;AACnB,MAAMC,MAAM,GAAGb,iBAAiB,EAAhC;AAEA,MAAIc,aAAJ;;AAIA,MAAIL,OAAO,CAACM,eAARN,KAA4BO,SAAhC,EAA2C;AACzCF,iBAAa,GAAGL,OAAO,CAACM,eAAxBD;AADF,SAEO,IAAIR,IAAJ,EAAU;AACfQ,iBAAa,GAAGR,IAAI,CAACW,KAArBH;AAViB;;AAcnB,MAAMI,MAAM,GAAGnB,KAAK,CAACoB,WAANpB,CACbE,QAAQ,CAAC,YAAM;AACb,QAAIU,UAAU,CAACS,SAAXT,MAA0BA,UAAU,CAACU,SAAXV,EAA9B,EAAsD;AACpDA,gBAAU,CAACW,QAAXX,iCACKb,YAAY,CAACyB,GAAbzB,EADLa;AAEEa,cAAM,EAAEd,KAAK,CAACe;AAFhBd;AAID;AANK,KAOL,EAPK,CADKZ,EASb,CAACY,UAAD,EAAaD,KAAK,CAACe,GAAnB,CATa1B,CAAf;AAYA,MAAM2B,OAAO,GAAG3B,KAAK,CAAC4B,UAAN5B,CAAiBG,wBAAjBH,CAAhB;AACA,MAAM6B,mBAAmB,GAAG7B,KAAK,CAAC4B,UAAN5B,CAAiBF,kBAAjBE,CAA5B;AAEA,MAAM8B,eAAe,GACnBpB,OAAO,CAACqB,qBAARrB,KAAkCO,SAAlCP,GACIA,OAAO,CAACqB,qBADZrB,GAEIiB,OAAO,IAAIE,mBAAXF,GACA,CADAA,GAEAb,MAAM,CAACkB,GALb;AAOA,SACEhC,oBAACI,aAAD,eACMM,OADN;AAEEQ,SAAK,EAAErB,cAAc,CAACa,OAAD,EAAUC,KAAK,CAACsB,IAAhB,CAFvB;AAGExB,YAAQ,EAAEA,QAHZ;AAIED,UAAM,EAAEA,MAJV;AAKE0B,SAAK,EAAEP,OALT;AAMEX,mBAAe,EACbN,OAAO,CAACM,eAARN,KAA4BO,SAA5BP,GACIA,OAAO,CAACM,eADZN,GAEIK,aATR;AAWEgB,yBAAqB,EAAED,eAXzB;AAYEK,YAAQ,EAAE5B,IAAI,GAAGY,MAAH,GAAYF,SAZ5B;AAaEJ,qBAAiB,EAAEA;AAbrB,KADF;AA5Ca,EAAf","names":["getHeaderTitle","HeaderShownContext","StackActions","React","useSafeAreaInsets","debounce","ModalPresentationContext","HeaderSegment","memo","Header","back","layout","progress","options","route","navigation","styleInterpolator","insets","previousTitle","headerBackTitle","undefined","title","goBack","useCallback","isFocused","canGoBack","dispatch","pop","source","key","isModal","useContext","isParentHeaderShown","statusBarHeight","headerStatusBarHeight","top","name","modal","onGoBack"],"sources":["Header.tsx"],"sourcesContent":["import { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type { StackHeaderProps } from '../../types';\nimport debounce from '../../utils/debounce';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport HeaderSegment from './HeaderSegment';\n\nexport default React.memo(function Header({\n  back,\n  layout,\n  progress,\n  options,\n  route,\n  navigation,\n  styleInterpolator,\n}: StackHeaderProps) {\n  const insets = useSafeAreaInsets();\n\n  let previousTitle;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      if (navigation.isFocused() && navigation.canGoBack()) {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n        });\n      }\n    }, 50),\n    [navigation, route.key]\n  );\n\n  const isModal = React.useContext(ModalPresentationContext);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const statusBarHeight =\n    options.headerStatusBarHeight !== undefined\n      ? options.headerStatusBarHeight\n      : isModal || isParentHeaderShown\n      ? 0\n      : insets.top;\n\n  return (\n    <HeaderSegment\n      {...options}\n      title={getHeaderTitle(options, route.name)}\n      progress={progress}\n      layout={layout}\n      modal={isModal}\n      headerBackTitle={\n        options.headerBackTitle !== undefined\n          ? options.headerBackTitle\n          : previousTitle\n      }\n      headerStatusBarHeight={statusBarHeight}\n      onGoBack={back ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}