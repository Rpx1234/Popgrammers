{"ast":null,"code":"'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar ExecutionEnvironment = {\n  canUseDOM: canUseDOM,\n  canUseWorkers: typeof Worker !== 'undefined',\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n  canUseViewport: canUseDOM && !!window.screen,\n  isInWorker: !canUseDOM\n};\nmodule.exports = ExecutionEnvironment;","map":{"version":3,"sources":["C:/Users/camer/Documents/GitHub/Popgrammers/Code/AlphaV2/node_modules/react-native-web/node_modules/fbjs/lib/ExecutionEnvironment.js"],"names":["canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","module","exports"],"mappings":"AAOA;;AAEA,IAAIA,SAAS,GAAG,CAAC,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAtE,CAAjB;AAQA,IAAIC,oBAAoB,GAAG;AACzBJ,EAAAA,SAAS,EAAEA,SADc;AAEzBK,EAAAA,aAAa,EAAE,OAAOC,MAAP,KAAkB,WAFR;AAGzBC,EAAAA,oBAAoB,EAAEP,SAAS,IAAI,CAAC,EAAEC,MAAM,CAACO,gBAAP,IAA2BP,MAAM,CAACQ,WAApC,CAHX;AAIzBC,EAAAA,cAAc,EAAEV,SAAS,IAAI,CAAC,CAACC,MAAM,CAACU,MAJb;AAKzBC,EAAAA,UAAU,EAAE,CAACZ;AALY,CAA3B;AAQAa,MAAM,CAACC,OAAP,GAAiBV,oBAAjB","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n'use strict';\r\n\r\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\n/**\r\n * Simple, lightweight module assisting with the detection and context of\r\n * Worker. Helps avoid circular dependencies and allows code to reason about\r\n * whether or not they are in a Worker, even if they never include the main\r\n * `ReactWorker` dependency.\r\n */\r\n\r\nvar ExecutionEnvironment = {\r\n  canUseDOM: canUseDOM,\r\n  canUseWorkers: typeof Worker !== 'undefined',\r\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\r\n  canUseViewport: canUseDOM && !!window.screen,\r\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\r\n\r\n};\r\nmodule.exports = ExecutionEnvironment;"]},"metadata":{},"sourceType":"script"}