{"ast":null,"code":"import React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from 'formik';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { signOut } from 'firebase/auth';\nimport { View, TextInput, Logo, Button, FormErrorMessage } from \"../components\";\nimport { Images, Colors, auth } from \"../config\";\nimport { useTogglePasswordVisibility } from \"../hooks\";\nimport { loginValidationSchema } from \"../utils\";\nimport { getDatabase, ref, set, update, child, get } from \"firebase/database\";\nexport var CustomerHomeScreen = function CustomerHomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var handleLogout = function handleLogout() {\n    signOut(auth).catch(function (error) {\n      return console.log('Error logging out: ', error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.screenTitle\n  }, \"Customer Home Screen\"), React.createElement(Button, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('OrderScreen');\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"New Order\")), React.createElement(Button, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('OrderHistoryScreen');\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Order History\")), React.createElement(Button, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('AccountInfoScreen');\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Account Information\")), React.createElement(Button, {\n    style: styles.borderlessButtonContainer,\n    borderless: true,\n    title: 'Log Out?',\n    onPress: handleLogout\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    paddingHorizontal: 12,\n    alignItems: 'center'\n  },\n  logoContainer: {\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10\n  },\n  button: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700'\n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Owner/Downloads/Popgrammers/Code/AlphaV2/screens/CustomerHomeScreen.js"],"names":["React","useState","Formik","KeyboardAwareScrollView","signOut","View","TextInput","Logo","Button","FormErrorMessage","Images","Colors","auth","useTogglePasswordVisibility","loginValidationSchema","getDatabase","ref","set","update","child","get","CustomerHomeScreen","navigation","handleLogout","catch","error","console","log","styles","container","screenTitle","button","navigate","buttonText","borderlessButtonContainer","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignItems","logoContainer","fontSize","fontWeight","color","orange","paddingTop","width","justifyContent","alignSelf","marginTop","padding","borderRadius","white"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, StyleSheet } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { signOut } from 'firebase/auth';\r\nimport { View, TextInput, Logo, Button, FormErrorMessage } from '../components';\r\nimport { Images, Colors, auth } from '../config';\r\nimport { useTogglePasswordVisibility } from '../hooks';\r\nimport { loginValidationSchema } from '../utils';\r\nimport { getDatabase, ref, set, update, child, get } from \"firebase/database\";\r\n\r\n\r\n\r\nexport const CustomerHomeScreen = ({ navigation }) => {\r\n  \r\n  const handleLogout = () => {\r\n    signOut(auth).catch(error => console.log('Error logging out: ', error));\r\n  };\r\n  \r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.screenTitle}>Customer Home Screen</Text>\r\n      {/* New Order */}\r\n          <Button style={styles.button} onPress = {() => navigation.navigate('OrderScreen')}>\r\n          <Text style={styles.buttonText}>New Order</Text>\r\n          </Button>\r\n\t  {/* Order History */}\r\n          <Button style={styles.button} onPress = {() => navigation.navigate('OrderHistoryScreen')}>\r\n          <Text style={styles.buttonText}>Order History</Text>\r\n          </Button>\r\n      {/* Account Information */}\r\n          <Button style={styles.button} onPress = {() => navigation.navigate('AccountInfoScreen')}>\r\n          <Text style={styles.buttonText}>Account Information</Text>\r\n          </Button>\r\n          <Button style={styles.borderlessButtonContainer} borderless\r\n          title={'Log Out?'}\r\n          onPress={handleLogout} />\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n          \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n\tflex: 1,\r\n    backgroundColor: 'black',\r\n    paddingHorizontal: 12,\r\n    alignItems: 'center'\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center'\r\n  },\r\n  screenTitle: {\r\n    fontSize: 18,\r\n    fontWeight: '700',\r\n    color: Colors.orange,\r\n    paddingTop: 10\r\n  },\r\n  button: {\r\n    width: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    marginTop: 8,\r\n    backgroundColor: Colors.orange,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: Colors.white,\r\n    fontWeight: '700',\r\n\r\n  },\r\n  borderlessButtonContainer: {\r\n    marginTop: 16, \r\n    alignItems: 'center',\r\n  }\r\n  });"]},"metadata":{},"sourceType":"module"}