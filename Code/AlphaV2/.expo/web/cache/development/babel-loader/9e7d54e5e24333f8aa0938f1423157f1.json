{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, setState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from 'formik';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Picker } from \"@react-native-picker/picker\";\nimport { View, TextInput, Logo, Button, FormErrorMessage } from \"../components\";\nimport { Images, Colors, db } from \"../config\";\nimport { getDatabase, ref, set, update, child, get, onValue } from \"firebase/database\";\nimport { collection, getDocs, updateDoc, doc, query, where } from \"firebase/firestore\";\nimport { useTogglePasswordVisibility } from \"../hooks\";\nimport { loginValidationSchema } from \"../utils\";\nexport var SeatAvailabilityScreen = function SeatAvailabilityScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      seats = _useState4[0],\n      setSeats = _useState4[1];\n\n  var _useState5 = useState('Unknown'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      order = _useState6[0],\n      setOrder = _useState6[1];\n\n  var updateSeat = function updateSeat(taken, rowNum, seat) {\n    var DocRef;\n    return _regeneratorRuntime.async(function updateSeat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            DocRef = doc(db, \"Theaters/Seating/Theater1\", rowNum);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateDoc(DocRef, _defineProperty({}, seat, taken)));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function seatTaken(position) {\n    switch (position) {\n      case true:\n        return styles.seatButton;\n        break;\n\n      case false:\n        return styles.seatButtonTaken;\n        break;\n    }\n  }\n\n  ;\n\n  function handleClick() {}\n\n  var getSeating = function getSeating() {\n    var seatSnapshot, seatList;\n    return _regeneratorRuntime.async(function getSeating$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getDocs(collection(db, \"Theaters/Seating/Theater1\")));\n\n          case 2:\n            seatSnapshot = _context2.sent;\n            seatList = seatSnapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            setSeats(seatList);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  getSeating();\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.screenTitle\n  }, \"Seat Availability\"), React.createElement(Picker, {\n    selectedValue: order,\n    onValueChange: function onValueChange(value, index) {\n      return setOrder(value);\n    },\n    mode: \"dropdown\",\n    style: styles.picker\n  }, React.createElement(Picker.Item, {\n    label: \"Please select your Order\",\n    value: \"Unknown\"\n  }), React.createElement(Picker.Item, {\n    label: \"Theater 1 5PM\",\n    value: \"Theater 1\"\n  }), React.createElement(Picker.Item, {\n    label: \"Theater 2 5PM\",\n    value: \"Theater 2\"\n  })), seats.map(function (seats, index1, index2, index3) {\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.containerseats\n    }, React.createElement(Text, {\n      style: styles.itemText\n    }, \" Row \", index1 + 1, \" \"), React.createElement(Button, {\n      key: seats,\n      style: seatTaken(seats.A),\n      onPress: (function () {\n        return updateSeat(false, 'Row' + (index1 + 1), 'A');\n      }, handleClick())\n    }), React.createElement(Button, {\n      key: index1,\n      style: seatTaken(seats.B),\n      onPress: function onPress() {\n        return updateSeat(false, 'Row' + (index1 + 1), 'B');\n      }\n    }), React.createElement(Button, {\n      key: index2,\n      style: seatTaken(seats.C),\n      onPress: function onPress() {\n        return updateSeat(false, 'Row' + (index1 + 1), 'C');\n      }\n    }), React.createElement(Button, {\n      key: index3,\n      style: seatTaken(seats.D),\n      onPress: function onPress() {\n        return updateSeat(false, 'Row' + (index1 + 1), 'D');\n      }\n    })));\n  }), React.createElement(Button, {\n    style: styles.borderlessButtonContainer,\n    borderless: true,\n    title: 'Done with Seat Availability',\n    onPress: function onPress() {\n      return navigation.navigate('TheaterHomeScreen');\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    paddingHorizontal: 12,\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10,\n    textAlign: 'center'\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10,\n    textAlign: 'center'\n  },\n  button: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    alignItems: 'center',\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8,\n    marginRight: 8\n  },\n  buttonsubmit: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8\n  },\n  buttontaken: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.black,\n    borderColor: Colors.white,\n    padding: 10,\n    borderWidth: 2,\n    borderRadius: 8,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700'\n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center'\n  },\n  picker: {\n    marginVertical: 30,\n    width: 300,\n    padding: 10,\n    borderWidth: 5,\n    color: Colors.black,\n    backgroundColor: 'white'\n  },\n  containerseats: {\n    flexDirection: 'row',\n    flex: 1,\n    alignContent: 'space-around',\n    padding: 5\n  },\n  seatButton: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8,\n    marginRight: 8\n  },\n  seatButtonTaken: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.black,\n    borderColor: Colors.white,\n    padding: 9,\n    borderWidth: 2,\n    borderRadius: 8,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  itemText: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: '#ff9361'\n  },\n  parent: {\n    flexDirection: \"row\"\n  },\n  block: {\n    flex: 3,\n    margin: 6\n  }\n});","map":{"version":3,"sources":["C:/Users/camer/Documents/GitHub/Popgrammers/Code/AlphaV2/screens/SeatAvailabilityScreen.js"],"names":["React","useState","setState","Formik","signInWithEmailAndPassword","KeyboardAwareScrollView","Picker","View","TextInput","Logo","Button","FormErrorMessage","Images","Colors","db","getDatabase","ref","set","update","child","get","onValue","collection","getDocs","updateDoc","doc","query","where","useTogglePasswordVisibility","loginValidationSchema","SeatAvailabilityScreen","navigation","data","setData","seats","setSeats","order","setOrder","updateSeat","taken","rowNum","seat","DocRef","seatTaken","position","styles","seatButton","seatButtonTaken","handleClick","getSeating","seatSnapshot","seatList","docs","map","container","screenTitle","value","index","picker","index1","index2","index3","containerseats","itemText","A","B","C","D","borderlessButtonContainer","navigate","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignItems","fontSize","fontWeight","color","orange","paddingTop","textAlign","text","button","width","height","marginTop","padding","borderRadius","marginRight","buttonsubmit","justifyContent","alignSelf","buttontaken","black","borderColor","white","borderWidth","buttonText","marginVertical","flexDirection","alignContent","parent","block","margin"],"mappings":"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","sourcesContent":["import React, { useState,setState } from 'react';\r\nimport { Text, StyleSheet } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { View, TextInput, Logo, Button, FormErrorMessage } from '../components';\r\nimport { Images, Colors, db } from '../config';\r\nimport { getDatabase, ref, set, update, child, get, onValue } from \"firebase/database\";\r\nimport { collection, getDocs, updateDoc, doc, query, where } from \"firebase/firestore\"; \r\nimport { useTogglePasswordVisibility } from '../hooks';\r\nimport { loginValidationSchema } from '../utils';\r\n\r\n\r\n\r\nexport const SeatAvailabilityScreen = ({ navigation }) => {\r\n  const [data, setData] = useState([]);\t\r\n  const [seats, setSeats] = useState([]);\t\r\n  const [order, setOrder] = useState('Unknown');\r\n  const updateSeat = async (taken,rowNum,seat) => {\r\n    const DocRef = doc(db, \"Theaters/Seating/Theater1\", rowNum);\r\n    await updateDoc(DocRef, {\r\n      [seat] : taken\r\n    });\r\n   \r\n    \r\n  };\r\n\r\n\r\n  \r\n  \r\n   function seatTaken(position){\r\n    switch(position){\r\n      case true: return(styles.seatButton); break;\r\n      case false: return(styles.seatButtonTaken); break;\r\n    }\r\n  };\r\n\r\n  function handleClick (){\r\n    \r\n  }\r\n  const getSeating = async () => {\r\n    const seatSnapshot = await getDocs(collection(db, \"Theaters/Seating/Theater1\"));\r\n    const seatList = seatSnapshot.docs.map((doc) => doc.data());\r\n    setSeats(seatList);\r\n   //console.log(seatList);\r\n  };\r\n  getSeating();\r\n  return (\r\n\r\n   \r\n    <View style={styles.container}>\r\n      <Text style={styles.screenTitle}>Seat Availability</Text>\r\n      {/* Theater Selection */} \r\n      <Picker\r\n        selectedValue={order}\r\n        onValueChange={(value, index) => setOrder(value)}\r\n        mode=\"dropdown\" // Android only\r\n        style={styles.picker}\r\n      >\r\n        <Picker.Item label=\"Please select your Order\" value=\"Unknown\" />\r\n        <Picker.Item label=\"Theater 1 5PM\" value=\"Theater 1\" />\r\n        <Picker.Item label=\"Theater 2 5PM\" value=\"Theater 2\" />\r\n      </Picker>\r\n\t\r\n    {/* Seat Animation */}\t\r\n    {seats.map((seats,index1,index2,index3) =>(\r\n      <React.Fragment>\r\n        <View style = {styles.containerseats}>\r\n          <Text style = {styles.itemText}> Row {index1 + 1} </Text>\r\n          <Button  key = {seats} style = {seatTaken(seats.A)}  onPress = {() =>  updateSeat(false, 'Row' + (index1 + 1),'A'),handleClick()}/>\r\n          <Button  key = {index1} style = {seatTaken(seats.B)} onPress = {() =>  updateSeat(false, 'Row' + (index1 + 1),'B')}/>\r\n          <Button  key = {index2} style = {seatTaken(seats.C)} onPress = {() =>  updateSeat(false, 'Row' + (index1 + 1),'C')}/>\r\n          <Button  key = {index3} style = {seatTaken(seats.D)} onPress = {() =>  updateSeat(false, 'Row' + (index1 + 1),'D')} />\r\n        </View>\r\n      </React.Fragment> \r\n    ))}\r\n      \r\n      {/* Buttons */}\r\n          <Button style={styles.borderlessButtonContainer} borderless\r\n          title={'Done with Seat Availability'}\r\n          onPress = {() => navigation.navigate('TheaterHomeScreen')} />\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n          \r\nconst styles = StyleSheet.create({\r\n container: {\r\n\tflex: 1,\r\n    backgroundColor: 'black',\r\n    paddingHorizontal: 12,\r\n    alignItems: 'center'\r\n  },\r\n  screenTitle: {\r\n    fontSize: 18,\r\n    fontWeight: '700',\r\n    color: Colors.orange,\r\n    paddingTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    fontWeight: '700',\r\n    color: Colors.orange,\r\n    paddingTop: 10,\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    width: '10%',\r\n    height: 18,\r\n    marginTop: 8,   \r\n     alignItems: 'center',\r\n\r\n    backgroundColor: Colors.orange,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginRight:8\r\n  },\r\n   buttonsubmit: {\r\n   width: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    marginTop: 8,\r\n    backgroundColor: Colors.orange,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttontaken: {\r\n    width: '10%',\r\n    height: 18,\r\n    marginTop: 8,\r\n    backgroundColor: Colors.black,\r\n   \tborderColor: Colors.white,\r\n    padding: 10,\r\n    borderWidth:2,\r\n    borderRadius:8,\r\n    marginRight:8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: Colors.white,\r\n    fontWeight: '700',\r\n\r\n  },\r\n  borderlessButtonContainer: {\r\n    marginTop: 16, \r\n    alignItems: 'center',\r\n  },\r\n  picker: {\r\n    marginVertical: 30,\r\n    width: 300,\r\n    padding: 10,\r\n    borderWidth: 5,\r\n    color: Colors.black,\r\n    backgroundColor: 'white',\r\n \t},\r\n containerseats: {\r\n\tflexDirection: 'row',\r\n\tflex: 1,\r\n\talignContent: 'space-around',\r\n\tpadding: 5\r\n},\r\nseatButton: {\r\n    width: '10%',\r\n    height: 18,\r\n    marginTop: 8,\r\n    backgroundColor: Colors.orange,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginRight:8\r\n},\r\nseatButtonTaken: {\r\n    width: '10%',\r\n    height: 18,\r\n    marginTop: 8,\r\n    backgroundColor: Colors.black,\r\n   \tborderColor: Colors.white,\r\n    padding: 9,\r\n    borderWidth:2,\r\n    borderRadius:8,\r\n    marginRight:8,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n},\r\nitemText: {\r\n    fontSize: 20,\r\n    fontWeight: '500',\r\n    color: '#ff9361',\r\n},\r\nparent: {\r\n    \r\n  flexDirection: \"row\",\r\n  \r\n},\r\nblock: {\r\n  flex: 3,\r\n  margin: 6,\r\n},\r\n  });"]},"metadata":{},"sourceType":"module"}