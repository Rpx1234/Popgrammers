{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"mode\", \"edges\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"./SafeAreaContext\";\nvar TOP = 8,\n    RIGHT = 4,\n    BOTTOM = 2,\n    LEFT = 1,\n    ALL = 15;\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView(_ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      mode = _ref.mode,\n      edges = _ref.edges,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var insets = useSafeAreaInsets();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    var flatStyle = StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n          margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n          _flatStyle$marginVert = flatStyle.marginVertical,\n          marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n          _flatStyle$marginHori = flatStyle.marginHorizontal,\n          marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n          _flatStyle$marginTop = flatStyle.marginTop,\n          marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n          _flatStyle$marginRigh = flatStyle.marginRight,\n          marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n          _flatStyle$marginBott = flatStyle.marginBottom,\n          marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n          _flatStyle$marginLeft = flatStyle.marginLeft,\n          marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n          padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n          _flatStyle$paddingVer = flatStyle.paddingVertical,\n          paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n          _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n          paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n          _flatStyle$paddingTop = flatStyle.paddingTop,\n          paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n          _flatStyle$paddingRig = flatStyle.paddingRight,\n          paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n          _flatStyle$paddingBot = flatStyle.paddingBottom,\n          paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n          _flatStyle$paddingLef = flatStyle.paddingLeft,\n          paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","style","mode","edges","rest","insets","edgeBitmask","reduce","accum","edge","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View"],"sources":["SafeAreaView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}