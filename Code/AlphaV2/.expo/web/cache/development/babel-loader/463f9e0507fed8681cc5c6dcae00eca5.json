{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Formik } from 'formik';\nimport { sendPasswordResetEmail } from 'firebase/auth';\nimport { passwordResetSchema } from \"../utils\";\nimport { Colors, auth } from \"../config\";\nimport { View, TextInput, Button, FormErrorMessage } from \"../components\";\nexport var ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorState = _useState2[0],\n      setErrorState = _useState2[1];\n\n  var handleSendPasswordResetEmail = function handleSendPasswordResetEmail(values) {\n    var email = values.email;\n    sendPasswordResetEmail(auth, email).then(function () {\n      console.log('Success: Password Reset Email sent.');\n      navigation.navigate('Login');\n    }).catch(function (error) {\n      return setErrorState(error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    isSafe: true,\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.innerContainer\n  }, React.createElement(Text, {\n    style: styles.screenTitle\n  }, \"Reset your password\")), React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    validationSchema: passwordResetSchema,\n    onSubmit: function onSubmit(values) {\n      return handleSendPasswordResetEmail(values);\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        touched = _ref2.touched,\n        errors = _ref2.errors,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur;\n    return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n      name: \"email\",\n      leftIconName: \"email\",\n      placeholder: \"Enter email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      value: values.email,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email')\n    }), React.createElement(FormErrorMessage, {\n      error: errors.email,\n      visible: touched.email\n    }), errorState !== '' ? React.createElement(FormErrorMessage, {\n      error: errorState,\n      visible: true\n    }) : null, React.createElement(Button, {\n      style: styles.button,\n      onPress: handleSubmit\n    }, React.createElement(Text, {\n      style: styles.buttonText\n    }, \"Send Reset Email\")));\n  }), React.createElement(Button, {\n    style: styles.borderlessButtonContainer,\n    borderless: true,\n    title: 'Go back to Login',\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    paddingHorizontal: 12\n  },\n  innercontainer: {\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 32,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 20\n  },\n  button: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700'\n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/camer/Documents/GitHub/Popgrammers/Code/AlphaV2/screens/ForgotPasswordScreen.js"],"names":["React","useState","Formik","sendPasswordResetEmail","passwordResetSchema","Colors","auth","View","TextInput","Button","FormErrorMessage","ForgotPasswordScreen","navigation","errorState","setErrorState","handleSendPasswordResetEmail","values","email","then","console","log","navigate","catch","error","message","styles","container","innerContainer","screenTitle","touched","errors","handleChange","handleSubmit","handleBlur","button","buttonText","borderlessButtonContainer","StyleSheet","create","flex","backgroundColor","paddingHorizontal","innercontainer","alignItems","fontSize","fontWeight","color","orange","paddingTop","width","justifyContent","marginTop","padding","borderRadius","white"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\n\r\nimport { passwordResetSchema } from '../utils';\r\nimport { Colors, auth } from '../config';\r\nimport { View, TextInput, Button, FormErrorMessage } from '../components';\r\n\r\nexport const ForgotPasswordScreen = ({ navigation }) => {\r\n  const [errorState, setErrorState] = useState('');\r\n\r\n  const handleSendPasswordResetEmail = values => {\r\n    const { email } = values;\r\n\r\n    sendPasswordResetEmail(auth, email)\r\n      .then(() => {\r\n        console.log('Success: Password Reset Email sent.');\r\n        navigation.navigate('Login');\r\n      })\r\n      .catch(error => setErrorState(error.message));\r\n  };\r\n\r\n  return (\r\n    <View isSafe style={styles.container}>\r\n      <View style={styles.innerContainer}>\r\n        <Text style={styles.screenTitle}>Reset your password</Text>\r\n      </View>\r\n      <Formik\r\n        initialValues={{ email: '' }}\r\n        validationSchema={passwordResetSchema}\r\n        onSubmit={values => handleSendPasswordResetEmail(values)}\r\n      >\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleChange,\r\n          handleSubmit,\r\n          handleBlur\r\n        }) => (\r\n          <>\r\n            {/* Email input field */}\r\n            <TextInput\r\n              name='email'\r\n              leftIconName='email'\r\n              placeholder='Enter email'\r\n              autoCapitalize='none'\r\n              keyboardType='email-address'\r\n              textContentType='emailAddress'\r\n              value={values.email}\r\n              onChangeText={handleChange('email')}\r\n              onBlur={handleBlur('email')}\r\n            />\r\n            <FormErrorMessage error={errors.email} visible={touched.email} />\r\n            {/* Display Screen Error Mesages */}\r\n            {errorState !== '' ? (\r\n              <FormErrorMessage error={errorState} visible={true} />\r\n            ) : null}\r\n            {/* Password Reset Send Email  button */}\r\n            <Button style={styles.button} onPress={handleSubmit}>\r\n              <Text style={styles.buttonText}>Send Reset Email</Text>\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Formik>\r\n      {/* Button to navigate to Login screen */}\r\n      <Button\r\n        style={styles.borderlessButtonContainer}\r\n        borderless\r\n        title={'Go back to Login'}\r\n        onPress={() => navigation.navigate('Login')}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    paddingHorizontal: 12\r\n  },\r\n  innercontainer: {\r\n    alignItems: 'center'\r\n  },\r\n  screenTitle: {\r\n    fontSize: 32,\r\n    fontWeight: '700',\r\n    color: Colors.orange,\r\n    paddingTop: 20\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 8,\r\n    backgroundColor: Colors.orange,\r\n    padding: 10,\r\n    borderRadius: 8\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: Colors.white,\r\n    fontWeight: '700'\r\n  },\r\n  borderlessButtonContainer: {\r\n    marginTop: 16,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}