{"ast":null,"code":"import React, { useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { signOut } from 'firebase/auth';\nimport { Colors, auth, db } from \"../config\";\nimport { View, Button } from \"../components\";\nimport { getDatabase, ref, set, update, child, get } from \"firebase/database\";\nimport { collection, getDoc, addDoc, setDoc, doc } from \"firebase/firestore\";\nexport var HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  function writeUser() {\n    var userId = auth.currentUser.uid;\n    var db = getDatabase();\n    set(ref(db, 'users/' + userId), {\n      username: auth.currentUser.email,\n      type: \"customer\"\n    });\n    console.log(\"complete\");\n  }\n\n  function fetchUserType() {\n    getDoc(doc(db, \"Users\", auth.currentUser.uid)).then(function (docSnap) {\n      if (docSnap.exists()) {\n        if (docSnap.data().type == 'customer') {\n          navigation.navigate('CustomerHomeScreen');\n        }\n\n        if (docSnap.data().type == 'admin') {\n          navigation.navigate('TheaterHomeScreen');\n        }\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  function readUsers() {\n    var userId = auth.currentUser.uid;\n    var dbRef = ref(getDatabase());\n    get(child(dbRef, \"users/\" + userId)).then(function (snapshot) {\n      if (snapshot.exists()) {\n        console.log(snapshot.val().type);\n\n        if (snapshot.val().type == 'customer') {\n          navigation.navigate('CustomerHomeScreen');\n          console.log(snapshot.val());\n        }\n\n        if (snapshot.val().type == 'admin') {\n          navigation.navigate('TheaterHomeScreen');\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  useEffect(function () {\n    fetchUserType();\n  });\n\n  var handleLogout = function handleLogout() {\n    signOut(auth).catch(function (error) {\n      return console.log('Error logging out: ', error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.screenTitle\n  }, \"PopGrammers\"), React.createElement(Text, {\n    style: styles.bodyText\n  }, \"You have been successfully logged in, More to come...\"), React.createElement(Button, {\n    style: styles.borderlessButtonContainer,\n    borderless: true,\n    title: 'Log Out?',\n    onPress: handleLogout\n  }), React.createElement(Button, {\n    style: styles.button,\n    borderless: true,\n    title: 'Write User',\n    onPress: writeUser\n  }), React.createElement(Button, {\n    style: styles.button,\n    borderless: true,\n    title: 'Read Users',\n    onPress: readUsers\n  }), React.createElement(Button, {\n    style: styles.button,\n    borderless: true,\n    title: 'Next Page',\n    onPress: function onPress() {\n      return navigation.navigate('InventoryScreen');\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  screenTitle: {\n    fontSize: 32,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 20\n  },\n  bodyText: {\n    fontSize: 20,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 20\n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center'\n  },\n  button: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.red,\n    padding: 10,\n    borderRadius: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/Owner/Downloads/Popgrammers/Code/AlphaV2/screens/HomeScreen.js"],"names":["React","useEffect","signOut","Colors","auth","db","View","Button","getDatabase","ref","set","update","child","get","collection","getDoc","addDoc","setDoc","doc","HomeScreen","navigation","writeUser","userId","currentUser","uid","username","email","type","console","log","fetchUserType","then","docSnap","exists","data","navigate","readUsers","dbRef","snapshot","val","catch","error","handleLogout","styles","container","screenTitle","bodyText","borderlessButtonContainer","button","StyleSheet","create","flex","backgroundColor","fontSize","fontWeight","color","orange","paddingTop","marginTop","alignItems","width","justifyContent","alignSelf","red","padding","borderRadius"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,EAAtB;AACA,SAASC,IAAT,EAAeC,MAAf;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,GAA/C,QAA0D,mBAA1D;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,GAA7C,QAAwD,oBAAxD;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAI5C,WAASC,SAAT,GAAoB;AAClB,QAAMC,MAAM,GAAGlB,IAAI,CAACmB,WAAL,CAAiBC,GAAhC;AACA,QAAMnB,EAAE,GAAGG,WAAW,EAAtB;AACAE,IAAAA,GAAG,CAACD,GAAG,CAACJ,EAAD,EAAK,WAAWiB,MAAhB,CAAJ,EAA4B;AAC7BG,MAAAA,QAAQ,EAAErB,IAAI,CAACmB,WAAL,CAAiBG,KADE;AAE7BC,MAAAA,IAAI,EAAE;AAFuB,KAA5B,CAAH;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAID,WAASC,aAAT,GAAwB;AACtBf,IAAAA,MAAM,CAACG,GAAG,CAACb,EAAD,EAAK,OAAL,EAAcD,IAAI,CAACmB,WAAL,CAAiBC,GAA/B,CAAJ,CAAN,CAA+CO,IAA/C,CAAoD,UAAAC,OAAO,EAAI;AAC7D,UAAIA,OAAO,CAACC,MAAR,EAAJ,EAAsB;AAEpB,YAAGD,OAAO,CAACE,IAAR,GAAeP,IAAf,IAAuB,UAA1B,EAAqC;AACnCP,UAAAA,UAAU,CAACe,QAAX,CAAoB,oBAApB;AACD;;AACD,YAAGH,OAAO,CAACE,IAAR,GAAeP,IAAf,IAAuB,OAA1B,EAAkC;AAChCP,UAAAA,UAAU,CAACe,QAAX,CAAoB,mBAApB;AACD;AACF,OARD,MAQO;AACLP,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,KAZD;AAcD;;AAGD,WAASO,SAAT,GAAoB;AAClB,QAAMd,MAAM,GAAGlB,IAAI,CAACmB,WAAL,CAAiBC,GAAhC;AACA,QAAMa,KAAK,GAAG5B,GAAG,CAACD,WAAW,EAAZ,CAAjB;AACAK,IAAAA,GAAG,CAACD,KAAK,CAACyB,KAAD,aAAiBf,MAAjB,CAAN,CAAH,CAAqCS,IAArC,CAA0C,UAACO,QAAD,EAAc;AACtD,UAAIA,QAAQ,CAACL,MAAT,EAAJ,EAAuB;AAErBL,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACC,GAAT,GAAeZ,IAA3B;;AACA,YAAGW,QAAQ,CAACC,GAAT,GAAeZ,IAAf,IAAuB,UAA1B,EAAqC;AACnCP,UAAAA,UAAU,CAACe,QAAX,CAAoB,oBAApB;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACC,GAAT,EAAZ;AACD;;AACD,YAAGD,QAAQ,CAACC,GAAT,GAAeZ,IAAf,IAAuB,OAA1B,EAAkC;AAChCP,UAAAA,UAAU,CAACe,QAAX,CAAoB,mBAApB;AACD;AAEF,OAXD,MAWO;AACLP,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACF;AACD,KAfD,EAeGW,KAfH,CAeS,UAACC,KAAD,EAAW;AACtBb,MAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACG,KAjBD;AAoBD;;AAKDxC,EAAAA,SAAS,CAAC,YAAM;AACf6B,IAAAA,aAAa;AACb,GAFQ,CAAT;;AAKA,MAAMY,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBxC,IAAAA,OAAO,CAACE,IAAD,CAAP,CAAcoC,KAAd,CAAoB,UAAAC,KAAK;AAAA,aAAIb,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCY,KAAnC,CAAJ;AAAA,KAAzB;AACD,GAFD;;AAGA,SAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,mBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,6DAFF,EAIM,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,MAAM,CAACI,yBAAtB;AAAiD,IAAA,UAAU,MAA3D;AACA,IAAA,KAAK,EAAE,UADP;AAEA,IAAA,OAAO,EAAEL;AAFT,IAJN,EAQM,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACK,MAAtB;AAA8B,IAAA,UAAU,MAAxC;AACA,IAAA,KAAK,EAAE,YADP;AAEA,IAAA,OAAO,EAAI3B;AAFX,IARN,EAYM,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEsB,MAAM,CAACK,MAAtB;AAA8B,IAAA,UAAU,MAAxC;AACA,IAAA,KAAK,EAAE,YADP;AAEA,IAAA,OAAO,EAAIZ;AAFX,IAZN,EAgBM,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEO,MAAM,CAACK,MAAtB;AAA8B,IAAA,UAAU,MAAxC;AACA,IAAA,KAAK,EAAE,WADP;AAEA,IAAA,OAAO,EAAI;AAAA,aAAM5B,UAAU,CAACe,QAAX,CAAoB,iBAApB,CAAN;AAAA;AAFX,IAhBN,CAHF;AAwBD,CA9FM;AAkGP,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BP,EAAAA,WAAW,EAAE;AACXQ,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,KAAK,EAAEpD,MAAM,CAACqD,MAHH;AAIXC,IAAAA,UAAU,EAAE;AAJD,GALkB;AAW/BX,EAAAA,QAAQ,EAAE;AACRO,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,UAAU,EAAE,KAFJ;AAGRC,IAAAA,KAAK,EAAEpD,MAAM,CAACqD,MAHN;AAIRC,IAAAA,UAAU,EAAE;AAJJ,GAXqB;AAiB7BV,EAAAA,yBAAyB,EAAE;AAC3BW,IAAAA,SAAS,EAAE,EADgB;AAE3BC,IAAAA,UAAU,EAAE;AAFe,GAjBE;AAqB7BX,EAAAA,MAAM,EAAE;AACRY,IAAAA,KAAK,EAAE,KADC;AAERC,IAAAA,cAAc,EAAE,QAFR;AAGRF,IAAAA,UAAU,EAAE,QAHJ;AAIRG,IAAAA,SAAS,EAAE,QAJH;AAKRJ,IAAAA,SAAS,EAAE,CALH;AAMRN,IAAAA,eAAe,EAAEjD,MAAM,CAAC4D,GANhB;AAORC,IAAAA,OAAO,EAAE,EAPD;AAQRC,IAAAA,YAAY,EAAE;AARN;AArBqB,CAAlB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { Text, StyleSheet } from 'react-native';\nimport { signOut } from 'firebase/auth';\nimport {Colors, auth, db} from '../config';\nimport { View, Button} from '../components';\nimport { getDatabase, ref, set, update, child, get } from \"firebase/database\";\nimport { collection, getDoc, addDoc, setDoc, doc } from \"firebase/firestore\"; \n\n\nexport const HomeScreen = ({ navigation }) => {\n  \n  \n  //no longer used\n  function writeUser(){\n    const userId = auth.currentUser.uid;    \n    const db = getDatabase();\n    set(ref(db, 'users/' + userId),{\n      username: auth.currentUser.email,\n      type: \"customer\"\n    });\n    console.log(\"complete\");\n  }\n\n  \n\n  function fetchUserType(){\n    getDoc(doc(db, \"Users\", auth.currentUser.uid)).then(docSnap => {\n      if (docSnap.exists()) {\n        //console.log(\"Document data:\", docSnap.data());\n        if(docSnap.data().type == 'customer'){\n          navigation.navigate('CustomerHomeScreen');\n        }\n        if(docSnap.data().type == 'admin'){\n          navigation.navigate('TheaterHomeScreen');\n        }\n      } else {\n        console.log(\"No such document!\");\n      }\n    })\n\n  }\n\n  //no longer used\n  function readUsers(){\n    const userId = auth.currentUser.uid;    \n    const dbRef = ref(getDatabase());\n    get(child(dbRef, `users/${userId}`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        //fetches the user type:\n        console.log(snapshot.val().type);\n        if(snapshot.val().type == 'customer'){\n          navigation.navigate('CustomerHomeScreen');\n          console.log(snapshot.val());\n        }\n        if(snapshot.val().type == 'admin'){\n          navigation.navigate('TheaterHomeScreen');\n        }\n        //console.log(snapshot.val());\n      } else {\n        console.log(\"No data available\");\n     }\n    }).catch((error) => {\n  console.error(error);\n    });\n\n\n  }\n\n \n  \n\n  useEffect(() => {\n   fetchUserType();\n  });\n\n\n  const handleLogout = () => {\n    signOut(auth).catch(error => console.log('Error logging out: ', error));\n  };\n  return (\n\n   \n    <View style={styles.container}>\n      <Text style={styles.screenTitle}>PopGrammers</Text>\n      <Text style={styles.bodyText}>You have been successfully logged in, More to come...</Text>\n      {/* Button for Log out */}\n          <Button style={styles.borderlessButtonContainer} borderless\n          title={'Log Out?'}\n          onPress={handleLogout} />\n\n          <Button style={styles.button} borderless\n          title={'Write User'}\n          onPress = {writeUser}/>\n\n          <Button style={styles.button} borderless\n          title={'Read Users'}\n          onPress = {readUsers}/>\n\n          <Button style={styles.button} borderless\n          title={'Next Page'}\n          onPress = {() => navigation.navigate('InventoryScreen')}/>\n    </View>\n  );\n};\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1, \n    backgroundColor: 'black'\n  },\n  screenTitle: {\n    fontSize: 32,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 20\n  },\n  bodyText: {\n    fontSize: 20,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 20\n  },\n    borderlessButtonContainer: {\n    marginTop: 16, \n    alignItems: 'center',\n  },\n    button: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.red,\n    padding: 10,\n    borderRadius: 8,\n  }\n\n});"]},"metadata":{},"sourceType":"module"}