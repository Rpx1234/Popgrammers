{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Formik } from 'formik';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { View, TextInput, Button, FormErrorMessage } from \"../components\";\nimport { Images, Colors, auth } from \"../config\";\nimport { Picker } from \"@react-native-picker/picker\";\nexport var OrderScreen = function OrderScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('Unknown'),\n      _useState2 = _slicedToArray(_useState, 2),\n      order = _useState2[0],\n      setOrder = _useState2[1];\n\n  var COL = 5;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.screenTitle\n  }, \"New Order\"), React.createElement(Text, {\n    style: styles.text\n  }, \" Ticket Order\"), React.createElement(Picker, {\n    selectedValue: order,\n    onValueChange: function onValueChange(value, index) {\n      return setOrder(value);\n    },\n    mode: \"dropdown\",\n    style: styles.picker\n  }, React.createElement(Picker.Item, {\n    label: \"Please select your Order\",\n    value: \"Unknown\"\n  }), React.createElement(Picker.Item, {\n    label: \"Theater1\",\n    value: \"Theater 1 5PM\"\n  }), React.createElement(Picker.Item, {\n    label: \"Theater2\",\n    value: \"Theater 2 5PM\"\n  })), React.createElement(View, {\n    style: styles.containerseats\n  }, React.createElement(Button, {\n    style: styles.button\n  }), React.createElement(Button, {\n    style: styles.button\n  }), React.createElement(Button, {\n    style: styles.button\n  }), React.createElement(Button, {\n    style: styles.button\n  }), React.createElement(Button, {\n    style: styles.button\n  }), React.createElement(Button, {\n    style: styles.button\n  }), React.createElement(Button, {\n    style: styles.button\n  })), React.createElement(Button, {\n    style: styles.borderlessButtonContainer,\n    borderless: true,\n    title: 'Cancel Order',\n    onPress: function onPress() {\n      return navigation.navigate('CustomerHomeScreen');\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    paddingHorizontal: 12,\n    alignItems: 'center'\n  },\n  logoContainer: {\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10\n  },\n  button: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8,\n    marginRight: 8\n  },\n  buttontaken: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.blue,\n    padding: 10,\n    borderRadius: 8,\n    marginRight: 8\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700'\n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center'\n  },\n  picker: {\n    marginVertical: 30,\n    width: 300,\n    padding: 10,\n    borderWidth: 5,\n    color: Colors.black,\n    backgroundColor: 'white'\n  },\n  containerseats: {\n    flexDirection: 'row',\n    flex: 1,\n    alignContent: 'space-around',\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Owner/Downloads/Popgrammers/Code/AlphaV2/screens/OrderScreen.js"],"names":["React","useState","useRef","Formik","KeyboardAwareScrollView","View","TextInput","Button","FormErrorMessage","Images","Colors","auth","Picker","OrderScreen","navigation","order","setOrder","COL","styles","container","screenTitle","text","value","index","picker","containerseats","button","borderlessButtonContainer","navigate","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignItems","logoContainer","fontSize","fontWeight","color","orange","paddingTop","width","height","marginTop","padding","borderRadius","marginRight","buttontaken","blue","buttonText","white","marginVertical","borderWidth","black","flexDirection","alignContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,gBAAlC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAE7C,kBAA0Bb,QAAQ,CAAC,SAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,GAAG,GAAG,CAAZ;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,iBADF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGF,MAAM,CAACG;AAArB,qBAHF,EAIE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEN,KADjB;AAEE,IAAA,aAAa,EAAE,uBAACO,KAAD,EAAQC,KAAR;AAAA,aAAkBP,QAAQ,CAACM,KAAD,CAA1B;AAAA,KAFjB;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEJ,MAAM,CAACM;AAJhB,KAME,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,0BAAnB;AAA8C,IAAA,KAAK,EAAC;AAApD,IANF,EAOE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC;AAApC,IAPF,EAQE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC;AAApC,IARF,CAJF,EAeH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAAtB,IADF,EAGU,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB,IAHV,EAKU,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB,IALV,EAOU,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB,IAPV,EASU,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB,IATV,EAWU,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB,IAXV,EAaU,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB,IAbV,CAfG,EAgCE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,MAAM,CAACS,yBAAtB;AAAiD,IAAA,UAAU,MAA3D;AACE,IAAA,KAAK,EAAE,cADT;AAEA,IAAA,OAAO,EAAI;AAAA,aAAMb,UAAU,CAACc,QAAX,CAAoB,oBAApB,CAAN;AAAA;AAFX,IAhCF,CADF;AAsCD,CA5CM;AA8CP,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACZY,IAAAA,IAAI,EAAE,CADM;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,UAAU,EAAE;AAJH,GADoB;AAO/BC,EAAAA,aAAa,EAAE;AACbD,IAAAA,UAAU,EAAE;AADC,GAPgB;AAU/Bd,EAAAA,WAAW,EAAE;AACXgB,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,KAAK,EAAE5B,MAAM,CAAC6B,MAHH;AAIXC,IAAAA,UAAU,EAAE;AAJD,GAVkB;AAgB/BnB,EAAAA,IAAI,EAAE;AACJe,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,KAAK,EAAE5B,MAAM,CAAC6B,MAHV;AAIJC,IAAAA,UAAU,EAAE;AAJR,GAhByB;AAsB/Bd,EAAAA,MAAM,EAAE;AACNe,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,SAAS,EAAE,CAHL;AAINX,IAAAA,eAAe,EAAEtB,MAAM,CAAC6B,MAJlB;AAKNK,IAAAA,OAAO,EAAE,EALH;AAMNC,IAAAA,YAAY,EAAE,CANR;AAONC,IAAAA,WAAW,EAAC;AAPN,GAtBuB;AA+B/BC,EAAAA,WAAW,EAAE;AACXN,IAAAA,KAAK,EAAE,KADI;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,SAAS,EAAE,CAHA;AAIXX,IAAAA,eAAe,EAAEtB,MAAM,CAACsC,IAJb;AAKXJ,IAAAA,OAAO,EAAE,EALE;AAMXC,IAAAA,YAAY,EAAE,CANH;AAOXC,IAAAA,WAAW,EAAC;AAPD,GA/BkB;AAwC/BG,EAAAA,UAAU,EAAE;AACVb,IAAAA,QAAQ,EAAE,EADA;AAEVE,IAAAA,KAAK,EAAE5B,MAAM,CAACwC,KAFJ;AAGVb,IAAAA,UAAU,EAAE;AAHF,GAxCmB;AA8C/BV,EAAAA,yBAAyB,EAAE;AACzBgB,IAAAA,SAAS,EAAE,EADc;AAEzBT,IAAAA,UAAU,EAAE;AAFa,GA9CI;AAkD/BV,EAAAA,MAAM,EAAE;AACN2B,IAAAA,cAAc,EAAE,EADV;AAENV,IAAAA,KAAK,EAAE,GAFD;AAGNG,IAAAA,OAAO,EAAE,EAHH;AAINQ,IAAAA,WAAW,EAAE,CAJP;AAKNd,IAAAA,KAAK,EAAE5B,MAAM,CAAC2C,KALR;AAMNrB,IAAAA,eAAe,EAAE;AANX,GAlDuB;AA0DhCP,EAAAA,cAAc,EAAE;AAChB6B,IAAAA,aAAa,EAAE,KADC;AAEhBvB,IAAAA,IAAI,EAAE,CAFU;AAGhBwB,IAAAA,YAAY,EAAE,cAHE;AAIhBX,IAAAA,OAAO,EAAE;AAJO;AA1DgB,CAAlB,CAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Text, StyleSheet, SafeAreaView } from 'react-native';\nimport { Formik } from 'formik';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { View, TextInput, Button, FormErrorMessage } from '../components';\nimport { Images, Colors, auth } from '../config';\nimport { Picker } from \"@react-native-picker/picker\";\n\nexport const OrderScreen = ({ navigation }) => {\n  \n  const [order, setOrder] = useState('Unknown');\n  const COL = 5;\n  \t\n  \n  return (   \n    <View style={styles.container}>\n      <Text style={styles.screenTitle}>New Order</Text>\n    {/* Theater Selection */} \n      <Text style ={styles.text}> Ticket Order</Text>\n      <Picker\n        selectedValue={order}\n        onValueChange={(value, index) => setOrder(value)}\n        mode=\"dropdown\" // Android only\n        style={styles.picker}\n      >\n        <Picker.Item label=\"Please select your Order\" value=\"Unknown\" />\n        <Picker.Item label=\"Theater1\" value=\"Theater 1 5PM\" />\n        <Picker.Item label=\"Theater2\" value=\"Theater 2 5PM\" />\n      </Picker>\n\t{/* Seat Animation */}\t\n\t<View style={styles.containerseats}>\n\t\t\t<Button style={styles.button}>\n          \t</Button>\n          \t<Button style={styles.button}>\n          \t</Button>\n          \t<Button style={styles.button} >\n          \t</Button>\n          \t<Button style={styles.button} >\n          \t</Button>\n          \t<Button style={styles.button} >\n          \t</Button>\n          \t<Button style={styles.button} >\n          \t</Button>\n          \t<Button style={styles.button} >\n          \t</Button>\n\t</View>\n    {/* Buttons */}\n      <Button style={styles.borderlessButtonContainer} borderless\n        title={'Cancel Order'}\n      onPress = {() => navigation.navigate('CustomerHomeScreen')} />\n    </View>\n  );\n};\n        \nconst styles = StyleSheet.create({\n  container: {\n\tflex: 1,\n    backgroundColor: 'black',\n    paddingHorizontal: 12,\n    alignItems: 'center'\n  },\n  logoContainer: {\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.orange,\n    paddingTop: 10\n  },\n  button: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.orange,\n    padding: 10,\n    borderRadius: 8,\n    marginRight:8\n  },\n  buttontaken: {\n    width: '10%',\n    height: 18,\n    marginTop: 8,\n    backgroundColor: Colors.blue,\n    padding: 10,\n    borderRadius: 8,\n    marginRight:8\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700',\n\n  },\n  borderlessButtonContainer: {\n    marginTop: 16, \n    alignItems: 'center',\n  },\n  picker: {\n    marginVertical: 30,\n    width: 300,\n    padding: 10,\n    borderWidth: 5,\n    color: Colors.black,\n    backgroundColor: 'white',\n \t},\n containerseats: {\n\tflexDirection: 'row',\n\tflex: 1,\n\talignContent: 'space-around',\n\tpadding: 5\n},\n  });"]},"metadata":{},"sourceType":"module"}