{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nexport default function useEventEmitter(listen) {\n  var listenRef = React.useRef(listen);\n  React.useEffect(function () {\n    listenRef.current = listen;\n  });\n  var listeners = React.useRef({});\n  var create = React.useCallback(function (target) {\n    var removeListener = function removeListener(type, callback) {\n      var callbacks = listeners.current[type] ? listeners.current[type][target] : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      var index = callbacks.indexOf(callback);\n      callbacks.splice(index, 1);\n    };\n\n    var addListener = function addListener(type, callback) {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n      return function () {\n        return removeListener(type, callback);\n      };\n    };\n\n    return {\n      addListener: addListener,\n      removeListener: removeListener\n    };\n  }, []);\n  var emit = React.useCallback(function (_ref) {\n    var _ref2;\n\n    var _items$target, _listenRef$current;\n\n    var type = _ref.type,\n        data = _ref.data,\n        target = _ref.target,\n        canPreventDefault = _ref.canPreventDefault;\n    var items = listeners.current[type] || {};\n    var callbacks = target !== undefined ? (_items$target = items[target]) === null || _items$target === void 0 ? void 0 : _items$target.slice() : (_ref2 = []).concat.apply(_ref2, _toConsumableArray(Object.keys(items).map(function (t) {\n      return items[t];\n    }))).filter(function (cb, i, self) {\n      return self.lastIndexOf(cb) === i;\n    });\n    var event = {\n      get type() {\n        return type;\n      }\n\n    };\n\n    if (target !== undefined) {\n      Object.defineProperty(event, 'target', {\n        enumerable: true,\n        get: function get() {\n          return target;\n        }\n      });\n    }\n\n    if (data !== undefined) {\n      Object.defineProperty(event, 'data', {\n        enumerable: true,\n        get: function get() {\n          return data;\n        }\n      });\n    }\n\n    if (canPreventDefault) {\n      var defaultPrevented = false;\n      Object.defineProperties(event, {\n        defaultPrevented: {\n          enumerable: true,\n          get: function get() {\n            return defaultPrevented;\n          }\n        },\n        preventDefault: {\n          enumerable: true,\n          value: function value() {\n            defaultPrevented = true;\n          }\n        }\n      });\n    }\n\n    (_listenRef$current = listenRef.current) === null || _listenRef$current === void 0 ? void 0 : _listenRef$current.call(listenRef, event);\n    callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(function (cb) {\n      return cb(event);\n    });\n    return event;\n  }, []);\n  return React.useMemo(function () {\n    return {\n      create: create,\n      emit: emit\n    };\n  }, [create, emit]);\n}","map":{"version":3,"mappings":"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","names":["React","useEventEmitter","listen","listenRef","useRef","useEffect","current","listeners","create","useCallback","target","removeListener","type","callback","callbacks","undefined","index","indexOf","splice","addListener","push","emit","data","canPreventDefault","items","_items$target","slice","concat","Object","keys","map","t","filter","cb","i","self","lastIndexOf","event","defineProperty","enumerable","get","defaultPrevented","defineProperties","preventDefault","value","forEach","useMemo"],"sources":["useEventEmitter.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { EventArg, EventConsumer, EventEmitter } from './types';\n\nexport type NavigationEventEmitter<T extends Record<string, any>> =\n  EventEmitter<T> & {\n    create: (target: string) => EventConsumer<T>;\n  };\n\ntype Listeners = ((e: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter<T extends Record<string, any>>(\n  listen?: (e: any) => void\n): NavigationEventEmitter<T> {\n  const listenRef = React.useRef(listen);\n\n  React.useEffect(() => {\n    listenRef.current = listen;\n  });\n\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>({});\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      callbacks.splice(index, 1);\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      return () => removeListener(type, callback);\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target]?.slice()\n          : ([] as Listeners)\n              .concat(...Object.keys(items).map((t) => items[t]))\n              .filter((cb, i, self) => self.lastIndexOf(cb) === i);\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (target !== undefined) {\n        Object.defineProperty(event, 'target', {\n          enumerable: true,\n          get() {\n            return target;\n          },\n        });\n      }\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          enumerable: true,\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            enumerable: true,\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            enumerable: true,\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      listenRef.current?.(event);\n\n      callbacks?.forEach((cb) => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n"]},"metadata":{},"sourceType":"module"}