{"ast":null,"code":"export default function isRecordEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every(function (key) {\n    return a[key] === b[key];\n  });\n}","map":{"version":3,"mappings":"AAGA,eAAe,SAASA,aAAT,CACbC,CADa,EAEbC,CAFa,EAGb;AACA,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAPD,CAAYH,CAAZG,CAAd;AACA,MAAME,KAAK,GAAGF,MAAM,CAACC,IAAPD,CAAYF,CAAZE,CAAd;;AAEA,MAAID,KAAK,CAACI,MAANJ,KAAiBG,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD;;AAED,SAAOJ,KAAK,CAACK,KAANL,CAAaM,aAAD;AAAA,WAASR,CAAC,CAACQ,GAAD,CAADR,KAAWC,CAAC,CAACO,GAAD,CAArB;AAAA,GAAZN,CAAP;AACD","names":["isRecordEqual","a","b","aKeys","Object","keys","bKeys","length","every","key"],"sources":["isRecordEqual.tsx"],"sourcesContent":["/**\n * Compare two records with primitive values as the content.\n */\nexport default function isRecordEqual(\n  a: Record<string, any>,\n  b: Record<string, any>\n) {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every((key) => a[key] === b[key]);\n}\n"]},"metadata":{},"sourceType":"module"}