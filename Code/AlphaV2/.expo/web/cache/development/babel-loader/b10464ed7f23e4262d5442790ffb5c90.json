{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mzatorski/Projects/react-native-text/src/index.tsx\";\nimport React, { useMemo } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar DEVICE_BASE_WIDTH = 375;\nvar FONT_SIZE = 14;\nvar REAL_WIDTH = height > width ? width : height;\nexport var scaleText = function scaleText(_ref) {\n  var _ref$deviceBaseWidth = _ref.deviceBaseWidth,\n      deviceBaseWidth = _ref$deviceBaseWidth === void 0 ? DEVICE_BASE_WIDTH : _ref$deviceBaseWidth,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? FONT_SIZE : _ref$fontSize,\n      _ref$lineHeight = _ref.lineHeight,\n      lineHeight = _ref$lineHeight === void 0 ? fontSize * 1.2 : _ref$lineHeight;\n  return {\n    fontSize: Math.round(fontSize * REAL_WIDTH / deviceBaseWidth),\n    lineHeight: Math.round(lineHeight * REAL_WIDTH / deviceBaseWidth)\n  };\n};\nexport var useScaleText = function useScaleText(_ref2) {\n  var _ref2$deviceBaseWidth = _ref2.deviceBaseWidth,\n      deviceBaseWidth = _ref2$deviceBaseWidth === void 0 ? DEVICE_BASE_WIDTH : _ref2$deviceBaseWidth,\n      _ref2$fontSize = _ref2.fontSize,\n      fontSize = _ref2$fontSize === void 0 ? FONT_SIZE : _ref2$fontSize,\n      _ref2$lineHeight = _ref2.lineHeight,\n      lineHeight = _ref2$lineHeight === void 0 ? fontSize * 1.2 : _ref2$lineHeight;\n  return useMemo(function () {\n    return {\n      fontSize: Math.round(fontSize * REAL_WIDTH / deviceBaseWidth),\n      lineHeight: Math.round(lineHeight * REAL_WIDTH / deviceBaseWidth)\n    };\n  }, [deviceBaseWidth, fontSize, lineHeight]);\n};\n\nvar ScalableText = function ScalableText(_ref3) {\n  var deviceBaseWidth = _ref3.deviceBaseWidth,\n      _ref3$style = _ref3.style,\n      style = _ref3$style === void 0 ? {} : _ref3$style,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"deviceBaseWidth\", \"style\", \"children\"]);\n\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n      fontSize = _StyleSheet$flatten.fontSize,\n      lineHeight = _StyleSheet$flatten.lineHeight;\n\n  var _useScaleText = useScaleText({\n    deviceBaseWidth: deviceBaseWidth,\n    fontSize: fontSize,\n    lineHeight: lineHeight\n  }),\n      scaledText = _extends({}, _useScaleText);\n\n  return React.createElement(Text, _extends({\n    style: StyleSheet.flatten([style, scaledText])\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }), children);\n};\n\nexport default ScalableText;","map":{"version":3,"sources":["index.tsx"],"names":["width","height","Dimensions","DEVICE_BASE_WIDTH","FONT_SIZE","REAL_WIDTH","scaleText","deviceBaseWidth","fontSize","lineHeight","Math","useScaleText","useMemo","ScalableText","style","children","props","StyleSheet","scaledText"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport { Dimensions, Text, StyleSheet, TextStyle, TextProps } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\n\nconst DEVICE_BASE_WIDTH = 375; // iPhone 6 width\nconst FONT_SIZE = 14;\nconst REAL_WIDTH = height > width ? width : height;\n\ntype ScaleText = {\n  deviceBaseWidth?: number;\n  fontSize?: number;\n  lineHeight?: number;\n  realWidth?: number;\n};\n\nexport const scaleText = ({\n  deviceBaseWidth = DEVICE_BASE_WIDTH,\n  fontSize = FONT_SIZE,\n  lineHeight = fontSize * 1.2, // Default line height is 120% of the font size.\n}: ScaleText) => {\n  return {\n    fontSize: Math.round((fontSize * REAL_WIDTH) / deviceBaseWidth),\n    lineHeight: Math.round((lineHeight * REAL_WIDTH) / deviceBaseWidth),\n  };\n};\n\nexport const useScaleText = ({\n  deviceBaseWidth = DEVICE_BASE_WIDTH,\n  fontSize = FONT_SIZE,\n  lineHeight = fontSize * 1.2, // Default line height is 120% of the font size.\n}: ScaleText) => {\n  return useMemo(() => {\n    return {\n      fontSize: Math.round((fontSize * REAL_WIDTH) / deviceBaseWidth),\n      lineHeight: Math.round((lineHeight * REAL_WIDTH) / deviceBaseWidth),\n    };\n  }, [deviceBaseWidth, fontSize, lineHeight]);\n};\n\ninterface Props extends TextProps {\n  deviceBaseWidth?: number;\n  style?: TextStyle;\n}\n\nconst ScalableText: FunctionComponent<Props> = ({\n  deviceBaseWidth,\n  style = {},\n  children,\n  ...props\n}) => {\n  const { fontSize, lineHeight } = StyleSheet.flatten(style);\n  const { ...scaledText } = useScaleText({ deviceBaseWidth, fontSize, lineHeight });\n\n  return (\n    <Text style={StyleSheet.flatten([style, scaledText])} {...props}>\n      {children}\n    </Text>\n  );\n};\n\nexport default ScalableText;\n"]},"metadata":{},"sourceType":"module"}