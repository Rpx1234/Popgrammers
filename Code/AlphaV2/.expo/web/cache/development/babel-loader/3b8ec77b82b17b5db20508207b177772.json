{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mzatorski/Projects/react-native-text/src/index.tsx\";\nimport React, { useMemo } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar DEVICE_BASE_WIDTH = 375;\nvar FONT_SIZE = 14;\nvar REAL_WIDTH = height > width ? width : height;\nexport var scaleText = function scaleText(_ref) {\n  var _ref$deviceBaseWidth = _ref.deviceBaseWidth,\n      deviceBaseWidth = _ref$deviceBaseWidth === void 0 ? DEVICE_BASE_WIDTH : _ref$deviceBaseWidth,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? FONT_SIZE : _ref$fontSize,\n      _ref$lineHeight = _ref.lineHeight,\n      lineHeight = _ref$lineHeight === void 0 ? fontSize * 1.2 : _ref$lineHeight;\n  return {\n    fontSize: Math.round(fontSize * REAL_WIDTH / deviceBaseWidth),\n    lineHeight: Math.round(lineHeight * REAL_WIDTH / deviceBaseWidth)\n  };\n};\nexport var useScaleText = function useScaleText(_ref2) {\n  var _ref2$deviceBaseWidth = _ref2.deviceBaseWidth,\n      deviceBaseWidth = _ref2$deviceBaseWidth === void 0 ? DEVICE_BASE_WIDTH : _ref2$deviceBaseWidth,\n      _ref2$fontSize = _ref2.fontSize,\n      fontSize = _ref2$fontSize === void 0 ? FONT_SIZE : _ref2$fontSize,\n      _ref2$lineHeight = _ref2.lineHeight,\n      lineHeight = _ref2$lineHeight === void 0 ? fontSize * 1.2 : _ref2$lineHeight;\n  return useMemo(function () {\n    return {\n      fontSize: Math.round(fontSize * REAL_WIDTH / deviceBaseWidth),\n      lineHeight: Math.round(lineHeight * REAL_WIDTH / deviceBaseWidth)\n    };\n  }, [deviceBaseWidth, fontSize, lineHeight]);\n};\n\nvar ScalableText = function ScalableText(_ref3) {\n  var deviceBaseWidth = _ref3.deviceBaseWidth,\n      _ref3$style = _ref3.style,\n      style = _ref3$style === void 0 ? {} : _ref3$style,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"deviceBaseWidth\", \"style\", \"children\"]);\n\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n      fontSize = _StyleSheet$flatten.fontSize,\n      lineHeight = _StyleSheet$flatten.lineHeight;\n\n  var _useScaleText = useScaleText({\n    deviceBaseWidth: deviceBaseWidth,\n    fontSize: fontSize,\n    lineHeight: lineHeight\n  }),\n      scaledText = _extends({}, _useScaleText);\n\n  return React.createElement(Text, _extends({\n    style: StyleSheet.flatten([style, scaledText])\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }), children);\n};\n\nexport default ScalableText;","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,OAAnC,QAAkD,OAAlD;;;;;sBAG0BC,UAAU,CAACC,GAAXD,CAAe,QAAfA,C;IAAlBE,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AAEf,IAAMC,iBAAiB,GAAG,GAA1B;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAGH,MAAM,GAAGD,KAATC,GAAiBD,KAAjBC,GAAyBA,MAA5C;AASA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAIR;AAAA,kCAHfC,eAGe;AAAA,MAHfA,eAGe,qCAHGJ,iBAGH;AAAA,2BAFfK,QAEe;AAAA,MAFfA,QAEe,8BAFJJ,SAEI;AAAA,6BADfK,UACe;AAAA,MADfA,UACe,gCADFD,QAAQ,GAAG,GACT;AACf,SAAO;AACLA,YAAQ,EAAEE,IAAI,CAACC,KAALD,CAAYF,QAAQ,GAAGH,UAAXG,GAAyBD,eAArCG,CADL;AAELD,cAAU,EAAEC,IAAI,CAACC,KAALD,CAAYD,UAAU,GAAGJ,UAAbI,GAA2BF,eAAvCG;AAFP,GAAP;AALK;AAWP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,QAIX;AAAA,oCAHfL,eAGe;AAAA,MAHfA,eAGe,sCAHGJ,iBAGH;AAAA,6BAFfK,QAEe;AAAA,MAFfA,QAEe,+BAFJJ,SAEI;AAAA,+BADfK,UACe;AAAA,MADfA,UACe,iCADFD,QAAQ,GAAG,GACT;AACf,SAAOV,OAAO,CAAC,YAAM;AACnB,WAAO;AACLU,cAAQ,EAAEE,IAAI,CAACC,KAALD,CAAYF,QAAQ,GAAGH,UAAXG,GAAyBD,eAArCG,CADL;AAELD,gBAAU,EAAEC,IAAI,CAACC,KAALD,CAAYD,UAAU,GAAGJ,UAAbI,GAA2BF,eAAvCG;AAFP,KAAP;AADY,KAKX,CAACH,eAAD,EAAkBC,QAAlB,EAA4BC,UAA5B,CALW,CAAd;AALK;;AAkBP,IAAMI,YAAsC,GAAG,SAAzCA,YAAyC,QAKzC;AAAA,MAJJN,eAII,SAJJA,eAII;AAAA,0BAHJO,KAGI;AAAA,MAHJA,KAGI,4BAHI,EAGJ;AAAA,MAFJC,QAEI,SAFJA,QAEI;AAAA,MADDC,KACC;;AAAA,4BAC6BC,UAAU,CAACC,OAAXD,CAAmBH,KAAnBG,CAD7B;AAAA,MACIT,QADJ,uBACIA,QADJ;AAAA,MACcC,UADd,uBACcA,UADd;;AAAA,sBAEsBG,YAAY,CAAC;AAAEL,mBAAe,EAAfA,eAAF;AAAmBC,YAAQ,EAARA,QAAnB;AAA6BC,cAAU,EAAVA;AAA7B,GAAD,CAFlC;AAAA,MAEOU,UAFP;;AAIJ,SACEtB,oBAACuB,IAAD;AAAMN,SAAK,EAAEG,UAAU,CAACC,OAAXD,CAAmB,CAACH,KAAD,EAAQK,UAAR,CAAnBF;AAAb,KAA0DD,KAA1D;AAAAK;AAAAC;AAAAC;AAAA;AAAA,MACGR,QADH,CADF;AATF;;AAgBA,eAAeF,YAAf","names":["React","useMemo","Dimensions","get","width","height","DEVICE_BASE_WIDTH","FONT_SIZE","REAL_WIDTH","scaleText","deviceBaseWidth","fontSize","lineHeight","Math","round","useScaleText","ScalableText","style","children","props","StyleSheet","flatten","scaledText","Text","__source","fileName","lineNumber"],"sources":["index.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport { Dimensions, Text, StyleSheet, TextStyle, TextProps } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\n\nconst DEVICE_BASE_WIDTH = 375; // iPhone 6 width\nconst FONT_SIZE = 14;\nconst REAL_WIDTH = height > width ? width : height;\n\ntype ScaleText = {\n  deviceBaseWidth?: number;\n  fontSize?: number;\n  lineHeight?: number;\n  realWidth?: number;\n};\n\nexport const scaleText = ({\n  deviceBaseWidth = DEVICE_BASE_WIDTH,\n  fontSize = FONT_SIZE,\n  lineHeight = fontSize * 1.2, // Default line height is 120% of the font size.\n}: ScaleText) => {\n  return {\n    fontSize: Math.round((fontSize * REAL_WIDTH) / deviceBaseWidth),\n    lineHeight: Math.round((lineHeight * REAL_WIDTH) / deviceBaseWidth),\n  };\n};\n\nexport const useScaleText = ({\n  deviceBaseWidth = DEVICE_BASE_WIDTH,\n  fontSize = FONT_SIZE,\n  lineHeight = fontSize * 1.2, // Default line height is 120% of the font size.\n}: ScaleText) => {\n  return useMemo(() => {\n    return {\n      fontSize: Math.round((fontSize * REAL_WIDTH) / deviceBaseWidth),\n      lineHeight: Math.round((lineHeight * REAL_WIDTH) / deviceBaseWidth),\n    };\n  }, [deviceBaseWidth, fontSize, lineHeight]);\n};\n\ninterface Props extends TextProps {\n  deviceBaseWidth?: number;\n  style?: TextStyle;\n}\n\nconst ScalableText: FunctionComponent<Props> = ({\n  deviceBaseWidth,\n  style = {},\n  children,\n  ...props\n}) => {\n  const { fontSize, lineHeight } = StyleSheet.flatten(style);\n  const { ...scaledText } = useScaleText({ deviceBaseWidth, fontSize, lineHeight });\n\n  return (\n    <Text style={StyleSheet.flatten([style, scaledText])} {...props}>\n      {children}\n    </Text>\n  );\n};\n\nexport default ScalableText;\n"]},"metadata":{},"sourceType":"module"}