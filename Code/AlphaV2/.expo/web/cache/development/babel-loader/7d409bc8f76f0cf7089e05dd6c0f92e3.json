{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport createHandler from \"./createHandler\";\nimport { baseProps } from \"./gestureHandlers\";\nexport var nativeViewProps = [].concat(_toConsumableArray(baseProps), ['shouldActivateOnStart', 'disallowInterruption']);\nexport var NativeViewGestureHandler = createHandler({\n  name: 'NativeViewGestureHandler',\n  allowedProps: nativeViewProps,\n  config: {}\n});","map":{"version":3,"mappings":";AAAA,OAAOA,aAAP;AACA,SAAkCC,SAAlC;AAYA,OAAO,IAAMC,eAAe,gCACvBD,SADuB,IAE1B,uBAF0B,EAG1B,sBAH0B,EAArB;AAQP,OAAO,IAAME,wBAAwB,GAAGH,aAAa,CAGnD;AACAI,MAAI,EAAE,0BADN;AAEAC,cAAY,EAAEH,eAFd;AAGAI,QAAM,EAAE;AAHR,CAHmD,CAA9C","names":["createHandler","baseProps","nativeViewProps","NativeViewGestureHandler","name","allowedProps","config"],"sources":["NativeViewGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport { BaseGestureHandlerProps, baseProps } from './gestureHandlers';\n\nexport interface NativeViewGestureHandlerProps\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload> {\n  shouldActivateOnStart?: boolean;\n  disallowInterruption?: boolean;\n}\n\nexport type NativeViewGestureHandlerPayload = {\n  pointerInside: boolean;\n};\n\nexport const nativeViewProps = [\n  ...baseProps,\n  'shouldActivateOnStart',\n  'disallowInterruption',\n] as const;\n\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlers.ts file\nexport const NativeViewGestureHandler = createHandler<\n  NativeViewGestureHandlerProps,\n  NativeViewGestureHandlerPayload\n>({\n  name: 'NativeViewGestureHandler',\n  allowedProps: nativeViewProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"module"}