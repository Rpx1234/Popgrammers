{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nexport default function useOptionsGetters(_ref) {\n  var key = _ref.key,\n      options = _ref.options,\n      navigation = _ref.navigation;\n  var optionsRef = React.useRef(options);\n  var optionsGettersFromChildRef = React.useRef({});\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      onOptionsChange = _React$useContext.onOptionsChange;\n\n  var _React$useContext2 = React.useContext(NavigationStateContext),\n      parentAddOptionsGetter = _React$useContext2.addOptionsGetter;\n\n  var optionsChangeListener = React.useCallback(function () {\n    var _navigation$isFocused;\n\n    var isFocused = (_navigation$isFocused = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) !== null && _navigation$isFocused !== void 0 ? _navigation$isFocused : true;\n    var hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      var _optionsRef$current;\n\n      onOptionsChange((_optionsRef$current = optionsRef.current) !== null && _optionsRef$current !== void 0 ? _optionsRef$current : {});\n    }\n  }, [navigation, onOptionsChange]);\n  React.useEffect(function () {\n    optionsRef.current = options;\n    optionsChangeListener();\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n  var getOptionsFromListener = React.useCallback(function () {\n    for (var _key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(_key)) {\n        var _optionsGettersFromCh, _optionsGettersFromCh2;\n\n        var result = (_optionsGettersFromCh = (_optionsGettersFromCh2 = optionsGettersFromChildRef.current)[_key]) === null || _optionsGettersFromCh === void 0 ? void 0 : _optionsGettersFromCh.call(_optionsGettersFromCh2);\n\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n  var getCurrentOptions = React.useCallback(function () {\n    var _navigation$isFocused2;\n\n    var isFocused = (_navigation$isFocused2 = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) !== null && _navigation$isFocused2 !== void 0 ? _navigation$isFocused2 : true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    var optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n  React.useEffect(function () {\n    return parentAddOptionsGetter === null || parentAddOptionsGetter === void 0 ? void 0 : parentAddOptionsGetter(key, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n  var addOptionsGetter = React.useCallback(function (key, getter) {\n    optionsGettersFromChildRef.current[key] = getter;\n    optionsChangeListener();\n    return function () {\n      delete optionsGettersFromChildRef.current[key];\n      optionsChangeListener();\n    };\n  }, [optionsChangeListener]);\n  return {\n    addOptionsGetter: addOptionsGetter,\n    getCurrentOptions: getCurrentOptions\n  };\n}","map":{"version":3,"mappings":"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","names":["React","NavigationBuilderContext","NavigationStateContext","useOptionsGetters","key","options","navigation","optionsRef","useRef","optionsGettersFromChildRef","useContext","onOptionsChange","parentAddOptionsGetter","addOptionsGetter","optionsChangeListener","useCallback","isFocused","hasChildren","Object","keys","current","length","useEffect","addListener","getOptionsFromListener","hasOwnProperty","result","_optionsGettersFromCh","getCurrentOptions","optionsFromListener","getter"],"sources":["useOptionsGetters.tsx"],"sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}