{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport conditional from \"../utils/conditional\";\nvar add = Animated.add,\n    multiply = Animated.multiply;\nexport function forHorizontalIOS(_ref) {\n  var current = _ref.current,\n      next = _ref.next,\n      inverted = _ref.inverted,\n      screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: translateFocused\n      }, {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\nexport function forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n      inverted = _ref2.inverted,\n      screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n      current = _ref3.current,\n      next = _ref3.next,\n      inverted = _ref3.inverted,\n      screen = _ref3.layouts.screen,\n      insets = _ref3.insets;\n  var hasNotchIos = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS && insets.top > 20;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var isFirst = index === 0;\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, isFirst ? 0 : topOffset, (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : isFirst ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, hasNotchIos ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n      inverted = _ref4.inverted,\n      screen = _ref4.layouts.screen,\n      closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1],\n    extrapolate: 'clamp'\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n      next = _ref5.next,\n      inverted = _ref5.inverted,\n      screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n      next = _ref6.next,\n      closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  var scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.925, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.075]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\nexport function forBottomSheetAndroid(_ref7) {\n  var current = _ref7.current,\n      inverted = _ref7.inverted,\n      screen = _ref7.layouts.screen,\n      closing = _ref7.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.8, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }));\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromCenter(_ref8) {\n  var progress = _ref8.current.progress;\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1]\n      })\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp'\n      })\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"mappings":"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","names":["conditional","add","Animated","multiply","forHorizontalIOS","current","next","inverted","screen","layouts","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","hasNotchIos","Platform","OS","isPad","isTVOS","top","isLandscape","topOffset","statusBarHeight","aspectRatio","isFirst","scale","borderRadius","overflow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forBottomSheetAndroid","forFadeFromCenter","forNoAnimation"],"sources":["CardStyleInterpolators.tsx"],"sourcesContent":["import { Animated, Platform } from 'react-native';\n\nimport type {\n  StackCardInterpolatedStyle,\n  StackCardInterpolationProps,\n} from '../types';\nimport conditional from '../utils/conditional';\n\nconst { add, multiply } = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.width, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const translateUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.width * -0.3],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateX: translateFocused },\n        // Translation for the animation of the card on top of this\n        { translateX: translateUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n    shadowStyle: { shadowOpacity },\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS({\n  current,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  return {\n    cardStyle: {\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS({\n  index,\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n  insets,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const hasNotchIos =\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    !Platform.isTVOS &&\n    insets.top > 20;\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const isFirst = index === 0;\n\n  const translateY = multiply(\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [\n        screen.height,\n        isFirst ? 0 : topOffset,\n        (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio,\n      ],\n    }),\n    inverted\n  );\n\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1],\n  });\n\n  const scale = isLandscape\n    ? 1\n    : progress.interpolate({\n        inputRange: [0, 1, 2],\n        outputRange: [\n          1,\n          1,\n          screen.width ? 1 - (topOffset * 2) / screen.width : 1,\n        ],\n      });\n\n  const borderRadius = isLandscape\n    ? 0\n    : isFirst\n    ? progress.interpolate({\n        inputRange: [0, 1, 1.0001, 2],\n        outputRange: [0, 0, hasNotchIos ? 38 : 0, 10],\n      })\n    : 10;\n\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      // We don't need these for the animation\n      // But different border radius for corners improves animation perf\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{ translateY }, { scale }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.08, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 0.5, 0.9, 1],\n      outputRange: [0, 0.25, 0.7, 1],\n      extrapolate: 'clamp',\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const containerTranslateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * (95.9 / 100) * -1, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.height * (2 / 100) * -1],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{ translateY: containerTranslateY }],\n    },\n    cardStyle: {\n      transform: [\n        { translateY: cardTranslateYFocused },\n        { translateY: cardTranslateYUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style zoom for Android 10.\n */\nexport function forScaleFromCenterAndroid({\n  current,\n  next,\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0],\n  });\n\n  const scale = conditional(\n    closing,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.925, 1],\n      extrapolate: 'clamp',\n    }),\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [0.85, 1, 1.075],\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ scale }],\n    },\n  };\n}\n\n/**\n * Standard bottom sheet slide in from the bottom for Android.\n */\nexport function forBottomSheetAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.8, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    })\n  );\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Simple fade animation for dialogs\n */\nexport function forFadeFromCenter({\n  current: { progress },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1],\n      }),\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp',\n      }),\n    },\n  };\n}\n\nexport function forNoAnimation(): StackCardInterpolatedStyle {\n  return {};\n}\n"]},"metadata":{},"sourceType":"module"}