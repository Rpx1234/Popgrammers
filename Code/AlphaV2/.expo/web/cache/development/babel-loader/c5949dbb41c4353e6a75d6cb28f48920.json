{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Formik } from 'formik';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { View, TextInput, Logo, Button, FormErrorMessage } from \"../components\";\nimport { Images, Colors, auth } from \"../config\";\nimport { useTogglePasswordVisibility } from \"../hooks\";\nimport { loginValidationSchema } from \"../utils\";\nexport var LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorState = _useState2[0],\n      setErrorState = _useState2[1];\n\n  var _useTogglePasswordVis = useTogglePasswordVisibility(),\n      passwordVisibility = _useTogglePasswordVis.passwordVisibility,\n      handlePasswordVisibility = _useTogglePasswordVis.handlePasswordVisibility,\n      rightIcon = _useTogglePasswordVis.rightIcon;\n\n  var handleLogin = function handleLogin(values) {\n    var email = values.email,\n        password = values.password;\n    signInWithEmailAndPassword(auth, email, password).catch(function (error) {\n      return setErrorState(error.message);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    isSafe: true,\n    style: styles.container\n  }, React.createElement(KeyboardAwareScrollView, {\n    enableOnAndroid: true\n  }, React.createElement(View, {\n    style: styles.logoContainer\n  }, React.createElement(Logo, {\n    uri: Images.logo\n  }), React.createElement(Text, {\n    style: styles.screenTitle\n  }, \"Hello! Welcome to the Popgrammers app.\"), React.createElement(Text, {\n    style: styles.screenTitle\n  }, \" Please Log in.\")), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: loginValidationSchema,\n    onSubmit: function onSubmit(values) {\n      return handleLogin(values);\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        touched = _ref2.touched,\n        errors = _ref2.errors,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur;\n    return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n      name: \"email\",\n      leftIconName: \"email\",\n      placeholder: \"Enter email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      autoFocus: true,\n      value: values.email,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email')\n    }), React.createElement(FormErrorMessage, {\n      error: errors.email,\n      visible: touched.email\n    }), React.createElement(TextInput, {\n      name: \"password\",\n      leftIconName: \"key-variant\",\n      placeholder: \"Enter password\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      secureTextEntry: passwordVisibility,\n      textContentType: \"password\",\n      rightIcon: rightIcon,\n      handlePasswordVisibility: handlePasswordVisibility,\n      value: values.password,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password')\n    }), React.createElement(FormErrorMessage, {\n      error: errors.password,\n      visible: touched.password\n    }), errorState !== '' ? React.createElement(FormErrorMessage, {\n      error: errorState,\n      visible: true\n    }) : null, React.createElement(Button, {\n      style: styles.button,\n      onPress: handleSubmit\n    }, React.createElement(Text, {\n      style: styles.buttonText\n    }, \"Login\")));\n  }), React.createElement(Button, {\n    style: styles.borderlessButtonContainer,\n    borderless: true,\n    title: 'Create a new account?',\n    onPress: function onPress() {\n      return navigation.navigate('Signup');\n    }\n  }))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'cornflowerblue',\n    paddingHorizontal: 12\n  },\n  logoContainer: {\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.red,\n    paddingTop: 10\n  },\n  footer: {\n    backgroundColor: Colors.white,\n    paddingHorizontal: 12,\n    paddingBottom: 48,\n    alignItems: 'center'\n  },\n  footerText: {\n    fontSize: 14,\n    fontWeight: '700',\n    color: Colors.orange\n  },\n  button: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.red,\n    padding: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700'\n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Text: {\n    fontSize: 14,\n    color: Colors.red,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Owner/Downloads/Popgrammers/Code/AlphaV2/screens/LoginScreen.js"],"names":["React","useState","Formik","signInWithEmailAndPassword","KeyboardAwareScrollView","View","TextInput","Logo","Button","FormErrorMessage","Images","Colors","auth","useTogglePasswordVisibility","loginValidationSchema","LoginScreen","navigation","errorState","setErrorState","passwordVisibility","handlePasswordVisibility","rightIcon","handleLogin","values","email","password","catch","error","message","styles","container","logoContainer","logo","screenTitle","touched","errors","handleChange","handleSubmit","handleBlur","button","buttonText","borderlessButtonContainer","navigate","StyleSheet","create","flex","backgroundColor","paddingHorizontal","alignItems","fontSize","fontWeight","color","red","paddingTop","footer","white","paddingBottom","footerText","orange","width","justifyContent","marginTop","padding","borderRadius","Text","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text, StyleSheet } from 'react-native';\nimport { Formik } from 'formik';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport { View, TextInput, Logo, Button, FormErrorMessage } from '../components';\nimport { Images, Colors, auth } from '../config';\nimport { useTogglePasswordVisibility } from '../hooks';\nimport { loginValidationSchema } from '../utils';\n\nexport const LoginScreen = ({ navigation }) => {\n  const [errorState, setErrorState] = useState('');\n  const { passwordVisibility, handlePasswordVisibility, rightIcon } =\n    useTogglePasswordVisibility();\n\n  const handleLogin = values => {\n    const { email, password } = values;\n    signInWithEmailAndPassword(auth, email, password).catch(error =>\n      setErrorState(error.message)\n    );\n  };\n  return (\n    <>\n      <View isSafe style={styles.container}>\n        <KeyboardAwareScrollView enableOnAndroid={true}>\n          {/* LogoContainer: consits app logo and screen title */}\n          <View style={styles.logoContainer}>\n            <Logo uri={Images.logo} />\n            <Text style={styles.screenTitle}>Hello! Welcome to the Popgrammers app.</Text>\n            <Text style={styles.screenTitle}> Please Log in.</Text>\n          </View>\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={loginValidationSchema}\n            onSubmit={values => handleLogin(values)}\n          >\n            {({\n              values,\n              touched,\n              errors,\n              handleChange,\n              handleSubmit,\n              handleBlur\n            }) => (\n              <>\n                {/* Input fields */}\n                <TextInput\n                  name='email'\n                  leftIconName='email'\n                  placeholder='Enter email'\n                  autoCapitalize='none'\n                  keyboardType='email-address'\n                  textContentType='emailAddress'\n                  autoFocus={true}\n                  value={values.email}\n                  onChangeText={handleChange('email')}\n                  onBlur={handleBlur('email')}\n                />\n                <FormErrorMessage\n                  error={errors.email}\n                  visible={touched.email}\n                />\n                <TextInput\n                  name='password'\n                  leftIconName='key-variant'\n                  placeholder='Enter password'\n                  autoCapitalize='none'\n                  autoCorrect={false}\n                  secureTextEntry={passwordVisibility}\n                  textContentType='password'\n                  rightIcon={rightIcon}\n                  handlePasswordVisibility={handlePasswordVisibility}\n                  value={values.password}\n                  onChangeText={handleChange('password')}\n                  onBlur={handleBlur('password')}\n                />\n                <FormErrorMessage\n                  error={errors.password}\n                  visible={touched.password}\n                />\n                {/* Display Screen Error Mesages */}\n                {errorState !== '' ? (\n                  <FormErrorMessage error={errorState} visible={true} />\n                ) : null}\n                {/* Login button */}\n                <Button style={styles.button} onPress={handleSubmit}>\n                  <Text style={styles.buttonText}>Login</Text>\n                </Button>\n              </>\n            )}\n          </Formik>\n          {/* Button for signup screen */}\n          <Button style={styles.borderlessButtonContainer} borderless\n          title={'Create a new account?'}\n          onPress = {() => navigation.navigate('Signup')}\n          />\n\n        \n         \n        </KeyboardAwareScrollView>\n      </View>\n\n      \n      \n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'cornflowerblue',\n    paddingHorizontal: 12\n  },\n  logoContainer: {\n    alignItems: 'center'\n  },\n  screenTitle: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.red,\n    paddingTop: 10\n  },\n  footer: {\n    backgroundColor: Colors.white,\n    paddingHorizontal: 12,\n    paddingBottom: 48,\n    alignItems: 'center'\n  },\n  footerText: {\n    fontSize: 14,\n    fontWeight: '700',\n    color: Colors.orange\n  },\n  button: {\n    width: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 8,\n    backgroundColor: Colors.red,\n    padding: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    fontSize: 20,\n    color: Colors.white,\n    fontWeight: '700',\n    \n  },\n  borderlessButtonContainer: {\n    marginTop: 16,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Text: {\n    fontSize: 14,\n    color: Colors.red,\n    textAlign: 'center'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}